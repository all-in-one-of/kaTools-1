
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1 (Object/geo)
set _obj_geo1 = `run("opadd -e -n -v geo geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_lpetag"                 label   "LPE Tag"                 type    string                 default { "" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "lpetag" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    ordinal                 default { "off" }                 disablewhen "{ allowmotionblur == 0 }"                 menu {                     "off"       "No Velocity Blur"                     "on"        "Velocity Blur"                     "accelblur" "Acceleration Blur"                 }             }             parm {                 name    "geo_accelattribute"                 label   "Acceleration Attribute"                 type    string                 default { "accel" }                 hidewhen "{ geo_velocityblur != accelblur }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_geo1
opset -S on $_obj_geo1
chautoscope $_obj_geo1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_geo1
opexprlanguage -s hscript $_obj_geo1
opcf $_obj_geo1

# Node $_obj_geo1_crt_N (Sop/attribwrangle)
set _obj_geo1_crt_N = `run("opadd -e -n -v attribwrangle crt_N")`
oplocate -x `$arg2 + -0.75003066877705482` -y `$arg3 + -1.3664079216747509` $_obj_geo1_crt_N
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "remap"         label   "Remap"         type    ramp_flt         default { "2" }         range   { 1! 10 }     } ' $_obj_geo1_crt_N
opparm $_obj_geo1_crt_N  bindings ( 0 ) groupbindings ( 0 ) remap ( 3 )
opparm $_obj_geo1_crt_N snippet ( 'vector n1 = set(1,0,0);\nvector n2 = set(0,1,0);\n\n\nfloat grad = chramp("remap",@grad);\n@N = normalize(lerp(n1, n2, grad));' ) remap ( 3 ) remap1pos ( 0.1287263035774231 ) remap1value ( 0.30000001192092896 ) remap1interp ( bspline ) remap2pos ( 0.9620596170425415 ) remap2value ( 0.30000001192092896 ) remap2interp ( bspline ) remap3pos ( 1 ) remap3value ( 1 ) remap3interp ( bspline )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_crt_N
opexprlanguage -s hscript $_obj_geo1_crt_N
opuserdata -n '___Version___' -v '' $_obj_geo1_crt_N

# Node $_obj_geo1_push (Sop/attribwrangle)
set _obj_geo1_push = `run("opadd -e -n -v attribwrangle push")`
oplocate -x `$arg2 + 1.8760789840577079` -y `$arg3 + -2.6356368954419285` $_obj_geo1_push
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "scale"         label   "Scale"         type    float         default { "0" }         range   { 0 1 }     }     parm {         name    "remap"         label   "Remap"         type    ramp_flt         default { "2" }         range   { 1! 10 }     } ' $_obj_geo1_push
opparm $_obj_geo1_push  bindings ( 0 ) groupbindings ( 0 ) remap ( 5 )
opparm $_obj_geo1_push snippet ( 'float grad = chramp("remap",@grad);\n@P += @N * grad * ch("scale");' ) scale ( 0.10000000000000001 ) remap ( 5 ) remap1value ( 0.70999997854232788 ) remap1interp ( bspline ) remap2pos ( 0.25338754057884216 ) remap2value ( 0.95024877786636353 ) remap2interp ( bspline ) remap3pos ( 0.81707316637039185 ) remap3value ( 0.99253731966018677 ) remap3interp ( bspline ) remap4pos ( 0.94308942556381226 ) remap4value ( 0.43500000238418579 ) remap4interp ( bspline ) remap5pos ( 1 ) remap5value ( 0.14599999785423279 ) remap5interp ( bspline )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_push
opexprlanguage -s hscript $_obj_geo1_push
opuserdata -n '___Version___' -v '' $_obj_geo1_push

# Node $_obj_geo1_crt_grad (Sop/attribwrangle)
set _obj_geo1_crt_grad = `run("opadd -e -n -v attribwrangle crt_grad")`
oplocate -x `$arg2 + -2.8994251041289365` -y `$arg3 + -0.11891889951189678` $_obj_geo1_crt_grad
opparm $_obj_geo1_crt_grad  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_crt_grad snippet ( '\nfloat grad = float(@ptnum)/ (@numpt-1);\n@grad = grad;\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_crt_grad
opexprlanguage -s hscript $_obj_geo1_crt_grad
opuserdata -n '___Version___' -v '' $_obj_geo1_crt_grad

# Node $_obj_geo1_target_pos (Sop/attribwrangle)
set _obj_geo1_target_pos = `run("opadd -e -n -v attribwrangle target_pos")`
oplocate -x `$arg2 + -0.95207158877371523` -y `$arg3 + -6.0092626162476268` $_obj_geo1_target_pos
opparm $_obj_geo1_target_pos  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_target_pos snippet ( 'vector uv = set(@grad, 0.5,0);\n@P = uvsample(1, "P", "uv", uv);' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_target_pos
opexprlanguage -s hscript $_obj_geo1_target_pos
opuserdata -n '___Version___' -v '' $_obj_geo1_target_pos

# Node $_obj_geo1_crt_uv (Sop/attribwrangle)
set _obj_geo1_crt_uv = `run("opadd -e -n -v attribwrangle crt_uv")`
oplocate -x `$arg2 + 1.8760789840577079` -y `$arg3 + -4.418427919029952` $_obj_geo1_crt_uv
opparm $_obj_geo1_crt_uv  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_crt_uv snippet ( '@uv = set(@grad, 0.5,0);' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_crt_uv
opexprlanguage -s hscript $_obj_geo1_crt_uv
opuserdata -n '___Version___' -v '' $_obj_geo1_crt_uv

# Node $_obj_geo1_create_id (Sop/attribwrangle)
set _obj_geo1_create_id = `run("opadd -e -n -v attribwrangle create_id")`
oplocate -x `$arg2 + -2.8964251075953191` -y `$arg3 + -4.418427919029952` $_obj_geo1_create_id
opparm $_obj_geo1_create_id  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_create_id snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_create_id
opexprlanguage -s hscript $_obj_geo1_create_id
opuserdata -n '___Version___' -v '' $_obj_geo1_create_id

# Node $_obj_geo1_attribwrangle1 (Sop/attribwrangle)
set _obj_geo1_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -3.7814234279872254` -y `$arg3 + -10.34080921851481` $_obj_geo1_attribwrangle1
opparm $_obj_geo1_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_attribwrangle1 snippet ( '@N *= -1;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribwrangle1
opexprlanguage -s hscript $_obj_geo1_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_geo1_attribwrangle1

# Node $_obj_geo1_crt_string_Grad (Sop/attribwrangle)
set _obj_geo1_crt_string_Grad = `run("opadd -e -n -v attribwrangle crt_string_Grad")`
oplocate -x `$arg2 + -3.7855789502827824` -y `$arg3 + -7.5158915620614675` $_obj_geo1_crt_string_Grad
opparm $_obj_geo1_crt_string_Grad  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_crt_string_Grad snippet ( '@stringGrad = 0;\n\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_crt_string_Grad
opexprlanguage -s hscript $_obj_geo1_crt_string_Grad
opuserdata -n '___Version___' -v '' $_obj_geo1_crt_string_Grad

# Node $_obj_geo1_crt_string_Grad1 (Sop/attribwrangle)
set _obj_geo1_crt_string_Grad1 = `run("opadd -e -n -v attribwrangle crt_string_Grad1")`
oplocate -x `$arg2 + -0.95207158877371523` -y `$arg3 + -8.302488936489393` $_obj_geo1_crt_string_Grad1
opparm $_obj_geo1_crt_string_Grad1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_crt_string_Grad1 snippet ( '@stringGrad = 1;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_crt_string_Grad1
opexprlanguage -s hscript $_obj_geo1_crt_string_Grad1
opuserdata -n '___Version___' -v '' $_obj_geo1_crt_string_Grad1

# Node $_obj_geo1_attribwrangle2 (Sop/attribwrangle)
set _obj_geo1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -14.947970133720531` $_obj_geo1_attribwrangle2
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "scale"         label   "Scale"         type    float         default { "0" }         range   { 0 1 }     }     parm {         name    "remap"         label   "Remap"         type    ramp_flt         default { "2" }         range   { 1! 10 }     } ' $_obj_geo1_attribwrangle2
opparm $_obj_geo1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 ) remap ( 4 )
opparm $_obj_geo1_attribwrangle2 snippet ( 'float grad = chramp("remap", @stringGrad);\n\n@P += normalize(@N) * (grad-0.5)*2 * ch("scale");' ) scale ( 0.050000000000000003 ) remap ( 4 ) remap1value ( 0.5 ) remap1interp ( bspline ) remap2pos ( 0.13279132544994354 ) remap2value ( 0.58099999999999996 ) remap2interp ( bspline ) remap3pos ( 0.89295393228530884 ) remap3value ( 0.432 ) remap3interp ( bspline ) remap4pos ( 1 ) remap4value ( 0.5 ) remap4interp ( bspline )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribwrangle2
opexprlanguage -s hscript $_obj_geo1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_geo1_attribwrangle2

# Node $_obj_geo1_keep_clamp_pts (Sop/attribwrangle)
set _obj_geo1_keep_clamp_pts = `run("opadd -e -n -v attribwrangle keep_clamp_pts")`
oplocate -x `$arg2 + 0.71257771269928472` -y `$arg3 + -13.540245910473905` $_obj_geo1_keep_clamp_pts
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "thre"         label   "Thre"         type    float         default { "0" }         range   { 0 1 }     } ' $_obj_geo1_keep_clamp_pts
opparm $_obj_geo1_keep_clamp_pts  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_keep_clamp_pts snippet ( 'float rand = random(@ptnum+0.222);\n\nif(rand < ch("thre"))removepoint(geoself(),@ptnum);' ) thre ( 0.874 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_keep_clamp_pts
opexprlanguage -s hscript $_obj_geo1_keep_clamp_pts
opuserdata -n '___Version___' -v '' $_obj_geo1_keep_clamp_pts

# Node $_obj_geo1_attribwrangle3 (Sop/attribwrangle)
set _obj_geo1_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -16.118185463119833` $_obj_geo1_attribwrangle3
opparm $_obj_geo1_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_attribwrangle3 snippet ( 'if(@stringGrad ==0)@group_root =1;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribwrangle3
opexprlanguage -s hscript $_obj_geo1_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_geo1_attribwrangle3

# Node $_obj_geo1_attribwrangle4 (Sop/attribwrangle)
set _obj_geo1_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -17.281262386196754` $_obj_geo1_attribwrangle4
opparm $_obj_geo1_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_attribwrangle4 snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribwrangle4
opexprlanguage -s hscript $_obj_geo1_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_geo1_attribwrangle4
opcf ..
opcf $_obj_geo1

# Node $_obj_geo1_line1 (Sop/line)
set _obj_geo1_line1 = `run("opadd -e -n -v line line1")`
oplocate -x `$arg2 + -2.8964251075953191` -y `$arg3 + 3.3602609565375525` $_obj_geo1_line1
opparm -V 17.0.416 $_obj_geo1_line1 dist ( 0.40000000000000002 )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_line1
opexprlanguage -s hscript $_obj_geo1_line1

# Node $_obj_geo1_resample1 (Sop/resample)
set _obj_geo1_resample1 = `run("opadd -e -n -v resample resample1")`
oplocate -x `$arg2 + -2.8964251075953191` -y `$arg3 + 1.0741725768321508` $_obj_geo1_resample1
opparm -V 17.0.416 $_obj_geo1_resample1 length ( 0.01 ) treatpolysas ( subd )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_resample1
opexprlanguage -s hscript $_obj_geo1_resample1
opuserdata -n '___Version___' -v '17.0.416' $_obj_geo1_resample1

# Node $_obj_geo1_resample2 (Sop/resample)
set _obj_geo1_resample2 = `run("opadd -e -n -v resample resample2")`
oplocate -x `$arg2 + -2.8934251110617017` -y `$arg3 + -2.4256637630072007` $_obj_geo1_resample2
opparm -V 17.0.416 $_obj_geo1_resample2 length ( 0.0030000000000000001 ) treatpolysas ( subd )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_resample2
opexprlanguage -s hscript $_obj_geo1_resample2
opuserdata -n '___Version___' -v '17.0.416' $_obj_geo1_resample2

# Node $_obj_geo1_add1 (Sop/add)
set _obj_geo1_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + -2.8934251110617017` -y `$arg3 + -3.3785279320476058` $_obj_geo1_add1
opparm $_obj_geo1_add1  points ( 1 ) prims ( 1 )
opparm -V 17.0.416 $_obj_geo1_add1 keep ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_geo1_add1
opexprlanguage -s hscript $_obj_geo1_add1

# Node $_obj_geo1_add2 (Sop/add)
set _obj_geo1_add2 = `run("opadd -e -n -v add add2")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -12.37870924316729` $_obj_geo1_add2
opparm $_obj_geo1_add2  points ( 1 ) prims ( 1 )
opparm -V 17.0.416 $_obj_geo1_add2 stdswitcher ( 1 1 1 ) switcher ( 1 1 ) add ( attribute ) attrname ( id )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_add2
opexprlanguage -s hscript $_obj_geo1_add2

# Node $_obj_geo1_merge1 (Sop/merge)
set _obj_geo1_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -3.7837289657654614` -y `$arg3 + -9.2733092318513499` $_obj_geo1_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_merge1
opexprlanguage -s hscript $_obj_geo1_merge1

# Node $_obj_geo1_resample3 (Sop/resample)
set _obj_geo1_resample3 = `run("opadd -e -n -v resample resample3")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -13.533537393740122` $_obj_geo1_resample3
opparm -V 17.0.416 $_obj_geo1_resample3 length ( 0.01 ) treatpolysas ( subd )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_resample3
opexprlanguage -s hscript $_obj_geo1_resample3

# Node $_obj_geo1_polyframe1 (Sop/polyframe)
set _obj_geo1_polyframe1 = `run("opadd -e -n -v polyframe polyframe1")`
oplocate -x `$arg2 + -3.782578953749165` -y `$arg3 + -5.583765230041827` $_obj_geo1_polyframe1
opparm -V 17.0.416 $_obj_geo1_polyframe1 Non ( off ) tangentu ( N )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_polyframe1
opexprlanguage -s hscript $_obj_geo1_polyframe1
opuserdata -n '___Version___' -v '17.0.416' $_obj_geo1_polyframe1

# Node $_obj_geo1_polyframe2 (Sop/polyframe)
set _obj_geo1_polyframe2 = `run("opadd -e -n -v polyframe polyframe2")`
oplocate -x `$arg2 + -0.94907159224009785` -y `$arg3 + -7.1208123834799979` $_obj_geo1_polyframe2
opparm -V 17.0.416 $_obj_geo1_polyframe2 entity ( point ) style ( edge1 ) Non ( off ) tangentu ( N ) tangentv ( N )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_polyframe2
opexprlanguage -s hscript $_obj_geo1_polyframe2
opuserdata -n '___Version___' -v '17.0.416' $_obj_geo1_polyframe2

# Node $_obj_geo1_add3 (Sop/add)
set _obj_geo1_add3 = `run("opadd -e -n -v add add3")`
oplocate -x `$arg2 + -3.7743655257564699` -y `$arg3 + -11.378709231246361` $_obj_geo1_add3
opparm $_obj_geo1_add3  points ( 1 ) prims ( 1 )
opparm -V 17.0.416 $_obj_geo1_add3 keep ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_add3
opexprlanguage -s hscript $_obj_geo1_add3

# Node $_obj_geo1_transform1 (Sop/xform)
set _obj_geo1_transform1 = `run("opadd -e -n -v xform transform1")`
oplocate -x `$arg2 + -3.7795789572155476` -y `$arg3 + -18.841458785542088` $_obj_geo1_transform1
opspareds '    parm {         name    "group"         baseparm         label   "Group"         export  none         bindselector everything "Transform Geometry"             "Select the geometry to transform and press Enter to complete. Middle mouse to select. Left mouse to select and drag."             0 1 0xffffffff 1 grouptype 0     }     parm {         name    "grouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "xOrd"         baseparm         label   "Transform Order"         joinnext         export  none     }     parm {         name    "rOrd"         baseparm         label   "Rotate Order"         nolabel         export  none     }     parm {         name    "t"         baseparm         label   "Translate"         export  none     }     parm {         name    "r"         baseparm         label   "Rotate"         export  none     }     parm {         name    "s"         baseparm         label   "Scale"         export  none     }     parm {         name    "shear"         baseparm         label   "Shear"         export  none     }     parm {         name    "scale"         baseparm         label   "Uniform Scale"         export  none     }     groupcollapsible {         name    "parmgroup_pivotxform2"         label   "Pivot Transform"         grouptag { "group_type" "collapsible" }          parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }     }      groupcollapsible {         name    "parmgroup_prexform2"         label   "Pre-Transform"         grouptag { "group_type" "collapsible" }          parm {             name    "prexform_xOrd"             baseparm             label   "Pre-Transform Order"             joinnext             export  none         }         parm {             name    "prexform_rOrd"             baseparm             label   "Pre-Rotate Order"             nolabel             export  none         }         parm {             name    "prexform_t"             baseparm             label   "Pre-Translate"             export  none         }         parm {             name    "prexform_r"             baseparm             label   "Pre-Rotate"             export  none         }         parm {             name    "prexform_s"             baseparm             label   "Pre-Scale"             export  none         }         parm {             name    "prexform_shear"             baseparm             label   "Pre-Shear"             export  none         }     }      parm {         name    "movecentroid"         baseparm         label   "Move Centroid to Origin"         export  none     }     parm {         name    "attribs"         baseparm         label   "Attributes"         export  none     }     parm {         name    "updatenmls"         baseparm         label   "Recompute Point Normals"         export  none     }     parm {         name    "updateaffectednmls"         baseparm         label   "Recompute Affected Normals"         export  none     }     parm {         name    "vlength"         baseparm         label   "Preserve Normal Length"         export  none     }     parm {         name    "invertxform"         baseparm         label   "Invert Transformation"         export  none     }     groupcollapsible {         name    "folder0"         label   "Presets"          groupsimple {             name    "folder3"             label   "Quickpreset"              parm {                 name    "center_to_origin"                 label   "Center to Origin"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'p\')[0].setExpression(\'centroid(opinputpath(\\".\\",0),D_X)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[1].setExpression(\'centroid(opinputpath(\\".\\",0),D_Y)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[2].setExpression(\'centroid(opinputpath(\\".\\",0),D_Z)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[0].setExpression(\'-ch(\\"px\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[1].setExpression(\'-ch(\\"py\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[2].setExpression(\'-ch(\\"pz\\")\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "place_onto_origin"                 label   "Place onto Origin"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'p\')[0].setExpression(\'centroid(opinputpath(\\".\\",0),D_X)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parm(\'py\').setExpression(\'bbox(opinputpath(\\".\\",0),D_YMIN)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[2].setExpression(\'centroid(opinputpath(\\".\\",0),D_Z)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[0].setExpression(\'-ch(\\"px\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[1].setExpression(\'-ch(\\"py\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[2].setExpression(\'-ch(\\"pz\\")\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }         }          groupsimple {             name    "folder2"             label   "Translate"              parm {                 name    "tx_min"                 label   "Min X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "ty_min"                 label   "Min Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "tz_min"                 label   "Min Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "tx_center"                 label   "Cen X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "ty_center"                 label   "Cen Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "tz_center"                 label   "Cen Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "tx_max"                 label   "Max X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "ty_max"                 label   "Max Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "tz_max"                 label   "Max Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "labelparm2"                 label   "Label"                 type    label                 nolabel                 default { "" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "t_center"                 label   "Center"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'t\')[0].setExpression(\'centroid(opinputpath(\\".\\",0),D_X)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[1].setExpression(\'centroid(opinputpath(\\".\\",0),D_Y)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[2].setExpression(\'centroid(opinputpath(\\".\\",0),D_Z)\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "t_minus_pivot"                 label   "Negated Pivot"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'t\')[0].setExpression(\'-ch(\\"px\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[1].setExpression(\'-ch(\\"py\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'t\')[2].setExpression(\'-ch(\\"pz\\")\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }         }          groupsimple {             name    "folder1"             label   "Pivot"              parm {                 name    "px_min"                 label   "Min X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "py_min"                 label   "Min Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "pz_min"                 label   "Min Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "px_center"                 label   "Cen X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "py_center"                 label   "Cen Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "pz_center"                 label   "Cen Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'centroid(opinputpath(\\".\\",0),D_{})\'.format(kwargs[\'parm\'].name()[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "px_max"                 label   "Max X"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "py_max"                 label   "Max Y"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "pz_max"                 label   "Max Z"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parm(kwargs[\'parm\'].name().split(\'_\')[0]).setExpression(\'bbox(opinputpath(\\".\\",0),D_{}{})\'.format(kwargs[\'parm\'].name()[1].upper(),kwargs[\'parm\'].name().split(\'_\')[1].upper()),hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "labelparm"                 label   "Label"                 type    label                 nolabel                 default { "" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "p_center"                 label   "Center"                 type    button                 joinnext                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'p\')[0].setExpression(\'centroid(opinputpath(\\".\\",0),D_X)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[1].setExpression(\'centroid(opinputpath(\\".\\",0),D_Y)\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[2].setExpression(\'centroid(opinputpath(\\".\\",0),D_Z)\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "p_minus_translate"                 label   "Negated Translation"                 type    button                 default { "0" }                 parmtag { "script_callback" "kwargs[\'node\'].parmTuple(\'p\')[0].setExpression(\'-ch(\\"tx\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[1].setExpression(\'-ch(\\"ty\\")\',hou.exprLanguage.Hscript);kwargs[\'node\'].parmTuple(\'p\')[2].setExpression(\'-ch(\\"tz\\")\',hou.exprLanguage.Hscript)" }                 parmtag { "script_callback_language" "python" }             }         }      }      parm {         name    "addattrib"         baseparm         label   "Output Attribute"         nolabel         export  none     }     parm {         name    "outputattrib"         baseparm         label   "Output Attribute"         export  none     }     parm {         name    "outputmerge"         baseparm         label   "Combine"         nolabel         export  none     } ' $_obj_geo1_transform1
chblockbegin
chadd -t 0 0 $_obj_geo1_transform1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'sin(($FF-1)*4)' $_obj_geo1_transform1/tx
chadd -t 0 0 $_obj_geo1_transform1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '($FF-1) * 10' $_obj_geo1_transform1/ry
chblockend
opparm -V 17.0.416 $_obj_geo1_transform1 t ( tx 0 0 ) r ( 0 ry 0 ) parmgroup_pivotxform2 ( 1 )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_transform1
opexprlanguage -s hscript $_obj_geo1_transform1
oporder -e line1 resample1 crt_N push crt_grad target_pos resample2 add1 crt_uv add2 create_id merge1 resample3 polyframe1 polyframe2 attribwrangle1 crt_string_Grad crt_string_Grad1 attribwrangle2 keep_clamp_pts add3 attribwrangle3 attribwrangle4 transform1 
opcf ..
opset -p on $_obj_geo1

opcf $arg1
opcf $_obj_geo1
opwire -n $_obj_geo1_line1 -0 $_obj_geo1_resample1
opwire -n $_obj_geo1_crt_grad -0 $_obj_geo1_crt_N
opwire -n $_obj_geo1_crt_N -0 $_obj_geo1_push
opwire -n $_obj_geo1_resample1 -0 $_obj_geo1_crt_grad
opwire -n $_obj_geo1_create_id -0 $_obj_geo1_target_pos
opwire -n $_obj_geo1_crt_uv -1 $_obj_geo1_target_pos
opwire -n $_obj_geo1_crt_grad -0 $_obj_geo1_resample2
opwire -n $_obj_geo1_resample2 -0 $_obj_geo1_add1
opwire -n $_obj_geo1_push -0 $_obj_geo1_crt_uv
opwire -n $_obj_geo1_add3 -0 $_obj_geo1_add2
opwire -n $_obj_geo1_add1 -0 $_obj_geo1_create_id
opwire -n $_obj_geo1_crt_string_Grad -0 $_obj_geo1_merge1
opwire -n $_obj_geo1_crt_string_Grad1 -1 $_obj_geo1_merge1
opwire -n $_obj_geo1_add2 -0 $_obj_geo1_resample3
opwire -n $_obj_geo1_create_id -0 $_obj_geo1_polyframe1
opwire -n $_obj_geo1_target_pos -0 $_obj_geo1_polyframe2
opwire -n $_obj_geo1_merge1 -0 $_obj_geo1_attribwrangle1
opwire -n $_obj_geo1_polyframe1 -0 $_obj_geo1_crt_string_Grad
opwire -n $_obj_geo1_polyframe2 -0 $_obj_geo1_crt_string_Grad1
opwire -n $_obj_geo1_resample3 -0 $_obj_geo1_attribwrangle2
opwire -n $_obj_geo1_crt_string_Grad1 -0 $_obj_geo1_keep_clamp_pts
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_add3
opwire -n $_obj_geo1_attribwrangle2 -0 $_obj_geo1_attribwrangle3
opwire -n $_obj_geo1_attribwrangle3 -0 $_obj_geo1_attribwrangle4
opwire -n $_obj_geo1_attribwrangle4 -0 $_obj_geo1_transform1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
