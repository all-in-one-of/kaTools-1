<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="kaTools" label="kaTools">
    <memberTool name="connect"/>
    <memberTool name="disconnectOutputNodes"/>
    <memberTool name="gotToCam"/>
    <memberTool name="changeUpdateMode"/>
    <memberTool name="setValToSameParms"/>
    <memberTool name="add_event_when_created"/>
    <memberTool name="sanity_check"/>
    <memberTool name="copyRamp"/>
    <memberTool name="colorize"/>
    <memberTool name="recursiveReferenceCopy"/>
    <memberTool name="python"/>
    <memberTool name="pick_up_atr_val_is_1"/>
  </toolshelf>

  <tool name="add_event_when_created" label="add_event_when_created" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import eventCallBack

eventCallBack.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="sanity_check" label="sanity_check" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import sanityCheck

sanityCheck.execute(hou.node("/"))]]></script>
  </tool>

  <tool name="connect" label="ka Connect" icon="SOP_join">
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import connectNodes

connectNodes.execute()]]></script>
  </tool>

  <tool name="changeUpdateMode" label="changeUpdateMode" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import changeUpdateMode

changeUpdateMode.execute()]]></script>
  </tool>

  <tool name="copyRamp" label="copyRamp" icon="VOP_rampparm">
    <script scriptType="python"><![CDATA[import copyRamp
reload(copyRamp)

copyRamp.execute()]]></script>
  </tool>

  <tool name="gotToCam" label="gotToCam" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[import goToCam

goToCam.executeAL()]]></script>
  </tool>

  <tool name="attribvop" label="noise" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Sunday October 30, 18:48 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise (Sop/attribvop)
set _obj_geo1_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      dialog  }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      dialog  }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise
opparm $_obj_geo1_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq2
chadd -t 0 0 $_obj_geo1_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise/freq3
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise
opexprlanguage -s hscript $_obj_geo1_noise
opcf $_obj_geo1_noise

# Node $_obj_geo1_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopglobal1

# Node $_obj_geo1_noise_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 9.8721227645874023` -y `$arg3 + 4.2877378463745117` $_obj_geo1_noise_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_geometryvopoutput1

# Node $_obj_geo1_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.7316727638244629` -y `$arg3 + 2.5695571899414063` $_obj_geo1_noise_aaflownoise1
opparm $_obj_geo1_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_aaflownoise1

# Node $_obj_geo1_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.7922172546386719` -y `$arg3 + 3.5579569339752197` $_obj_geo1_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_vectohvec1

# Node $_obj_geo1_noise_add1 (Vop/add)
set _obj_geo1_noise_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 7.6962054016113282` -y `$arg3 + 4.5701378211975099` $_obj_geo1_noise_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_add1
opexprlanguage -s hscript $_obj_geo1_noise_add1

# Node $_obj_geo1_noise_freq (Vop/parameter)
set _obj_geo1_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 3.0316727757453918` -y `$arg3 + 3.9695571660995483` $_obj_geo1_noise_freq
opparm -V 15.5.480 $_obj_geo1_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_freq
opexprlanguage -s hscript $_obj_geo1_noise_freq

# Node $_obj_geo1_noise_offset (Vop/parameter)
set _obj_geo1_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 3.131672739982605` -y `$arg3 + 3.7695572376251221` $_obj_geo1_noise_offset
opparm -V 15.5.480 $_obj_geo1_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_offset
opexprlanguage -s hscript $_obj_geo1_noise_offset

# Node $_obj_geo1_noise_amp (Vop/parameter)
set _obj_geo1_noise_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 3.2316727638244629` -y `$arg3 + 3.5695571899414063` $_obj_geo1_noise_amp
opparm -V 15.5.480 $_obj_geo1_noise_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_amp
opexprlanguage -s hscript $_obj_geo1_noise_amp

# Node $_obj_geo1_noise_rough (Vop/parameter)
set _obj_geo1_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 3.3316727578639984` -y `$arg3 + 3.3695572018623352` $_obj_geo1_noise_rough
opparm -V 15.5.480 $_obj_geo1_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_rough
opexprlanguage -s hscript $_obj_geo1_noise_rough
opcf ..
opcf $_obj_geo1_noise
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 add1 freq offset amp rough 
opcf ..
opset -p on $_obj_geo1_noise

opcf $arg1
opwire -n $_obj_geo1_uvunwrap1 -0 $_obj_geo1_noise
opcf $_obj_geo1_noise
opwire -n $_obj_geo1_noise_add1 -0 $_obj_geo1_noise_geometryvopoutput1
opwire -n $_obj_geo1_noise_vectohvec1 -0 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_freq -1 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_offset -2 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_amp -3 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_rough -4 $_obj_geo1_noise_aaflownoise1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_vectohvec1
opwire -n $_obj_geo1_noise_geometryvopglobal1 -0 $_obj_geo1_noise_add1
opwire -n $_obj_geo1_noise_aaflownoise1 -1 $_obj_geo1_noise_add1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="colorize" label="colorize" icon="SOP_color">
    <script scriptType="python"><![CDATA[import colorize

colorize.execute()]]></script>
  </tool>

  <tool name="recursiveReferenceCopy" label="recursiveReferenceCopy" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import recursiveReferenceCopy

reload(recursiveReferenceCopy)

recursiveReferenceCopy.execute()]]></script>
  </tool>

  <tool name="disconnectOutputNodes" label="disconnectOutputNodes" icon="SOP_join">
    <script scriptType="python"><![CDATA[import disconnectOutputNodes

disconnectOutputNodes.execute()]]></script>
  </tool>

  <tool name="attribvop0" label="noise_1d" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:40 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_noise_1d (Sop/attribvop)
set _obj_geo1_noise_1d = `run("opadd -e -n -v attribvop noise_1d")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_noise_1d
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "amp"   label   "Amplitude"     type    float   default { "1" }         range   { -1 1 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "ramp"  label   "ramp"  type    ramp_flt        default { "2" }         range   { 1! 10 }       export  none    parmtag { "parmvop" "1" }       parmtag { "rampbasis_var" "ramp_the_basis_strings" }    parmtag { "rampbasisdefault" "linear" }         parmtag { "rampkeys_var" "ramp_the_key_positions" }     parmtag { "rampshowcontrolsdefault" "1" }       parmtag { "rampvalues_var" "ramp_the_key_values" }      parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_noise_1d
opparm $_obj_geo1_noise_1d  bindings ( 0 ) groupbindings ( 0 ) ramp ( 2 )
chblockbegin
chadd -t 0 0 $_obj_geo1_noise_1d freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq2
chadd -t 0 0 $_obj_geo1_noise_1d freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_noise_1d/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_noise_1d freq ( 1 freq2 freq3 1 ) ramp2pos ( 1 ) ramp2value ( 1 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_noise_1d
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_noise_1d
opexprlanguage -s hscript $_obj_geo1_noise_1d
opcf $_obj_geo1_noise_1d

# Node $_obj_geo1_noise_1d_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_noise_1d_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 2.9616677732799999` -y `$arg3 + 1.69100370842` $_obj_geo1_noise_1d_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopglobal1

# Node $_obj_geo1_noise_1d_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_noise_1d_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 12.87767219543457` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_noise_1d_geometryvopoutput1

# Node $_obj_geo1_noise_1d_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_noise_1d_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 6.7875505371045` -y `$arg3 + 2.2842508983614001` $_obj_geo1_noise_1d_aaflownoise1
opparm $_obj_geo1_noise_1d_aaflownoise1 signature ( fp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_noise_1d_aaflownoise1

# Node $_obj_geo1_noise_1d_vectohvec1 (Vop/vectohvec)
set _obj_geo1_noise_1d_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 4.8480950279187001` -y `$arg3 + 3.2726506423952002` $_obj_geo1_noise_1d_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_vectohvec1
opexprlanguage -s hscript $_obj_geo1_noise_1d_vectohvec1

# Node $_obj_geo1_noise_1d_freq (Vop/parameter)
set _obj_geo1_noise_1d_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 4.0875505490253996` -y `$arg3 + 3.6842508745195` $_obj_geo1_noise_1d_freq
opparm -V 15.5.480 $_obj_geo1_noise_1d_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_freq
opexprlanguage -s hscript $_obj_geo1_noise_1d_freq

# Node $_obj_geo1_noise_1d_offset (Vop/parameter)
set _obj_geo1_noise_1d_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 4.1875505132626003` -y `$arg3 + 3.4842509460450999` $_obj_geo1_noise_1d_offset
opparm -V 15.5.480 $_obj_geo1_noise_1d_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_offset
opexprlanguage -s hscript $_obj_geo1_noise_1d_offset

# Node $_obj_geo1_noise_1d_amp (Vop/parameter)
set _obj_geo1_noise_1d_amp = `run("opadd -e -n -v parameter amp")`
oplocate -x `$arg2 + 4.2875505371045` -y `$arg3 + 3.2842508983614001` $_obj_geo1_noise_1d_amp
opparm -V 15.5.480 $_obj_geo1_noise_1d_amp parmname ( amp ) parmlabel ( Amplitude ) floatdef ( 1 ) rangeflt ( -1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_amp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_amp
opexprlanguage -s hscript $_obj_geo1_noise_1d_amp

# Node $_obj_geo1_noise_1d_rough (Vop/parameter)
set _obj_geo1_noise_1d_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 4.387550531144` -y `$arg3 + 3.0842509102823001` $_obj_geo1_noise_1d_rough
opparm -V 15.5.480 $_obj_geo1_noise_1d_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_noise_1d_rough
opexprlanguage -s hscript $_obj_geo1_noise_1d_rough

# Node $_obj_geo1_noise_1d_fit1 (Vop/fit)
set _obj_geo1_noise_1d_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 8.498382568359375` -y `$arg3 + 2.8490509986877441` $_obj_geo1_noise_1d_fit1
opparm $_obj_geo1_noise_1d_fit1 srcmin ( -0.5 ) srcmax ( 0.5 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_fit1
opexprlanguage -s hscript $_obj_geo1_noise_1d_fit1

# Node $_obj_geo1_noise_1d_ramp1 (Vop/rampparm)
set _obj_geo1_noise_1d_ramp1 = `run("opadd -e -n -v rampparm ramp1")`
oplocate -x `$arg2 + 10.572565078735352` -y `$arg3 + 2.7078509330749512` $_obj_geo1_noise_1d_ramp1
opparm -V 15.5.480 $_obj_geo1_noise_1d_ramp1 ramptype ( flt )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_noise_1d_ramp1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_noise_1d_ramp1
opexprlanguage -s hscript $_obj_geo1_noise_1d_ramp1
opcf ..
opcf $_obj_geo1_noise_1d
oporder -e geometryvopglobal1 geometryvopoutput1 aaflownoise1 vectohvec1 freq offset amp rough fit1 ramp1 
opcf ..
opset -p on $_obj_geo1_noise_1d

opcf $arg1
opcf $_obj_geo1_noise_1d
opwire -n $_obj_geo1_noise_1d_ramp1 -3 $_obj_geo1_noise_1d_geometryvopoutput1
opwire -n $_obj_geo1_noise_1d_vectohvec1 -0 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_freq -1 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_offset -2 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_amp -3 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_rough -4 $_obj_geo1_noise_1d_aaflownoise1
opwire -n $_obj_geo1_noise_1d_geometryvopglobal1 -0 $_obj_geo1_noise_1d_vectohvec1
opwire -n $_obj_geo1_noise_1d_aaflownoise1 -0 $_obj_geo1_noise_1d_fit1
opwire -n $_obj_geo1_noise_1d_fit1 -0 $_obj_geo1_noise_1d_ramp1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_noise_1d
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_noise_1d
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="python" label="python_verb" icon="SOP_python">
    <helpURL>operator:Sop/python</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/python</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('python'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_python_verb (Sop/python)
set _obj_geo1_python_verb = `run("opadd -e -n -v python python_verb")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_python_verb
opparm -V 16.0.557 $_obj_geo1_python_verb python ( '#prep\nnode = hou.pwd()\ngeo = node.geometry()\nresult = hou.Geometry()\ninputNodes = node.inputs()\n#geo1 = inputNodes[1].geometry()\n#geo2 = inputNodes[2].geometry()\n#geo3 = inputNodes[3].geometry()\n\n#operate\nsops = hou.sopNodeTypeCategory()\nsubverb = sops.nodeVerb("subdivide")\nsubverb.setParms({"iterations":3})\nsubverb.execute(result,[geo])\n\nsubverb1 = sops.nodeVerb("subdivide")\nsubverb1.setParms({"iterations":3})\nsubverb1.execute(result,[result])\n\n#update geo\ngeo.clear()\ngeo.merge(result)' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_python_verb
opexprlanguage -s hscript $_obj_geo1_python_verb
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_python_verb
opset -p on $_obj_geo1_python_verb

opcf $arg1
opwire -n $_obj_geo1_file1 -0 $_obj_geo1_python_verb

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_python_verb
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_python_verb
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <toolshelf name="kaToolsVop" label="kaToolsVop">
    <memberTool name="attribvop1"/>
    <memberTool name="attribwrangle"/>
    <memberTool name="subnet4"/>
    <memberTool name="attribvop"/>
    <memberTool name="attribvop0"/>
    <memberTool name="attribwrangle0"/>
    <memberTool name="attribwrangle1"/>
    <memberTool name="attribwrangle2"/>
    <memberTool name="attribwrangle3"/>
    <memberTool name="attribwrangle4"/>
    <memberTool name="attribwrangle6"/>
    <memberTool name="attribwrangle7"/>
    <memberTool name="attribwrangle8"/>
    <memberTool name="rotate_by_quar"/>
    <memberTool name="clip"/>
    <memberTool name="pt_trans_and_rotate_orient"/>
    <memberTool name="align_orient2"/>
    <memberTool name="crt_partId"/>
    <memberTool name="crt_instance_Id"/>
    <memberTool name="remove_by_frame"/>
    <memberTool name="trans_by_pt"/>
  </toolshelf>

  <tool name="attribvop1" label="trans_by_n_up" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribvop</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_trans_by_n_up (Sop/attribvop)
set _obj_geo1_trans_by_n_up = `run("opadd -e -n -v attribvop trans_by_n_up")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_trans_by_n_up
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_trans_by_n_up
opparm $_obj_geo1_trans_by_n_up  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_trans_by_n_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_trans_by_n_up
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up
opcf $_obj_geo1_trans_by_n_up

# Node $_obj_geo1_trans_by_n_up_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_trans_by_n_up_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_geo1_trans_by_n_up_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_geometryvopglobal1

# Node $_obj_geo1_trans_by_n_up_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_geo1_trans_by_n_up_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 33.2684` -y `$arg3 + -0.80214600000000003` $_obj_geo1_trans_by_n_up_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_geometryvopoutput1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_geometryvopoutput1

# Node $_obj_geo1_trans_by_n_up_lookat1 (Vop/lookat)
set _obj_geo1_trans_by_n_up_lookat1 = `run("opadd -e -n -v lookat lookat1")`
oplocate -x `$arg2 + 7.2511700000000001` -y `$arg3 + -6.1882999999999999` $_obj_geo1_trans_by_n_up_lookat1
opparm $_obj_geo1_trans_by_n_up_lookat1 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_lookat1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_lookat1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_lookat1

# Node $_obj_geo1_trans_by_n_up_bind2 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -8.0587199999999992` $_obj_geo1_trans_by_n_up_bind2
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind2 parmname ( opinput1_up ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind2

# Node $_obj_geo1_trans_by_n_up_bind3 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -6.1882999999999999` $_obj_geo1_trans_by_n_up_bind3
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind3 parmname ( opinput1_N ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind3
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind3
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind3

# Node $_obj_geo1_trans_by_n_up_bind4 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind4 = `run("opadd -e -n -v bind bind4")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -14.1234` $_obj_geo1_trans_by_n_up_bind4
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind4 parmname ( opinput2_up ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind4
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind4
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind4

# Node $_obj_geo1_trans_by_n_up_bind5 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind5 = `run("opadd -e -n -v bind bind5")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -12.253` $_obj_geo1_trans_by_n_up_bind5
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind5 parmname ( opinput2_N ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind5
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind5
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind5

# Node $_obj_geo1_trans_by_n_up_translate1 (Vop/translate)
set _obj_geo1_trans_by_n_up_translate1 = `run("opadd -e -n -v translate translate1")`
oplocate -x `$arg2 + 13.420400000000001` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_n_up_translate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_translate1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_translate1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_translate1

# Node $_obj_geo1_trans_by_n_up_lookat2 (Vop/lookat)
set _obj_geo1_trans_by_n_up_lookat2 = `run("opadd -e -n -v lookat lookat2")`
oplocate -x `$arg2 + 7.5644200000000001` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_lookat2
opparm $_obj_geo1_trans_by_n_up_lookat2 from ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_lookat2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_lookat2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_lookat2

# Node $_obj_geo1_trans_by_n_up_bind6 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind6 = `run("opadd -e -n -v bind bind6")`
oplocate -x `$arg2 + 3.6255500000000001` -y `$arg3 + -9.91892` $_obj_geo1_trans_by_n_up_bind6
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind6 parmname ( opinput1_P ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind6
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind6
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind6

# Node $_obj_geo1_trans_by_n_up_bind7 (Vop/bind)
set _obj_geo1_trans_by_n_up_bind7 = `run("opadd -e -n -v bind bind7")`
oplocate -x `$arg2 + 3.46549` -y `$arg3 + -16.365600000000001` $_obj_geo1_trans_by_n_up_bind7
opparm -V 16.0.633 $_obj_geo1_trans_by_n_up_bind7 parmname ( opinput2_P ) parmtype ( vector ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_bind7
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_bind7
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_bind7

# Node $_obj_geo1_trans_by_n_up_m3tom41 (Vop/m3tom4)
set _obj_geo1_trans_by_n_up_m3tom41 = `run("opadd -e -n -v m3tom4 m3tom41")`
oplocate -x `$arg2 + 10.4072` -y `$arg3 + -6.3383000000000003` $_obj_geo1_trans_by_n_up_m3tom41
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_m3tom41
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_m3tom41
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_m3tom41

# Node $_obj_geo1_trans_by_n_up_translate2 (Vop/translate)
set _obj_geo1_trans_by_n_up_translate2 = `run("opadd -e -n -v translate translate2")`
oplocate -x `$arg2 + 13.9018` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_translate2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_translate2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_translate2
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_translate2

# Node $_obj_geo1_trans_by_n_up_m3tom42 (Vop/m3tom4)
set _obj_geo1_trans_by_n_up_m3tom42 = `run("opadd -e -n -v m3tom4 m3tom42")`
oplocate -x `$arg2 + 10.8886` -y `$arg3 + -13.315200000000001` $_obj_geo1_trans_by_n_up_m3tom42
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_m3tom42
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_m3tom42
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_m3tom42

# Node $_obj_geo1_trans_by_n_up_multiply1 (Vop/multiply)
set _obj_geo1_trans_by_n_up_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 22.006699999999999` -y `$arg3 + -6.6035199999999996` $_obj_geo1_trans_by_n_up_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_multiply1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_multiply1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_multiply1

# Node $_obj_geo1_trans_by_n_up_multiply2 (Vop/multiply)
set _obj_geo1_trans_by_n_up_multiply2 = `run("opadd -e -n -v multiply multiply2")`
oplocate -x `$arg2 + 26.380400000000002` -y `$arg3 + -4.8594200000000001` $_obj_geo1_trans_by_n_up_multiply2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_multiply2
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_multiply2
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_trans_by_n_up_multiply2

# Node $_obj_geo1_trans_by_n_up_invert1 (Vop/invert)
set _obj_geo1_trans_by_n_up_invert1 = `run("opadd -e -n -v invert invert1")`
oplocate -x `$arg2 + 17.741599999999998` -y `$arg3 + -6.4882999999999997` $_obj_geo1_trans_by_n_up_invert1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_geo1_trans_by_n_up_invert1
opexprlanguage -s hscript $_obj_geo1_trans_by_n_up_invert1
opuserdata -n '___Version___' -v '' $_obj_geo1_trans_by_n_up_invert1
opcf ..
opcf $_obj_geo1_trans_by_n_up
oporder -e geometryvopglobal1 geometryvopoutput1 lookat1 bind2 bind3 bind4 bind5 translate1 lookat2 bind6 bind7 m3tom41 translate2 m3tom42 multiply1 multiply2 invert1 
opcf ..
opset -p on $_obj_geo1_trans_by_n_up

opcf $arg1
opwire -n $_obj_geo1_polyframe1 -0 $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_polyframe1 -1 $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_transform1 -2 $_obj_geo1_trans_by_n_up
opcf $_obj_geo1_trans_by_n_up
opwire -n $_obj_geo1_trans_by_n_up_multiply2 -0 $_obj_geo1_trans_by_n_up_geometryvopoutput1
opwire -n $_obj_geo1_trans_by_n_up_bind3 -1 $_obj_geo1_trans_by_n_up_lookat1
opwire -n $_obj_geo1_trans_by_n_up_bind2 -2 $_obj_geo1_trans_by_n_up_lookat1
opwire -n $_obj_geo1_trans_by_n_up_m3tom41 -0 $_obj_geo1_trans_by_n_up_translate1
opwire -n $_obj_geo1_trans_by_n_up_bind6 -1 $_obj_geo1_trans_by_n_up_translate1
opwire -n $_obj_geo1_trans_by_n_up_bind5 -1 $_obj_geo1_trans_by_n_up_lookat2
opwire -n $_obj_geo1_trans_by_n_up_bind4 -2 $_obj_geo1_trans_by_n_up_lookat2
opwire -n $_obj_geo1_trans_by_n_up_lookat1 -0 $_obj_geo1_trans_by_n_up_m3tom41
opwire -n $_obj_geo1_trans_by_n_up_m3tom42 -0 $_obj_geo1_trans_by_n_up_translate2
opwire -n $_obj_geo1_trans_by_n_up_bind7 -1 $_obj_geo1_trans_by_n_up_translate2
opwire -n $_obj_geo1_trans_by_n_up_lookat2 -0 $_obj_geo1_trans_by_n_up_m3tom42
opwire -n $_obj_geo1_trans_by_n_up_invert1 -0 $_obj_geo1_trans_by_n_up_multiply1
opwire -n $_obj_geo1_trans_by_n_up_translate2 -1 $_obj_geo1_trans_by_n_up_multiply1
opwire -n $_obj_geo1_trans_by_n_up_geometryvopglobal1 -0 $_obj_geo1_trans_by_n_up_multiply2
opwire -n $_obj_geo1_trans_by_n_up_multiply1 -1 $_obj_geo1_trans_by_n_up_multiply2
opwire -n $_obj_geo1_trans_by_n_up_translate1 -0 $_obj_geo1_trans_by_n_up_invert1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_trans_by_n_up
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_trans_by_n_up
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle" label="rot_packed_obj" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rot_packed_obj (Sop/attribwrangle)
set _obj_geo1_rot_packed_obj = `run("opadd -e -n -v attribwrangle rot_packed_obj")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rot_packed_obj
opparm $_obj_geo1_rot_packed_obj  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rot_packed_obj snippet ( '@P = qrotate(p@orient,(@P - v@pivot)) + v@packP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rot_packed_obj
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rot_packed_obj
opexprlanguage -s hscript $_obj_geo1_rot_packed_obj
opuserdata -n '___Version___' -v '' $_obj_geo1_rot_packed_obj
opset -p on $_obj_geo1_rot_packed_obj

opcf $arg1
opwire -n $_obj_geo1_attribcopy1 -0 $_obj_geo1_rot_packed_obj

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rot_packed_obj
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rot_packed_obj
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="subnet4" label="rotate_packed_obj" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rotate_packed_obj (Sop/subnet)
set _obj_geo1_rotate_packed_obj = `run("opadd -e -n -v subnet rotate_packed_obj")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rotate_packed_obj
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj
opcf $_obj_geo1_rotate_packed_obj

# Node $_obj_geo1_rotate_packed_obj_attribwrangle4 (Sop/attribwrangle)
set _obj_geo1_rotate_packed_obj_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + 2.6811499937534311` -y `$arg3 + 3.9803443569272265` $_obj_geo1_rotate_packed_obj_attribwrangle4
opparm $_obj_geo1_rotate_packed_obj_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rotate_packed_obj_attribwrangle4 snippet ( 'v@packP = @P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rotate_packed_obj_attribwrangle4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribwrangle4
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_geo1_rotate_packed_obj_attribwrangle4

# Node $_obj_geo1_rotate_packed_obj_rot_packed_obj (Sop/attribwrangle)
set _obj_geo1_rotate_packed_obj_rot_packed_obj = `run("opadd -e -n -v attribwrangle rot_packed_obj")`
oplocate -x `$arg2 + -0.0029500062465679378` -y `$arg3 + 1.8730443569272279` $_obj_geo1_rotate_packed_obj_rot_packed_obj
opparm $_obj_geo1_rotate_packed_obj_rot_packed_obj  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rotate_packed_obj_rot_packed_obj snippet ( '@P = qrotate(p@orient,(@P - v@pivot)) + v@packP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rotate_packed_obj_rot_packed_obj
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rotate_packed_obj_rot_packed_obj
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_rot_packed_obj
opuserdata -n '___Version___' -v '' $_obj_geo1_rotate_packed_obj_rot_packed_obj
opcf ..
opcf $_obj_geo1_rotate_packed_obj

# Node $_obj_geo1_rotate_packed_obj_attribcopy1 (Sop/attribcopy)
set _obj_geo1_rotate_packed_obj_attribcopy1 = `run("opadd -e -n -v attribcopy attribcopy1")`
oplocate -x `$arg2 + -0.0034500062465667725` -y `$arg3 + 3.0672443569272265` $_obj_geo1_rotate_packed_obj_attribcopy1
opparm -V 16.0.633 $_obj_geo1_rotate_packed_obj_attribcopy1 matchbyattribute ( on ) attributetomatch ( name ) attribname ( 'orient pivot packP' ) copyp ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribcopy1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribcopy1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_rotate_packed_obj_attribcopy1

# Node $_obj_geo1_rotate_packed_obj_attribute1 (Sop/attribute)
set _obj_geo1_rotate_packed_obj_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + -0.0034500062465667725` -y `$arg3 + 0.79954435692722692` $_obj_geo1_rotate_packed_obj_attribute1
opparm $_obj_geo1_rotate_packed_obj_attribute1  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.633 $_obj_geo1_rotate_packed_obj_attribute1 ptdel ( packP )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_attribute1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_attribute1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_rotate_packed_obj_attribute1

# Node $_obj_geo1_rotate_packed_obj_output1 (Sop/output)
set _obj_geo1_rotate_packed_obj_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.1175870895385742e-08` -y `$arg3 + -0.76824698720249895` $_obj_geo1_rotate_packed_obj_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rotate_packed_obj_output1
opexprlanguage -s hscript $_obj_geo1_rotate_packed_obj_output1
oporder -e attribwrangle4 rot_packed_obj attribcopy1 attribute1 output1 
opcf ..
opset -p on $_obj_geo1_rotate_packed_obj

opcf $arg1
opwire -n $_obj_geo1_attribpromote2 -0 $_obj_geo1_rotate_packed_obj
opwire -n $_obj_geo1_dopimport1 -1 $_obj_geo1_rotate_packed_obj
opcf $_obj_geo1_rotate_packed_obj
opwire -n -i 1 -0 $_obj_geo1_rotate_packed_obj_attribwrangle4
opwire -n $_obj_geo1_rotate_packed_obj_attribcopy1 -0 $_obj_geo1_rotate_packed_obj_rot_packed_obj
opwire -n -i 0 -0 $_obj_geo1_rotate_packed_obj_attribcopy1
opwire -n $_obj_geo1_rotate_packed_obj_attribwrangle4 -1 $_obj_geo1_rotate_packed_obj_attribcopy1
opwire -n $_obj_geo1_rotate_packed_obj_rot_packed_obj -0 $_obj_geo1_rotate_packed_obj_attribute1
opwire -n $_obj_geo1_rotate_packed_obj_attribute1 -0 $_obj_geo1_rotate_packed_obj_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rotate_packed_obj
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rotate_packed_obj
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle0" label="rev_slerp" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rev_slerp (Sop/attribwrangle)
set _obj_geo1_rev_slerp = `run("opadd -e -n -v attribwrangle rev_slerp")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rev_slerp
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_rev_slerp
opparm $_obj_geo1_rev_slerp  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rev_slerp snippet ( 'float qdotproduct(vector4 q1, q2)\n{\n    return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\n}\n\nvector4 qnormalize(vector4 q)\n{\n    int len = len(q);\n    float sum=0;\n    for(int i = 0; i < len; i++)\n    {\n        sum += pow(q[i],2);\n    }\n    sum = pow(sum,0.5);\n    \n    return q/sum;\n}\n\nvector4 q1 = p@orient;\nq1 = qnormalize(q1);\nvector4 q2 = p@opinput1_orient;\nq2 = qnormalize(q2);\nfloat dot = qdotproduct(q1, q2);\n\nif(dot>0)\n{\n    q2 = -q2;\n    dot = -dot;\n}\n\n\nfloat theta = acos(dot);\ntheta = theta * ch("bias");\n\nvector4 q3 = q2 - q1 * dot;\nq3 = qnormalize(q3);\n\np@orient = q1 * cos(theta) + q3 * sin(theta);\n' ) bias ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_rev_slerp
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_rev_slerp
opexprlanguage -s hscript $_obj_geo1_rev_slerp
opuserdata -n '___Version___' -v '' $_obj_geo1_rev_slerp
opset -p on $_obj_geo1_rev_slerp

opcf $arg1
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_rev_slerp
opwire -n $_obj_geo1_transform1 -1 $_obj_geo1_rev_slerp

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_rev_slerp
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rev_slerp
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle1" label="ka_slerp" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_slerp (Sop/attribwrangle)
set _obj_geo1_slerp = `run("opadd -e -n -v attribwrangle slerp")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_slerp
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_slerp
opparm $_obj_geo1_slerp  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_slerp snippet ( 'p@orient = slerp(p@orient, p@opinput1_orient,ch("bias"));' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_slerp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_slerp
opexprlanguage -s hscript $_obj_geo1_slerp
opuserdata -n '___Version___' -v '' $_obj_geo1_slerp
opuserdata -n '___toolcount___' -v '6' $_obj_geo1_slerp
opuserdata -n '___toolid___' -v 'attribwrangle1' $_obj_geo1_slerp
opset -p on $_obj_geo1_slerp

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_slerp
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_slerp
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle2" label="ndc_culling" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_ndc_culling (Sop/attribwrangle)
set _obj_geo1_ndc_culling = `run("opadd -e -n -v attribwrangle ndc_culling")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_ndc_culling
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "uvxx"  label   "Uvxx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvxy"  label   "Uvxy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "uvyx"  label   "Uvyx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvyy"  label   "Uvyy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "uvzx"  label   "Uvzx"  type    float   joinnext        default { "0" }         range   { 0 1 }     }     parm {        name    "uvzy"  label   "Uvzy"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "cam"   label   "Cam"   type    string  default { "" }     } ' $_obj_geo1_ndc_culling
opparm $_obj_geo1_ndc_culling  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_ndc_culling snippet ( 'vector ndcP = toNDC(chs("cam"),@P);\n\nif(ndcP.x<ch("uvxx") || ndcP.x>ch("uvxy"))removepoint(geoself(),@ptnum);\nelse if(ndcP.y<ch("uvyx") || ndcP.y>1+ch("uvyy"))removepoint(geoself(),@ptnum);\nelse if(ndcP.z<ch("uvzx") || ndcP.z>1+ch("uvzy"))removepoint(geoself(),@ptnum);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_ndc_culling
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_ndc_culling
opexprlanguage -s hscript $_obj_geo1_ndc_culling
opuserdata -n '___Version___' -v '' $_obj_geo1_ndc_culling
opset -p on $_obj_geo1_ndc_culling

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_ndc_culling
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_ndc_culling
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle3" label="del_by_atr_list" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_by_atr_list (Sop/attribwrangle)
set _obj_geo1_del_by_atr_list = `run("opadd -e -n -v attribwrangle del_by_atr_list")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_by_atr_list
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "val_list"      label   "Val List"      type    string  default { "" }     }     parm {         name    "atr"   label   "Atr"   type    string  default { "" }     } ' $_obj_geo1_del_by_atr_list
opparm $_obj_geo1_del_by_atr_list  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_by_atr_list snippet ( 'string vals = chs("val_list");\nstring valList[] = split(vals, " ");\nint len = len(valList);\n\nfor(int i =0; i < len; i++)\n{\n    if(i@`chs("atr")`==atoi(valList[i]))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n}' ) atr ( id )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_by_atr_list
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_by_atr_list
opexprlanguage -s hscript $_obj_geo1_del_by_atr_list
opuserdata -n '___Version___' -v '' $_obj_geo1_del_by_atr_list
opset -p on $_obj_geo1_del_by_atr_list

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_by_atr_list
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_by_atr_list
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle4" label="del_by_atr_list_run_over_detail" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_by_atr_list_run_over_detail (Sop/attribwrangle)
set _obj_geo1_del_by_atr_list_run_over_detail = `run("opadd -e -n -v attribwrangle del_by_atr_list_run_over_detail")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_by_atr_list_run_over_detail
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "val_list"      label   "Val List"      type    string  default { "" }     }     parm {         name    "atr"   label   "Atr"   type    string  default { "" }     } ' $_obj_geo1_del_by_atr_list_run_over_detail
opparm $_obj_geo1_del_by_atr_list_run_over_detail  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_by_atr_list_run_over_detail class ( detail ) snippet ( 'string vals = chs("val_list");\nstring valList[] = split(vals, " ");\nint len = len(valList);\n\nfor(int i =0; i < len; i++)\n{\n    int pt = findattribval(0,"point",chs("atr"),atoi(valList[i]));\n    removepoint(geoself(),pt);\n\n}' ) atr ( id )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_by_atr_list_run_over_detail
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_by_atr_list_run_over_detail
opexprlanguage -s hscript $_obj_geo1_del_by_atr_list_run_over_detail
opuserdata -n '___Version___' -v '' $_obj_geo1_del_by_atr_list_run_over_detail
opset -p on $_obj_geo1_del_by_atr_list_run_over_detail

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_by_atr_list_run_over_detail
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_by_atr_list_run_over_detail
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle6" label="del_randomly" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_del_randomly (Sop/attribwrangle)
set _obj_geo1_del_randomly = `run("opadd -e -n -v attribwrangle del_randomly")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_del_randomly
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "seed"  label   "Seed"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "keep_rate"     label   "Keep Rate"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_del_randomly
opparm $_obj_geo1_del_randomly  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_del_randomly snippet ( 'float rand = rand((i@id + ch("seed")+0.21) + (ch("seed")));\n\nif(rand > ch("keep_rate"))removepoint(geoself(),@ptnum);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_del_randomly
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_del_randomly
opexprlanguage -s hscript $_obj_geo1_del_randomly
opuserdata -n '___Version___' -v '' $_obj_geo1_del_randomly
opset -p on $_obj_geo1_del_randomly

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_del_randomly
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_del_randomly
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle7" label="extract_n_up_from_orient" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <toolSubmenu>kaTools/attribwrangle</toolSubmenu>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_extract_n_up_from_orient (Sop/attribwrangle)
set _obj_geo1_extract_n_up_from_orient = `run("opadd -e -n -v attribwrangle extract_n_up_from_orient")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_extract_n_up_from_orient
opparm $_obj_geo1_extract_n_up_from_orient  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_extract_n_up_from_orient snippet ( 'v@up = {0,1,0};\n@N = {0,0,1};\nv@up = qrotate(p@orient, v@up);\n@N = qrotate(p@orient, @N);' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_extract_n_up_from_orient
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_extract_n_up_from_orient
opexprlanguage -s hscript $_obj_geo1_extract_n_up_from_orient
opuserdata -n '___Version___' -v '' $_obj_geo1_extract_n_up_from_orient
opset -p on $_obj_geo1_extract_n_up_from_orient

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_extract_n_up_from_orient
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_extract_n_up_from_orient
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="attribwrangle8" label="fit" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_fit (Sop/attribwrangle)
set _obj_geo1_fit = `run("opadd -e -n -v attribwrangle fit")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_fit
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "min"   label   "Min"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max"   label   "Max"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "remap_grad"    label   "Remap Grad"    type    ramp_flt        default { "2" }         range   { 1! 10 }     } ' $_obj_geo1_fit
opparm $_obj_geo1_fit  bindings ( 0 ) groupbindings ( 0 ) remap_grad ( 2 )
opparm $_obj_geo1_fit snippet ( 'float grad = fit(@P.y,ch("min"),ch("max"),0,1);\ngrad = chramp("remap_grad",grad);' ) max ( 1 ) remap_grad2pos ( 1 ) remap_grad2value ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_fit
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_fit
opexprlanguage -s hscript $_obj_geo1_fit
opuserdata -n '___Version___' -v '' $_obj_geo1_fit
opset -p on $_obj_geo1_fit

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_fit
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_fit
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <toolshelf name="kaToolsDOP" label="kaToolsDOP">
    <memberTool name="DOP_pack"/>
    <memberTool name="DOP_simple_upres"/>
    <memberTool name="dop_crowd_avoidance"/>
    <memberTool name="apply_airresist"/>
    <memberTool name="dop_sop_solver"/>
    <memberTool name="override_div_size"/>
    <memberTool name="solve_collision"/>
    <memberTool name="dop_flexible_div_smoke"/>
  </toolshelf>

  <tool name="sc_crowd" label="sc_crowd" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_sc_crowd (Object/geo)
set _obj_sc_crowd = `run("opadd -e -n -v geo sc_crowd")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_sc_crowd
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_sc_crowd
opset -S on $_obj_sc_crowd
opparm -V 16.0.633 $_obj_sc_crowd use_dcolor ( off )
chautoscope $_obj_sc_crowd +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_sc_crowd
opexprlanguage -s hscript $_obj_sc_crowd
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd
opcf $_obj_sc_crowd

# Node $_obj_sc_crowd_mountain1 (Sop/mountain::2.0)
set _obj_sc_crowd_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.3940799999999998` $_obj_sc_crowd_mountain1
opparm $_obj_sc_crowd_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_mountain1
opexprlanguage -s hscript $_obj_sc_crowd_mountain1
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_sc_crowd_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_sc_crowd_mountain1

# Node $_obj_sc_crowd_crt_targetP (Sop/attribwrangle)
set _obj_sc_crowd_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_sc_crowd_crt_targetP
opparm $_obj_sc_crowd_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_targetP
opexprlanguage -s hscript $_obj_sc_crowd_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_targetP

# Node $_obj_sc_crowd_crt_source (Sop/attribwrangle)
set _obj_sc_crowd_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -4.5402399999999998` $_obj_sc_crowd_crt_source
opparm $_obj_sc_crowd_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_source
opexprlanguage -s hscript $_obj_sc_crowd_crt_source
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_source

# Node $_obj_sc_crowd_crt_terrain (Sop/attribwrangle)
set _obj_sc_crowd_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -3.8374799999999998` $_obj_sc_crowd_crt_terrain
opparm $_obj_sc_crowd_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_crt_terrain
opexprlanguage -s hscript $_obj_sc_crowd_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_crt_terrain

# Node $_obj_sc_crowd_DOP_space_colonization_crowd (Sop/solver)
set _obj_sc_crowd_DOP_space_colonization_crowd = `run("opadd -e -n -v solver DOP_space_colonization_crowd")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -8.1926199999999998` $_obj_sc_crowd_DOP_space_colonization_crowd
opcolor -c 0.40000000596046448 1 1 $_obj_sc_crowd_DOP_space_colonization_crowd
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_DOP_space_colonization_crowd
opexprlanguage -s hscript $_obj_sc_crowd_DOP_space_colonization_crowd
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_DOP_space_colonization_crowd

# Node $_obj_sc_crowd_attribwrangle1 (Sop/attribwrangle)
set _obj_sc_crowd_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -9.9643599999999992` $_obj_sc_crowd_attribwrangle1
opparm $_obj_sc_crowd_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_sc_crowd_attribwrangle1
opexprlanguage -s hscript $_obj_sc_crowd_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_attribwrangle1

# Node $_obj_sc_crowd_attribwrangle2 (Sop/attribwrangle)
set _obj_sc_crowd_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 10.888595357827874` -y `$arg3 + -10.286617559130118` $_obj_sc_crowd_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_attribwrangle2
opparm $_obj_sc_crowd_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_attribwrangle2
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_attribwrangle2
opexprlanguage -s hscript $_obj_sc_crowd_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_attribwrangle2

# Node $_obj_sc_crowd_calc_new_v (Sop/attribwrangle)
set _obj_sc_crowd_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -11.714287559130121` $_obj_sc_crowd_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_calc_new_v
opparm $_obj_sc_crowd_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_calc_new_v
opexprlanguage -s hscript $_obj_sc_crowd_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_calc_new_v

# Node $_obj_sc_crowd_advect (Sop/attribwrangle)
set _obj_sc_crowd_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -15.441077559130118` $_obj_sc_crowd_advect
opparm $_obj_sc_crowd_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_advect
opexprlanguage -s hscript $_obj_sc_crowd_advect
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_advect

# Node $_obj_sc_crowd_init_v (Sop/attribwrangle)
set _obj_sc_crowd_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 9.2952353578278739` -y `$arg3 + -7.1446075591301188` $_obj_sc_crowd_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_init_v
opparm $_obj_sc_crowd_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_init_v
opexprlanguage -s hscript $_obj_sc_crowd_init_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_init_v

# Node $_obj_sc_crowd_add_v (Sop/attribwrangle)
set _obj_sc_crowd_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -13.197827559130118` $_obj_sc_crowd_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_add_v
opparm $_obj_sc_crowd_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_add_v
opexprlanguage -s hscript $_obj_sc_crowd_add_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_add_v

# Node $_obj_sc_crowd_limit_v (Sop/attribwrangle)
set _obj_sc_crowd_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -14.27557755913012` $_obj_sc_crowd_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_sc_crowd_limit_v
opparm $_obj_sc_crowd_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_limit_v
opexprlanguage -s hscript $_obj_sc_crowd_limit_v
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_limit_v

# Node $_obj_sc_crowd_update_N (Sop/attribwrangle)
set _obj_sc_crowd_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -18.026877559130121` $_obj_sc_crowd_update_N
opparm $_obj_sc_crowd_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_update_N
opexprlanguage -s hscript $_obj_sc_crowd_update_N
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_update_N

# Node $_obj_sc_crowd_update_up (Sop/attribwrangle)
set _obj_sc_crowd_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 7.0536053578278732` -y `$arg3 + -16.593577559130118` $_obj_sc_crowd_update_up
opparm $_obj_sc_crowd_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_sc_crowd_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_sc_crowd_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_update_up
opexprlanguage -s hscript $_obj_sc_crowd_update_up
opuserdata -n '___Version___' -v '' $_obj_sc_crowd_update_up
opcf ..
opcf $_obj_sc_crowd

# Node $_obj_sc_crowd_grid1 (Sop/grid)
set _obj_sc_crowd_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.5117200000000004` $_obj_sc_crowd_grid1
opparm -V 16.0.633 $_obj_sc_crowd_grid1 size ( 50 50 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_grid1
opexprlanguage -s hscript $_obj_sc_crowd_grid1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_grid1

# Node $_obj_sc_crowd_scatter1 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 0.848607` $_obj_sc_crowd_scatter1
opparm -V 16.0.633 $_obj_sc_crowd_scatter1 forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter1
opexprlanguage -s hscript $_obj_sc_crowd_scatter1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter1

# Node $_obj_sc_crowd_scatter2 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -1.0686800000000001` $_obj_sc_crowd_scatter2
opparm -V 16.0.633 $_obj_sc_crowd_scatter2 npts ( 20 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter2
opexprlanguage -s hscript $_obj_sc_crowd_scatter2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter2

# Node $_obj_sc_crowd_scatter3 (Sop/scatter::2.0)
set _obj_sc_crowd_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -1.31681` $_obj_sc_crowd_scatter3
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_sc_crowd_scatter3/npts
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_scatter3 npts ( npts ) seed ( 3.3799999999999999 ) scaleradiiby ( 1.8 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_scatter3
opexprlanguage -s hscript $_obj_sc_crowd_scatter3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_scatter3

# Node $_obj_sc_crowd_object_merge1 (Sop/object_merge)
set _obj_sc_crowd_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 1.6144240366064295` -y `$arg3 + -7.2048945682477008` $_obj_sc_crowd_object_merge1
opparm $_obj_sc_crowd_object_merge1  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_object_merge1 xformtype ( local ) objpath1 ( ../DOP_space_colonization_crowd/d/s/null1/ )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_object_merge1
opexprlanguage -s hscript $_obj_sc_crowd_object_merge1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_object_merge1

# Node $_obj_sc_crowd_null1 (Sop/null)
set _obj_sc_crowd_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_sc_crowd_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_null1
opexprlanguage -s hscript $_obj_sc_crowd_null1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_null1

# Node $_obj_sc_crowd_box1 (Sop/box)
set _obj_sc_crowd_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_sc_crowd_box1
opparm -V 16.0.633 $_obj_sc_crowd_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_box1
opexprlanguage -s hscript $_obj_sc_crowd_box1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_box1

# Node $_obj_sc_crowd_sphere1 (Sop/sphere)
set _obj_sc_crowd_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_sc_crowd_sphere1
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_sc_crowd_sphere1/rady
chadd -t 0 0 $_obj_sc_crowd_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_sc_crowd_sphere1/radz
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_sphere1
opexprlanguage -s hscript $_obj_sc_crowd_sphere1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sphere1

# Node $_obj_sc_crowd_merge1 (Sop/merge)
set _obj_sc_crowd_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_sc_crowd_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_merge1
opexprlanguage -s hscript $_obj_sc_crowd_merge1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_merge1

# Node $_obj_sc_crowd_copytopoints1 (Sop/copytopoints)
set _obj_sc_crowd_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_sc_crowd_copytopoints1
opparm -V 16.0.633 $_obj_sc_crowd_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_copytopoints1
opexprlanguage -s hscript $_obj_sc_crowd_copytopoints1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_copytopoints1

# Node $_obj_sc_crowd_sphere2 (Sop/sphere)
set _obj_sc_crowd_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_sc_crowd_sphere2
opparm -V 16.0.633 $_obj_sc_crowd_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_sphere2
opexprlanguage -s hscript $_obj_sc_crowd_sphere2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sphere2

# Node $_obj_sc_crowd_sort1 (Sop/sort)
set _obj_sc_crowd_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.848607` $_obj_sc_crowd_sort1
opparm -V 16.0.633 $_obj_sc_crowd_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_sort1
opexprlanguage -s hscript $_obj_sc_crowd_sort1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sort1

# Node $_obj_sc_crowd_blast2 (Sop/blast)
set _obj_sc_crowd_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.041596000000000001` $_obj_sc_crowd_blast2
opparm -V 16.0.633 $_obj_sc_crowd_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_blast2
opexprlanguage -s hscript $_obj_sc_crowd_blast2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast2

# Node $_obj_sc_crowd_sort2 (Sop/sort)
set _obj_sc_crowd_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.848607` $_obj_sc_crowd_sort2
opparm -V 16.0.633 $_obj_sc_crowd_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_sort2
opexprlanguage -s hscript $_obj_sc_crowd_sort2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_sort2

# Node $_obj_sc_crowd_blast3 (Sop/blast)
set _obj_sc_crowd_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.041596000000000001` $_obj_sc_crowd_blast3
opparm -V 16.0.633 $_obj_sc_crowd_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_sc_crowd_blast3
opexprlanguage -s hscript $_obj_sc_crowd_blast3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast3

# Node $_obj_sc_crowd_facet1 (Sop/facet)
set _obj_sc_crowd_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.2336999999999998` $_obj_sc_crowd_facet1
opparm -V 16.0.633 $_obj_sc_crowd_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_facet1
opexprlanguage -s hscript $_obj_sc_crowd_facet1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_facet1

# Node $_obj_sc_crowd_blast1 (Sop/blast)
set _obj_sc_crowd_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 2.3395000000000001` $_obj_sc_crowd_blast1
opparm -V 16.0.633 $_obj_sc_crowd_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_blast1
opexprlanguage -s hscript $_obj_sc_crowd_blast1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_sc_crowd_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_sc_crowd_blast1

# Node $_obj_sc_crowd_Prev_Frame (Sop/dopimport)
set _obj_sc_crowd_Prev_Frame = `run("opadd -e -n -v dopimport Prev_Frame")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -5.4283275591301194` $_obj_sc_crowd_Prev_Frame
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_sc_crowd_Prev_Frame/doposxform
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_sc_crowd_Prev_Frame/doxform
chadd -t 0 0 $_obj_sc_crowd_Prev_Frame integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_sc_crowd_Prev_Frame/integrateovertime
chblockend
opparm -V 16.0.633 $_obj_sc_crowd_Prev_Frame doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) singleobject ( on ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) centeratpivot ( off ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_sc_crowd_Prev_Frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Prev_Frame
opexprlanguage -s hscript $_obj_sc_crowd_Prev_Frame
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Prev_Frame

# Node $_obj_sc_crowd_Input_1 (Sop/object_merge)
set _obj_sc_crowd_Input_1 = `run("opadd -e -n -v object_merge Input_1")`
oplocate -x `$arg2 + 9.2969853578278734` -y `$arg3 + -5.2067675591301192` $_obj_sc_crowd_Input_1
opparm $_obj_sc_crowd_Input_1  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_1 objpath1 ( '`opinputpath("../..", 0)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_1
opexprlanguage -s hscript $_obj_sc_crowd_Input_1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_1

# Node $_obj_sc_crowd_Input_2 (Sop/object_merge)
set _obj_sc_crowd_Input_2 = `run("opadd -e -n -v object_merge Input_2")`
oplocate -x `$arg2 + 10.890345357827874` -y `$arg3 + -5.761297559130119` $_obj_sc_crowd_Input_2
opparm $_obj_sc_crowd_Input_2  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_2 objpath1 ( '`opinputpath("../..", 1)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_2
opexprlanguage -s hscript $_obj_sc_crowd_Input_2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_2

# Node $_obj_sc_crowd_Input_3 (Sop/object_merge)
set _obj_sc_crowd_Input_3 = `run("opadd -e -n -v object_merge Input_3")`
oplocate -x `$arg2 + 12.199095357827874` -y `$arg3 + -6.3768075591301194` $_obj_sc_crowd_Input_3
opparm $_obj_sc_crowd_Input_3  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_3 objpath1 ( '`opinputpath("../..", 2)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_3
opexprlanguage -s hscript $_obj_sc_crowd_Input_3
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_3

# Node $_obj_sc_crowd_Input_4 (Sop/object_merge)
set _obj_sc_crowd_Input_4 = `run("opadd -e -n -v object_merge Input_4")`
oplocate -x `$arg2 + 13.711145357827874` -y `$arg3 + -6.9313275591301196` $_obj_sc_crowd_Input_4
opparm $_obj_sc_crowd_Input_4  numobj ( 1 )
opparm -V 16.0.633 $_obj_sc_crowd_Input_4 objpath1 ( '`opinputpath("../..", 3)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_sc_crowd_Input_4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_sc_crowd_Input_4
opexprlanguage -s hscript $_obj_sc_crowd_Input_4
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_Input_4

# Node $_obj_sc_crowd_switch1 (Sop/switch)
set _obj_sc_crowd_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 7.0566053578278733` -y `$arg3 + -8.5880375591301181` $_obj_sc_crowd_switch1
chblockbegin
chadd -t 0 0 $_obj_sc_crowd_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../../startframe")' $_obj_sc_crowd_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_switch1
opexprlanguage -s hscript $_obj_sc_crowd_switch1
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_switch1

# Node $_obj_sc_crowd_null2 (Sop/null)
set _obj_sc_crowd_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 11.738315357827874` -y `$arg3 + -12.843087559130119` $_obj_sc_crowd_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_sc_crowd_null2
opexprlanguage -s hscript $_obj_sc_crowd_null2
opuserdata -n '___Version___' -v '16.0.633' $_obj_sc_crowd_null2
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain DOP_space_colonization_crowd scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up Prev_Frame Input_1 Input_2 Input_3 Input_4 switch1 null2 
opcf ..
opset -p on $_obj_sc_crowd

opcf $arg1
opcf $_obj_sc_crowd
opwire -n $_obj_sc_crowd_grid1 -0 $_obj_sc_crowd_mountain1
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_scatter1
opwire -n $_obj_sc_crowd_blast3 -0 $_obj_sc_crowd_scatter2
opwire -n $_obj_sc_crowd_scatter2 -0 $_obj_sc_crowd_crt_targetP
opwire -n $_obj_sc_crowd_scatter3 -1 $_obj_sc_crowd_crt_targetP
opwire -n $_obj_sc_crowd_crt_targetP -0 $_obj_sc_crowd_crt_source
opwire -n $_obj_sc_crowd_scatter1 -0 $_obj_sc_crowd_crt_terrain
opwire -n $_obj_sc_crowd_crt_source -0 $_obj_sc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_sc_crowd_crt_terrain -1 $_obj_sc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_sc_crowd_blast2 -0 $_obj_sc_crowd_scatter3
opwire -n $_obj_sc_crowd_attribwrangle1 -0 $_obj_sc_crowd_null1
opwire -n $_obj_sc_crowd_DOP_space_colonization_crowd -0 $_obj_sc_crowd_attribwrangle1
opwire -n $_obj_sc_crowd_sphere1 -0 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_box1 -1 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_sphere2 -2 $_obj_sc_crowd_merge1
opwire -n $_obj_sc_crowd_merge1 -0 $_obj_sc_crowd_copytopoints1
opwire -n $_obj_sc_crowd_null1 -1 $_obj_sc_crowd_copytopoints1
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_sort1
opwire -n $_obj_sc_crowd_sort1 -0 $_obj_sc_crowd_blast2
opwire -n $_obj_sc_crowd_blast1 -0 $_obj_sc_crowd_sort2
opwire -n $_obj_sc_crowd_sort2 -0 $_obj_sc_crowd_blast3
opwire -n $_obj_sc_crowd_mountain1 -0 $_obj_sc_crowd_facet1
opwire -n $_obj_sc_crowd_facet1 -0 $_obj_sc_crowd_blast1
opwire -n $_obj_sc_crowd_Input_2 -0 $_obj_sc_crowd_attribwrangle2
opwire -n $_obj_sc_crowd_switch1 -1 $_obj_sc_crowd_attribwrangle2
opwire -n $_obj_sc_crowd_switch1 -0 $_obj_sc_crowd_calc_new_v
opwire -n $_obj_sc_crowd_attribwrangle2 -1 $_obj_sc_crowd_calc_new_v
opwire -n $_obj_sc_crowd_limit_v -0 $_obj_sc_crowd_advect
opwire -n $_obj_sc_crowd_Input_1 -0 $_obj_sc_crowd_init_v
opwire -n $_obj_sc_crowd_calc_new_v -0 $_obj_sc_crowd_add_v
opwire -n $_obj_sc_crowd_add_v -0 $_obj_sc_crowd_limit_v
opwire -n $_obj_sc_crowd_update_up -0 $_obj_sc_crowd_update_N
opwire -n $_obj_sc_crowd_advect -0 $_obj_sc_crowd_update_up
opwire -n $_obj_sc_crowd_Input_2 -1 $_obj_sc_crowd_update_up
opwire -n $_obj_sc_crowd_Prev_Frame -0 $_obj_sc_crowd_switch1
opwire -n $_obj_sc_crowd_init_v -1 $_obj_sc_crowd_switch1
opwire -n $_obj_sc_crowd_attribwrangle2 -0 $_obj_sc_crowd_null2
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_sc_crowd
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_sc_crowd
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="rotate_by_quar" label="rotate_by_quar" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_geo1_rotate_by_quar (Sop/attribvop)
set _obj_fire01_geo1_rotate_by_quar = `run("opadd -e -n -v attribvop rotate_by_quar")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_geo1_rotate_by_quar
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      dialog  }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      dialog  }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "angle"         label   "Angle"         type    float   default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "axis"  label   "Normalized Rotation Axis"      type    float   size    3       default { "1" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_geo1_rotate_by_quar
opparm $_obj_fire01_geo1_rotate_by_quar  bindings ( 0 ) groupbindings ( 0 )
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar angle ( 90 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_geo1_rotate_by_quar
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_geo1_rotate_by_quar
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar
opcf $_obj_fire01_geo1_rotate_by_quar

# Node $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1

# Node $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_geo1_rotate_by_quar_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.636915966896794` -y `$arg3 + 0.47758885769640402` $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1

# Node $_obj_fire01_geo1_rotate_by_quar_quaternion1 (Vop/quaternion)
set _obj_fire01_geo1_rotate_by_quar_quaternion1 = `run("opadd -e -n -v quaternion quaternion1")`
oplocate -x `$arg2 + 6.314656699969623` -y `$arg3 + -3.7257533014517858` $_obj_fire01_geo1_rotate_by_quar_quaternion1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_quaternion1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_quaternion1

# Node $_obj_fire01_geo1_rotate_by_quar_bind1 (Vop/bind)
set _obj_fire01_geo1_rotate_by_quar_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 5.7137916493246914` -y `$arg3 + -0.58906796103844927` $_obj_fire01_geo1_rotate_by_quar_bind1
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_bind1 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_bind1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_bind1

# Node $_obj_fire01_geo1_rotate_by_quar_bind2 (Vop/bind)
set _obj_fire01_geo1_rotate_by_quar_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 13.077437794639941` -y `$arg3 + -0.58906794911752014` $_obj_fire01_geo1_rotate_by_quar_bind2
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_bind2 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_bind2
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_bind2

# Node $_obj_fire01_geo1_rotate_by_quar_qmultiply1 (Vop/qmultiply)
set _obj_fire01_geo1_rotate_by_quar_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.9901681458396574` -y `$arg3 + -1.2629575975136484` $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_qmultiply1

# Node $_obj_fire01_geo1_rotate_by_quar_qrotate1 (Vop/qrotate)
set _obj_fire01_geo1_rotate_by_quar_qrotate1 = `run("opadd -e -n -v qrotate qrotate1")`
oplocate -x `$arg2 + 9.990168116037335` -y `$arg3 + 1.5005906932910018` $_obj_fire01_geo1_rotate_by_quar_qrotate1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_qrotate1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_qrotate1

# Node $_obj_fire01_geo1_rotate_by_quar_angle (Vop/parameter)
set _obj_fire01_geo1_rotate_by_quar_angle = `run("opadd -e -n -v parameter angle")`
oplocate -x `$arg2 + -0.067831036717705295` -y `$arg3 + -2.8957532715749581` $_obj_fire01_geo1_rotate_by_quar_angle
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_angle parmname ( angle ) parmlabel ( Angle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_angle
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_angle

# Node $_obj_fire01_geo1_rotate_by_quar_axis (Vop/parameter)
set _obj_fire01_geo1_rotate_by_quar_axis = `run("opadd -e -n -v parameter axis")`
oplocate -x `$arg2 + 2.4754214887490642` -y `$arg3 + -5.3904170349971725` $_obj_fire01_geo1_rotate_by_quar_axis
opparm -V 16.0.674 $_obj_fire01_geo1_rotate_by_quar_axis parmname ( axis ) parmlabel ( 'Normalized Rotation Axis' ) parmtype ( float3 ) float3def ( 1 0 0 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_axis
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_axis

# Node $_obj_fire01_geo1_rotate_by_quar_degtorad1 (Vop/degtorad)
set _obj_fire01_geo1_rotate_by_quar_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.1674082417432974` -y `$arg3 + -3.434731251239866` $_obj_fire01_geo1_rotate_by_quar_degtorad1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_geo1_rotate_by_quar_degtorad1
opexprlanguage -s hscript $_obj_fire01_geo1_rotate_by_quar_degtorad1
opcf ..
opcf $_obj_fire01_geo1_rotate_by_quar
oporder -e geometryvopglobal1 geometryvopoutput1 quaternion1 bind1 bind2 qmultiply1 qrotate1 angle axis degtorad1 
opcf ..
opset -p on $_obj_fire01_geo1_rotate_by_quar

opcf $arg1
opwire -n $_obj_fire01_geo1_lxf_importer1 -0 $_obj_fire01_geo1_rotate_by_quar
opcf $_obj_fire01_geo1_rotate_by_quar
opwire -n $_obj_fire01_geo1_rotate_by_quar_qrotate1 -0 $_obj_fire01_geo1_rotate_by_quar_geometryvopoutput1
opwire -n $_obj_fire01_geo1_rotate_by_quar_degtorad1 -0 $_obj_fire01_geo1_rotate_by_quar_quaternion1
opwire -n $_obj_fire01_geo1_rotate_by_quar_axis -1 $_obj_fire01_geo1_rotate_by_quar_quaternion1
opwire -n $_obj_fire01_geo1_rotate_by_quar_qmultiply1 -0 $_obj_fire01_geo1_rotate_by_quar_bind2
opwire -n $_obj_fire01_geo1_rotate_by_quar_quaternion1 -0 $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opwire -n $_obj_fire01_geo1_rotate_by_quar_bind1 -1 $_obj_fire01_geo1_rotate_by_quar_qmultiply1
opwire -n $_obj_fire01_geo1_rotate_by_quar_quaternion1 -0 $_obj_fire01_geo1_rotate_by_quar_qrotate1
opwire -n $_obj_fire01_geo1_rotate_by_quar_geometryvopglobal1 -1 $_obj_fire01_geo1_rotate_by_quar_qrotate1
opwire -n $_obj_fire01_geo1_rotate_by_quar_angle -0 $_obj_fire01_geo1_rotate_by_quar_degtorad1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_geo1_rotate_by_quar
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_geo1_rotate_by_quar
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="clip" label="clip" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_clip (Sop/attribwrangle)
set _obj_geo1_clip = `run("opadd -e -n -v attribwrangle clip")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_clip
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "cutDir"        label   "Cutdir"        type    vector  size    3       default { "0" "0" "0" }         range   { 0 1 }     }     parm {        name    "cutOrigin"     label   "Cutorigin"     type    vector  size    3       default { "0" "0" "0" }         range   { 0 1 }     }     parm {        name    "dist"  label   "Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "keep"  label   "keep"  type    string  default { "" }  menu    {           "both"      "both"      "above"     "above"             "below"     "below"         }       export  all     }     parm {    name    "num_of_pt_attribs"     label   "num_of_pt_attribs"     type    integer         default { "0" }         range   { 0 10 }     } ' $_obj_geo1_clip
opparm $_obj_geo1_clip  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_clip num_of_pt_attribs
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -F 'geo = hou.pwd().geometry()\n\nreturn len(geo.pointAttribs())' -l p $_obj_geo1_clip/num_of_pt_attribs
chblockend
opparm $_obj_geo1_clip class ( detail ) vex_numcount ( 1 ) snippet ( 'string in0 = @OpInput1;\nint nprims = nprimitives(in0);\n\nint op;\nstring operation = chs("keep");\nif(operation == "above")op= 1;\nif(operation == "below")op= 2;\nelse op= 0;\n\nvector cutDir = normalize(chv("cutDir"));\nvector cutOrigin = chv("cutOrigin");\nfloat dist = ch("dist");\n\n//////////////////////////////////////////////////////////////////\n\nfor(int primnum = 0; primnum < nprims; primnum++)\n{\n    int vers[] = primvertices(0, primnum);\n    int length = len(vers);\n    \n    int border=0;\n    int prim0pts[];\n    int prim1pts[];\n    int numNewPts = 0;\n    \n    // check if this mesh is split\n    for(int i = 0; i< length; i++)\n    {\n        int srcPoint = vertexpoint(in0, vers[i]);\n        vector srcP = point(in0, "P", srcPoint);\n        vector srcPDir = normalize(srcP - cutOrigin);\n        \n        float dot = dot(cutDir, srcPDir);\n        \n        if(dot<=0)border += 1;\n    }\n    \n    // if it is not cut, maybe remove and done.\n    if(border == 0)\n    {\n        if(op == 2)removeprim(geoself(),primnum,1);\n        //        continue;continue;\n    }\n    else if(border == length)\n    {\n        if(op == 1)removeprim(geoself(),primnum,1);\n        //continue;\n    }\n    \n    else\n    {\n        // cut mesh\n        int srcPoint;\n        float srcDot;\n        \n        for(int i = 0; i< length; i++)\n        {\n            int hedge = vertexhedge(in0, vers[i]);\n            \n            //int primary = hedge_isprimary(in0, hedge);\n            //if(primary == 0)continue;\n            \n            int destVtx = hedge_dstvertex(in0, hedge);\n                    \n            srcPoint = vertexpoint(in0, vers[i]);\n            int destPoint = vertexpoint(in0, destVtx);\n            vector srcP = point(in0, "P", srcPoint);\n            vector destP = point(in0, "P", destPoint);\n            \n            vector srcPDir = normalize(srcP - cutOrigin);\n            vector destPDir = normalize(destP - cutOrigin);\n            srcDot = dot(cutDir, srcPDir);\n            float destDot = dot(cutDir, destPDir);\n            \n            if(srcDot > 0)\n            {\n                push(prim0pts, srcPoint);\n            }\n            else if(srcDot == 0)\n            {\n                push(prim0pts, srcPoint);\n                push(prim1pts, srcPoint);\n            }\n            else if(srcDot < 0)\n            {\n                push(prim1pts, srcPoint);\n            }\n            \n            \n            if((sign(srcDot) != sign(destDot)) && srcDot != 0 && destDot != 0)\n            {\n                //@Cd=set(float(i)/length, float(border)/length, 0);\n                float bias = -destDot/(srcDot - destDot);\n                int newPt = addpoint(geoself(), lerp(destP, srcP, bias));\n                push(prim0pts, newPt);\n                push(prim1pts, newPt);\n        \n                numNewPts += 1;\n            }\n        }\n        \n        \n        \n        // remove original mesh, and add 2 meshes which cover original\n        \n        removeprim(geoself(),primnum,1);\n        if(op != 2)\n        {\n            int newPrim = addprim(geoself(), "poly");\n            foreach(int pt; prim0pts)\n            {\n                addvertex(geoself(), newPrim, pt);\n            }\n        }\n        if(op != 1)\n        {\n            int newPrim = addprim(geoself(), "poly");\n            foreach(int pt; prim1pts)\n            {\n                addvertex(geoself(), newPrim, pt);\n            }\n        }\n    }\n}' ) cutDir ( 0 1 0 ) keep ( both ) num_of_pt_attribs ( num_of_pt_attribs )
chautoscope $_obj_geo1_clip +num_of_pt_attribs
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_clip
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_clip
opexprlanguage -s hscript $_obj_geo1_clip
opuserdata -n '___Version___' -v '' $_obj_geo1_clip
opset -p on $_obj_geo1_clip

opcf $arg1
opwire -n $_obj_geo1_attribwrangle3 -0 $_obj_geo1_clip

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_clip
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_clip
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="CALC_size" label="CALC_size" icon="SOP_measure">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_explosion01_FX_explosion_CALC_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size = `run("opadd -e -n -v subnet CALC_size")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_explosion01_FX_explosion_CALC_size
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     parm {    name    "accurate"      label   "accurate"      type    toggle  default { "0" }         range   { 0! 10 }       parmtag { "autoscope" "0000000000000000" }     } ' $_obj_explosion01_FX_explosion_CALC_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size
opcf $_obj_explosion01_FX_explosion_CALC_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size_bound_size = `run("opadd -e -n -v subnet bound_size")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -0.19115699999999999` $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size (Sop/attribwrangle)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size = `run("opadd -e -n -v attribwrangle crt_size")`
oplocate -x `$arg2 + -0.0045999999999999999` -y `$arg3 + 1.3579000000000001` $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size class ( detail ) snippet ( 'vector min,max;\ngetbbox(0,min,max);\n\nvector size = abs(max-min);\nfloat vol = size.x * size.y * size.z;\n\n\n@size = vol;\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opuserdata -n '___Version___' -v '' $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opcf ..

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size (Sop/subnet)
set _obj_explosion01_FX_explosion_CALC_size_volume_size = `run("opadd -e -n -v subnet volume_size")`
oplocate -x `$arg2 + 3.75996` -y `$arg3 + -0.19115699999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcolor -c 0.86699998378753662 0 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 (Sop/attribwrangle)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + 4.5744100000000003` -y `$arg3 + -0.83312600000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spare_input0"  label   "Spare Input 0"         type    oppath  default { "" }  help    "Refer to this in expressions as -1, such as: npoint(-1)"       parmtag { "opfilter" "!!SOP!!" }        parmtag { "oprelative" "." }     } ' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1 class ( detail ) snippet ( 'int nprims = nprimitives(0);\nfloat vol = 0;\n\nfor(int primnum=0;primnum<nprims; primnum++)\n{\n    vol += primintrinsic(0,"measuredvolume",primnum);\n}\n\n@size = vol;' ) spare_input0 ( ../foreach_begin2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opcf ..
opcf ..
opcf $_obj_explosion01_FX_explosion_CALC_size

# Node $_obj_explosion01_FX_explosion_CALC_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -6.4508900000000002` $_obj_explosion01_FX_explosion_CALC_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_output1
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 (Sop/block_end)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 1.0055582824741727e-08` -y `$arg3 + -0.93523175438865702` $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 (Sop/block_begin)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 2.9032` $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 (Sop/connectivity)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 = `run("opadd -e -n -v connectivity connectivity1")`
oplocate -x `$arg2 + -0.0016000000000000001` -y `$arg3 + 4.1805000000000003` $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 (Sop/compile_end)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 = `run("opadd -e -n -v compile_end compile_end2")`
oplocate -x `$arg2 + 1.0055582824741727e-08` -y `$arg3 + -3.6198317543886569` $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 (Sop/compile_begin)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 = `run("opadd -e -n -v compile_begin compile_begin2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 5.2176` $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 blockpath ( ../compile_end2 )
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 (Sop/attribute)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 = `run("opadd -e -n -v attribute attribute1")`
oplocate -x `$arg2 + -0.005049999944417175` -y `$arg3 + -2.2840417543886571` $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opparm $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 stdswitcher ( 2 2 2 2 2 ) primdel ( class )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -0.0015999999444171753` -y `$arg3 + -5.7388717543886569` $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1

# Node $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -0.0050499985370784373` -y `$arg3 + 0.359125105520887` $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 inname ( size ) inclass ( detail ) outclass ( primitive ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
oporder -e crt_size foreach_end1 foreach_begin1 connectivity1 compile_end2 compile_begin2 attribute1 output1 attribpromote1 
opcf ..
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + -1.3393299999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 inname ( size ) inclass ( primitive ) outclass ( detail ) method ( sum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 (Sop/measure)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 = `run("opadd -e -n -v measure measure1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -0.51577499999999998` $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none    bindselector prims "Measure Primitives"             "Select the primitives to measure and press Enter to complete."         0 1 0xffffffff 0 "" 0     }     parm {      name    "type"  baseparm        label   "Type"  export  none     }     parm {   name    "override"      baseparm        label   "Override Name"         export  none     }     parm {   name    "attribname"    baseparm        label   "Attribute"     export  none     }     parm {   name    "curvetype"     baseparm        label   "Curvature Type"        export  none     }     parm {   name    "curve"         baseparm        label   "Min/Max"       export  none     }     parm {   name    "t"     baseparm        label   "Center"        export  none     }     parm {   name    "spare_input0"  label   "Spare Input 0"         type    oppath  default { "" }  help    "Refer to this in expressions as -1, such as: npoint(-1)"       parmtag { "opfilter" "!!SOP!!" }        parmtag { "oprelative" "." }     } ' $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 type ( volume ) override ( on ) attribname ( size ) spare_input0 ( ../foreach_begin2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 (Sop/attribpromote)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 = `run("opadd -e -n -v attribpromote attribpromote2")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + -2.3138000000000001` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 inname ( size ) inclass ( detail ) outclass ( primitive ) method ( first )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 (Sop/block_begin)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 0.75090199999999996` $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 method ( piece ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 (Sop/connectivity)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 = `run("opadd -e -n -v connectivity connectivity2")`
oplocate -x `$arg2 + 2.3460900000000001e-09` -y `$arg3 + 2.0282` $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 (Sop/block_end)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 = `run("opadd -e -n -v block_end foreach_end2")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -3.3399200000000002` $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin2 ) templatepath ( ../foreach_begin2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 (Sop/attribute)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 = `run("opadd -e -n -v attribute attribute2")`
oplocate -x `$arg2 + -0.0034499999999999999` -y `$arg3 + -4.6887299999999996` $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opparm $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2  ptrenames ( 5 ) vtxrenames ( 5 ) primrenames ( 5 ) detailrenames ( 5 ) rmanconversions ( 5 )
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 stdswitcher ( 2 2 2 2 2 ) primdel ( class )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 (Sop/compile_end)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 = `run("opadd -e -n -v compile_end compile_end3")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -5.9408799999999999` $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 (Sop/compile_begin)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 = `run("opadd -e -n -v compile_begin compile_begin3")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 3.19617` $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opparm -V 16.0.674 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 blockpath ( ../compile_end3 )
opcolor -c 0.75 0.75 0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1 (Sop/output)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + -7.4033800000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1

# Node $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1 (Sop/null)
set _obj_explosion01_FX_explosion_CALC_size_volume_size_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -1.11759e-08` -y `$arg3 + 4.5558300000000003` $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
oporder -e attribpromote1 measure1 attribpromote2 foreach_begin2 connectivity2 foreach_end2 attribute2 compile_end3 compile_begin3 output1 attribwrangle1 null1 
opcf ..

# Node $_obj_explosion01_FX_explosion_CALC_size_switch1 (Sop/switch)
set _obj_explosion01_FX_explosion_CALC_size_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -2.0489100000000001e-08` -y `$arg3 + -3.8235399999999999` $_obj_explosion01_FX_explosion_CALC_size_switch1
chblockbegin
chadd -t 40.625 40.625 $_obj_explosion01_FX_explosion_CALC_size_switch1 input
chkey -t 40.625 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../accurate")' $_obj_explosion01_FX_explosion_CALC_size_switch1/input
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_explosion01_FX_explosion_CALC_size_switch1
opexprlanguage -s hscript $_obj_explosion01_FX_explosion_CALC_size_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_explosion01_FX_explosion_CALC_size_switch1
oporder -e output1 bound_size volume_size switch1 
opcf ..
opset -p on $_obj_explosion01_FX_explosion_CALC_size

opcf $arg1
opwire -n $_obj_explosion01_FX_explosion_convertvdb15 -0 $_obj_explosion01_FX_explosion_CALC_size
opcf $_obj_explosion01_FX_explosion_CALC_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_switch1 -0 $_obj_explosion01_FX_explosion_CALC_size_output1
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size
opcf $_obj_explosion01_FX_explosion_CALC_size_bound_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_begin1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_connectivity1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_begin2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_foreach_end1 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribute1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_compile_end2 -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_output1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size_crt_size -0 $_obj_explosion01_FX_explosion_CALC_size_bound_size_attribpromote1
opcf ..
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size
opcf $_obj_explosion01_FX_explosion_CALC_size_volume_size
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_measure1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_connectivity2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribpromote2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_end2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribute2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_begin3
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_compile_end3 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_output1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size_foreach_begin2 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_attribwrangle1
opwire -n -i 0 -0 $_obj_explosion01_FX_explosion_CALC_size_volume_size_null1
opcf ..
opwire -n $_obj_explosion01_FX_explosion_CALC_size_bound_size -0 $_obj_explosion01_FX_explosion_CALC_size_switch1
opwire -n $_obj_explosion01_FX_explosion_CALC_size_volume_size -1 $_obj_explosion01_FX_explosion_CALC_size_switch1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_explosion01_FX_explosion_CALC_size
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_explosion01_FX_explosion_CALC_size
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pt_trans_and_rotate_orient" label="pt_trans_and_rotate_orient" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient (Sop/attribvop)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient = `run("opadd -e -n -v attribvop pt_trans_and_rotate_orient")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opparm $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.03518` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 17.081600000000002` -y `$arg3 + 4.2007099999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 9.39405` -y `$arg3 + 4.0423499999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + -4.3723999999999998` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 8.6840899999999994` -y `$arg3 + -2.9338799999999998` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 11.0473` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 (Vop/add)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 13.974299999999999` -y `$arg3 + 0.88518300000000005` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans (Vop/parameter)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 5.2987200000000003` -y `$arg3 + -1.3716699999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e off -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot (Vop/parameter)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 5.39872` -y `$arg3 + -1.5716699999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e off -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot

# Node $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 13.2202` -y `$arg3 + 4.2007099999999999` $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___toolcount___' -v '516' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opuserdata -n '___toolid___' -v 'attribvop3' $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opcf ..
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient

opcf $arg1
opcf $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_trans -2 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_rot -3 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_makexform1 -3 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_extractxform1 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_add1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_bind2 -0 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opwire -n $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_eulertoquat1 -1 $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient_qmultiply1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_pt_trans_and_rotate_orient
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="align_orient2" label="align_orient2" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribvop'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_align_orient2 (Sop/attribvop)
set _obj_fire01_FX_smoke_align_orient2 = `run("opadd -e -n -v attribvop align_orient2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_align_orient2
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_align_orient2
opparm $_obj_fire01_FX_smoke_align_orient2  bindings ( 0 ) groupbindings ( 0 )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_align_orient2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_align_orient2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2
opcf $_obj_fire01_FX_smoke_align_orient2

# Node $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_align_orient2_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 12.7424` -y `$arg3 + 1.25861` $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_align_orient2_align1 (Vop/align)
set _obj_fire01_FX_smoke_align_orient2_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 5.2007000000000003` -y `$arg3 + -0.021394799999999999` $_obj_fire01_FX_smoke_align_orient2_align1
opparm $_obj_fire01_FX_smoke_align_orient2_align1 from ( 0 0 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_align1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_align1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_align1

# Node $_obj_fire01_FX_smoke_align_orient2_matxtoquat1 (Vop/matxtoquat)
set _obj_fire01_FX_smoke_align_orient2_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 7.8917099999999998` -y `$arg3 + -0.56757199999999997` $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_matxtoquat1

# Node $_obj_fire01_FX_smoke_align_orient2_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_align_orient2_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 11.057499999999999` -y `$arg3 + -1.2475700000000001` $_obj_fire01_FX_smoke_align_orient2_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_align_orient2_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_align_orient2_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___toolcount___' -v '519' $_obj_fire01_FX_smoke_align_orient2_bind1
opuserdata -n '___toolid___' -v 'attribvop4' $_obj_fire01_FX_smoke_align_orient2_bind1
opcf ..
opcf $_obj_fire01_FX_smoke_align_orient2
oporder -e geometryvopglobal1 geometryvopoutput1 align1 matxtoquat1 bind1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_align_orient2

opcf $arg1
opcf $_obj_fire01_FX_smoke_align_orient2
opwire -n -o 8 $_obj_fire01_FX_smoke_align_orient2_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_align_orient2_align1
opwire -n $_obj_fire01_FX_smoke_align_orient2_align1 -0 $_obj_fire01_FX_smoke_align_orient2_matxtoquat1
opwire -n $_obj_fire01_FX_smoke_align_orient2_matxtoquat1 -0 $_obj_fire01_FX_smoke_align_orient2_bind1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_align_orient2
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_align_orient2
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="crt_partId" label="crt_partId" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_crt_partId (Sop/attribwrangle)
set _obj_fire01_FX_smoke_crt_partId = `run("opadd -e -n -v attribwrangle crt_partId")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_crt_partId
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      multiparm {        name    "folder2"       label   "Folder Name"   default 0       parm {      name        "partId#"           label       "partId"            type        integer             default     { "0" }             range       { 0 10 }        }       parm {      name        "probability#"      label       "probability"       type        float       default     { "0" }             range       { 0 10 }        }     }      parm {     name    "seed"  label   "Seed"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_fire01_FX_smoke_crt_partId
opparm $_obj_fire01_FX_smoke_crt_partId  bindings ( 0 ) groupbindings ( 0 ) folder2 ( 5 )
opparm $_obj_fire01_FX_smoke_crt_partId snippet ( 'i@partId = 11609;\n\nfloat sum=0;\n\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n}\n\nfloat rand = rand((i@id + ch("seed")+0.21) + (ch("seed")));\nrand = fit01(rand, 0, sum);\n\n\nsum = 0;\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n    if(rand<sum)\n    {\n        i@partId = chi("partId" + itoa(i + 1));\n        break;\n    }\n}' ) folder2 ( 5 ) seed ( 0.16500000000000001 ) partId1 ( 11609 ) probability1 ( 1 ) partId2 ( 90393 ) probability2 ( 1 ) partId3 ( 56750 ) probability3 ( 1 ) partId4 ( 85861 ) partId5 ( 30222 ) probability5 ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_fire01_FX_smoke_crt_partId
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_crt_partId
opexprlanguage -s hscript $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___toolcount___' -v '518' $_obj_fire01_FX_smoke_crt_partId
opuserdata -n '___toolid___' -v 'attribwrangle5' $_obj_fire01_FX_smoke_crt_partId
opset -p on $_obj_fire01_FX_smoke_crt_partId

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_crt_partId
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_crt_partId
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="nonP_trans" label="nonP_trans" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_nonP_trans (Sop/subnet)
set _obj_fire01_FX_smoke_nonP_trans = `run("opadd -e -n -v subnet nonP_trans")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_nonP_trans
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     multiparm {       name    "folder0"       label   "Folder Name"   parm {      name        "pt#"       label       "pt"        type        integer             default     { "0" }             range       { 0 10 }        }       parm {      name        "trans_#"           label       "trans"             type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }       parm {      name        "rotate0_#"         label       "rotate0"           type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }       parm {      name        "rotate1_#"         label       "rotate1"           type        vector      size        3           default     { "0" "0" "0" }             range       { -1 1 }        }     }  ' $_obj_fire01_FX_smoke_nonP_trans
opparm $_obj_fire01_FX_smoke_nonP_trans  folder0 ( 0 )
opcolor -c 0.86699998378753662 0 0 $_obj_fire01_FX_smoke_nonP_trans
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans
opcf $_obj_fire01_FX_smoke_nonP_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 (Sop/legoBrickGLVisualiser)
set _obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 = `run("opadd -e -n -v legoBrickGLVisualiser legoBrickGLVisualiser1")`
oplocate -x `$arg2 + 4.1903300000000003` -y `$arg3 + -20.913` $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
chblockbegin
chadd -t 0 0 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 FX_Bricklib
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -F 'chs("legoBricklibSwitch1/IN_FX_BRICKLIB/file")' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1/FX_Bricklib
chblockend
opparm -V 0034 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 FX_Bricklib ( FX_Bricklib )
chlock $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 +FX_Bricklib
chautoscope $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1 +FX_Bricklib
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___Version___' -v '0034' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 = `run("opadd -e -n -v attribvop pt_trans_and_rotate14")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + 1.85633` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iter"  label   "iter"  type    string  default { "" }     } ' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opparm $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 trans3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../trans_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/trans3
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 rot3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate0_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14/rot3
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 bindgroup ( '`chs("../pt" + chs("iter"))`' ) trans ( trans1 trans2 trans3 ) rot ( rot1 rot2 rot3 ) iter ( '`detail("../foreach_begin1_metadata1/","iteration",0) + 1`' )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 13.334199999999999` -y `$arg3 + 1.0355700000000001` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 7.5664699999999998` -y `$arg3 + -4.5031800000000004` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 10.684699999999999` -y `$arg3 + -2.6688800000000001` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 13.6358` -y `$arg3 + -3.0838800000000002` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 (Vop/add)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 14.832800000000001` -y `$arg3 + -0.71978299999999995` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + -3.9138799999999998` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 1.4482699999999999` -y `$arg3 + -6.4089600000000004` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.7713400000000004` -y `$arg3 + 1.94885` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1

# Node $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 (Vop/degtorad)
set _obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.9608400000000001` -y `$arg3 + -6.1089599999999997` $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opparm $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 signature ( v )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2 = `run("opadd -e -n -v attribvop 2nd_trans2")`
oplocate -x `$arg2 + -0.0034500099999999999` -y `$arg3 + 0.50878599999999996` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "trans"         label   "Translate"     type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rot"   label   "Rotate"        type    float   size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "iter"  label   "iter"  type    string  default { "" }     } ' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opparm $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot1
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "x")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot1
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot2
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "y")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot2
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 rot3
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../rotate1_" + chs("iter") + "z")' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2/rot3
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 bindgroup ( '`chs("../pt_trans_and_rotate14/bindgroup")`' ) rot ( rot1 rot2 rot3 ) iter ( '`chs("../pt_trans_and_rotate14/iter")`' )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 17.225200000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 13.334199999999999` -y `$arg3 + 1.0355700000000001` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + 5.9452400000000001` -y `$arg3 + 1.7904899999999999` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 parmname ( orient ) parmtype ( float4 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 (Vop/makexform)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 = `run("opadd -e -n -v makexform makexform1")`
oplocate -x `$arg2 + 7.5664699999999998` -y `$arg3 + -4.5031800000000004` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 (Vop/extractxform::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 = `run("opadd -e -n -v extractxform::2.0 extractxform1")`
oplocate -x `$arg2 + 10.684699999999999` -y `$arg3 + -2.6688800000000001` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 (Vop/eulertoquat::2.0)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 = `run("opadd -e -n -v eulertoquat::2.0 eulertoquat1")`
oplocate -x `$arg2 + 13.6358` -y `$arg3 + -3.0838800000000002` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 (Vop/add)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 14.832800000000001` -y `$arg3 + -0.71978299999999995` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans = `run("opadd -e -n -v parameter trans")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + -3.9138799999999998` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans parmname ( trans ) parmlabel ( Translate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot (Vop/parameter)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot = `run("opadd -e -n -v parameter rot")`
oplocate -x `$arg2 + 1.4482699999999999` -y `$arg3 + -6.4089600000000004` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot parmname ( rot ) parmlabel ( Rotate ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 (Vop/qmultiply)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 = `run("opadd -e -n -v qmultiply qmultiply1")`
oplocate -x `$arg2 + 9.7713400000000004` -y `$arg3 + 1.94885` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1

# Node $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 (Vop/degtorad)
set _obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 = `run("opadd -e -n -v degtorad degtorad1")`
oplocate -x `$arg2 + 3.9608400000000001` -y `$arg3 + -6.1089599999999997` $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opparm $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 signature ( v )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges (Sop/attribvop)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges = `run("opadd -e -n -v attribvop rotate_edges")`
oplocate -x `$arg2 + 0.036249999999999998` -y `$arg3 + -18.939` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector uvselect "Modify Points"       "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "v"     label   "Velocity"      type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges  bindings ( 0 ) groupbindings ( 0 )
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges bindgroup ( edge )
opcolor -c 1 1 0.60000002384185791 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.9057900000000001` -y `$arg3 + 1.97631` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1 (Vop/geometryvopoutput)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1 = `run("opadd -e -n -v geometryvopoutput geometryvopoutput1")`
oplocate -x `$arg2 + 16.875900000000001` -y `$arg3 + 2.6859299999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopoutput1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 (Vop/align)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 = `run("opadd -e -n -v align align1")`
oplocate -x `$arg2 + 7.6954799999999999` -y `$arg3 + -0.016334899999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 from ( 0 0 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 (Vop/bind)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 14.0059` -y `$arg3 + -0.82432499999999997` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1 parmname ( orient ) parmtype ( float4 ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 (Vop/matxtoquat)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 = `run("opadd -e -n -v matxtoquat matxtoquat1")`
oplocate -x `$arg2 + 11.096299999999999` -y `$arg3 + -0.35891699999999999` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___Version___' -v '' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1

# Node $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 (Vop/snippet)
set _obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 = `run("opadd -e -n -v snippet snippet1")`
oplocate -x `$arg2 + 4.9865899999999996` -y `$arg3 + 0.60204599999999997` $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opparm $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1  namenum ( 1 )
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 code ( 'p.y=0;' ) namenum ( 1 ) name1 ( p )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opcf ..
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans

# Node $_obj_fire01_FX_smoke_nonP_trans_transform5 (Sop/xform)
set _obj_fire01_FX_smoke_nonP_trans_transform5 = `run("opadd -e -n -v xform transform5")`
oplocate -x `$arg2 + 0.039699999999999999` -y `$arg3 + -18.004200000000001` $_obj_fire01_FX_smoke_nonP_trans_transform5
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_transform5 tx
chkey -t 41.458333333333002 -v -8.5999999999999996 -m 0 -a 0 -A 0 -T a  -F '-$CEX' $_obj_fire01_FX_smoke_nonP_trans_transform5/tx
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_transform5 tz
chkey -t 41.458333333333002 -v 43 -m 0 -a 0 -A 0 -T a  -F '-$CEZ' $_obj_fire01_FX_smoke_nonP_trans_transform5/tz
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_transform5
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_transform5
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_transform5

# Node $_obj_fire01_FX_smoke_nonP_trans_output1 (Sop/output)
set _obj_fire01_FX_smoke_nonP_trans_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 0.039699999999999999` -y `$arg3 + -22.525600000000001` $_obj_fire01_FX_smoke_nonP_trans_output1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_output1 outputidx
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_fire01_FX_smoke_nonP_trans_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_output1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_output1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_output1
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 degtorad1 
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
oporder -e geometryvopglobal1 geometryvopoutput1 bind1 bind2 makexform1 extractxform1 eulertoquat1 add1 trans rot qmultiply1 degtorad1 
opcf ..
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
oporder -e geometryvopglobal1 geometryvopoutput1 align1 bind1 matxtoquat1 snippet1 
opcf ..

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 (Sop/block_end)
set _obj_fire01_FX_smoke_nonP_trans_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + -0.92333200000000004` $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 iterations
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../folder0")' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1/iterations
chblockend
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 itermethod ( count ) iterations ( iterations ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 ) multithread ( on )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_end1

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 (Sop/block_begin)
set _obj_fire01_FX_smoke_nonP_trans_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 0.0016000000000000001` -y `$arg3 + 3.3923000000000001` $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1

# Node $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 3.0015999999999998` -y `$arg3 + 3.3923000000000001` $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___toolcount___' -v '511' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
opuserdata -n '___toolid___' -v 'subnet6' $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1_metadata1
oporder -e transform5 output1 legoBrickGLVisualiser1 pt_trans_and_rotate14 2nd_trans2 rotate_edges foreach_end1 foreach_begin1 foreach_begin1_metadata1 
opcf ..
opset -p on $_obj_fire01_FX_smoke_nonP_trans

opcf $arg1
opcf $_obj_fire01_FX_smoke_nonP_trans
opwire -n $_obj_fire01_FX_smoke_nonP_trans_foreach_end1 -0 $_obj_fire01_FX_smoke_nonP_trans_transform5
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges -0 $_obj_fire01_FX_smoke_nonP_trans_output1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges -0 $_obj_fire01_FX_smoke_nonP_trans_legoBrickGLVisualiser1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opcf $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_trans -2 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1 -3 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_makexform1 -3 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_extractxform1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_eulertoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_bind2 -1 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_rot -0 $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14_degtorad1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_pt_trans_and_rotate14 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opcf $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopoutput1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_trans -2 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1 -3 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -5 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -2 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_makexform1 -3 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1
opwire -n -o 1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_extractxform1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_geometryvopglobal1 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_add1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_eulertoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_bind2 -1 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_qmultiply1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_rot -0 $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2_degtorad1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_transform5 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opcf $_obj_fire01_FX_smoke_nonP_trans_rotate_edges
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1 -1 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_bind1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_align1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_matxtoquat1
opwire -n $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_geometryvopglobal1 -0 $_obj_fire01_FX_smoke_nonP_trans_rotate_edges_snippet1
opcf ..
opwire -n $_obj_fire01_FX_smoke_nonP_trans_2nd_trans2 -0 $_obj_fire01_FX_smoke_nonP_trans_foreach_end1
opwire -n -i 0 -0 $_obj_fire01_FX_smoke_nonP_trans_foreach_begin1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_nonP_trans
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_nonP_trans
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pick_up_atr_val_is_1" label="pick_up_atr_val_is_1" icon="SOP_python">
    <helpURL>operator:Sop/python</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/python</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('python'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fire01_FX_smoke_pick_up_atr_val_is_1 (Sop/python)
set _obj_fire01_FX_smoke_pick_up_atr_val_is_1 = `run("opadd -e -n -v python pick_up_atr_val_is_1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opspareds '    parm {   name    "python"        baseparm        label   "Python Code"   export  none     }     parm {   name    "search_attribute_name"         label   "search_attribute_name"         type    string  default { "" }     } ' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opparm -V 16.0.674 $_obj_fire01_FX_smoke_pick_up_atr_val_is_1 python ( 'node = hou.pwd()\ngeo = node.geometry()\n\n# Add code to modify contents of geo.\n# Use drop down menu to select examples.\n\n\n\natrs = [atr for atr in geo.pointAttribs() if atr.name().find(node.parm("search_attribute_name").eval()) != -1]\n#print atrs\npts = []\n\nfor pt in geo.points():\n    delPt = True\n    for atr in atrs:\n        if pt.attribValue(atr) == 1:\n            delPt = False\n            break\n    if delPt == True:\n        pts.append(pt)\n        \n        \ngeo.deletePoints(pts)\n        ' ) search_attribute_name ( group_explosion )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opexprlanguage -s hscript $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___toolcount___' -v '512' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opuserdata -n '___toolid___' -v 'python0' $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
opset -p on $_obj_fire01_FX_smoke_pick_up_atr_val_is_1

opcf $arg1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fire01_FX_smoke_pick_up_atr_val_is_1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="crt_instance_Id" label="crt_instance_Id" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id (Sop/attribwrangle)
set _obj_fxcontainer1_pc_crowd_car_crt_instance_Id = `run("opadd -e -n -v attribwrangle crt_instance_Id")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      multiparm {        name    "folder2"       label   "Folder Name"   default 0       parmtag { "script_callback_language" "python" }         parm {      name        "partId#"           label       "partId"            type        integer             default     { [ "uniqueval(opinputpath(\\".\\",1), D_POINT,\\"instance_id\\",#-1)" hscript-expr ] }             range       { 0 10 }            parmtag     { "autoscope" "1000000000000000" }      }       parm {      name        "probability#"      label       "probability"       type        float       default     { "1" }             range       { 0 10 }        }     }      parm {     name    "seed"  label   "Seed"  type    float   default { "0" }         range   { 0 1 }     } ' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opparm $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id  bindings ( 0 ) groupbindings ( 0 ) folder2 ( 7 )
chblockbegin
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id folder2
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'nuniquevals(opinputpath(".",1), D_POINT,"instance_id")' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/folder2
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId1
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",1-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId1
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId2
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",2-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId2
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId3
chkey -t 59.125 -v 1 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",3-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId3
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId4
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",4-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId4
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId5
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",5-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId5
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId6
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",6-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId6
chadd -t 59.125 59.125 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id partId7
chkey -t 59.125 -v 0 -m 0 -a 0 -A 0 -T a  -F 'uniqueval(opinputpath(".",1), D_POINT,"instance_id",7-1)' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id/partId7
chblockend
opparm $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id snippet ( 'i@instance_id = 0;\n\nfloat sum=0;\n\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n}\n\nfloat rand = rand((i@ptnum + ch("seed")+0.21) + (ch("seed")));\nrand = fit01(rand, 0, sum);\n\n\nsum = 0;\nfor(int i = 0; i < ch("folder2"); i++)\n{\n    sum += ch("probability" + itoa(i + 1));\n    if(rand<sum)\n    {\n        i@instance_id = chi("partId" + itoa(i + 1));\n        break;\n    }\n}' ) folder2 ( folder2 ) seed ( 0.16500000000000001 )
chautoscope $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id +partId1 +partId2 +partId3 +partId4 +partId5 +partId6 +partId7
opcolor -c 1 0.80000001192092896 0 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opexprlanguage -s hscript $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opuserdata -n '___Version___' -v '' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opuserdata -n '___toolcount___' -v '518' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opuserdata -n '___toolid___' -v 'attribwrangle5' $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opset -p on $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id

opcf $arg1
opwire -n $_obj_fxcontainer1_pc_crowd_car_crt_leader -0 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
opwire -n $_obj_fxcontainer1_pc_crowd_car_IN_crowd_pts -1 $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_fxcontainer1_pc_crowd_car_crt_instance_Id
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="GET_interporation_by_id" label="GET_interporation_by_id" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_GET_interporation_by_id (Sop/subnet)
set _obj_geo1_GET_interporation_by_id = `run("opadd -e -n -v subnet GET_interporation_by_id")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_GET_interporation_by_id
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  all     }     parm {    name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  all     }     parm {    name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  all     }     parm {    name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  all     }     parm {    name    "labelparm"     label   "Label"         type    label   nolabel         default { "   match by id, or match by ptnum" }     }     parm {        name    "match_by_id"   label   "match_by_id"   type    toggle  default { "1" }         range   { 0! 10 }       parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "id_atr"        label   "id_atr"        type    string  default { "id" }        disablewhen     "{ match_by_id == 0 }"  range   { 0 1 }         parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "velocity_type"         label   "velocity_type"         type    string  invisible       default { "0" }         menu    {           "0" "Backward Difference"       "1" "Central Difference"        "2" "Forward Difference"    }     } ' $_obj_geo1_GET_interporation_by_id
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_GET_interporation_by_id
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_id (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_id = `run("opadd -e -n -v attribwrangle interporation_by_id")`
oplocate -x `$arg2 + 4.1624299999999996` -y `$arg3 + -6.5176400000000001` $_obj_geo1_GET_interporation_by_id_interporation_by_id
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "second_previous_frame"         label   "Second Previous Frame"         type    oppath  default { "" }  parmtag { "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_id
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id vex_matchattrib
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'chs("../id_atr")' $_obj_geo1_GET_interporation_by_id_interporation_by_id/vex_matchattrib
chblockend
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_id snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nint idPt = findattribval(1,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevP = v@opinput1_P;\n}\n\nidPt = findattribval(2,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextP = v@opinput2_P;\n}\n\nidPt = findattribval(3,"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    nextNextP = v@opinput3_P;\n}\n\nidPt = findattribval("op:" + chs("second_previous_frame"),"point",chs("vex_matchattrib"),i@`chs("vex_matchattrib")`,0);\nif(idPt != -1)\n{\n    prevPrevP = point("op:" + chs("second_previous_frame"),"P", idPt);\n}\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) vex_matchattrib ( vex_matchattrib ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_id
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_id
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_interporation_by_ptnum = `run("opadd -e -n -v attribwrangle interporation_by_ptnum")`
oplocate -x `$arg2 + 8.3523899999999998` -y `$arg3 + -6.5176400000000001` $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "second_previous_frame"         label   "Second Previous Frame"         type    oppath  default { "" }  parmtag { "oprelative" "." }     } ' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum snippet ( 'vector p = @P;\nvector prevPrevP = @P;\nvector prevP = @P;\nvector nextP = @P;\nvector nextNextP = @P;\n\nprevP = point(1,"P",@ptnum);\n\nnextP = point(2,"P",@ptnum);\n\nnextNextP = point(3,"P",@ptnum);\n\nprevPrevP = point("op:" + chs("second_previous_frame"),"P", @ptnum);\n\n\nvector arrayP[];\nif(rint(@Frame)==floor(@Frame))\n{\n    arrayP = vector[](array(prevP,p,nextP,nextNextP));\n}\nelse\n{\n    arrayP = vector[](array(prevPrevP,prevP,p,nextP));\n}\n\n@P = spline("cubic",frac(@Frame),arrayP);' ) second_previous_frame ( ../OUT_prevPrev_f )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum

# Node $_obj_geo1_GET_interporation_by_id_advect (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 11.9704` -y `$arg3 + -2.9596900000000002` $_obj_geo1_GET_interporation_by_id_advect
opparm $_obj_geo1_GET_interporation_by_id_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_advect snippet ( '@P += @v * @TimeInc + v@force * @TimeInc* @TimeInc;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_advect
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_advect
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_advect

# Node $_obj_geo1_GET_interporation_by_id_rev_advect (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_rev_advect = `run("opadd -e -n -v attribwrangle rev_advect")`
oplocate -x `$arg2 + 14.537000000000001` -y `$arg3 + -2.9596900000000002` $_obj_geo1_GET_interporation_by_id_rev_advect
opparm $_obj_geo1_GET_interporation_by_id_rev_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_rev_advect snippet ( '@P -= @v * @TimeInc;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_rev_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_rev_advect
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_rev_advect
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_rev_advect

# Node $_obj_geo1_GET_interporation_by_id_rev_advect1 (Sop/attribwrangle)
set _obj_geo1_GET_interporation_by_id_rev_advect1 = `run("opadd -e -n -v attribwrangle rev_advect1")`
oplocate -x `$arg2 + 17.372299999999999` -y `$arg3 + -2.9596900000000002` $_obj_geo1_GET_interporation_by_id_rev_advect1
opparm $_obj_geo1_GET_interporation_by_id_rev_advect1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_GET_interporation_by_id_rev_advect1 snippet ( '@P -= @v * @TimeInc - v@force * @TimeInc* @TimeInc;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_GET_interporation_by_id_rev_advect1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_GET_interporation_by_id_rev_advect1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_rev_advect1
opuserdata -n '___Version___' -v '' $_obj_geo1_GET_interporation_by_id_rev_advect1
opcf ..
opcf $_obj_geo1_GET_interporation_by_id

# Node $_obj_geo1_GET_interporation_by_id_current_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_current_f = `run("opadd -e -n -v timeshift current_f")`
oplocate -x `$arg2 + 4.2734300000000003` -y `$arg3 + -0.266486` $_obj_geo1_GET_interporation_by_id_current_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)' $_obj_geo1_GET_interporation_by_id_current_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_current_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_current_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_current_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_current_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_current_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_current_f/trange2
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_current_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_current_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_current_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_current_f

# Node $_obj_geo1_GET_interporation_by_id_prev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prev_f = `run("opadd -e -n -v timeshift prev_f")`
oplocate -x `$arg2 + 6.8400800000000004` -y `$arg3 + -0.69683899999999999` $_obj_geo1_GET_interporation_by_id_prev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-1' $_obj_geo1_GET_interporation_by_id_prev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prev_f/trange2
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_prev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prev_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_prev_f

# Node $_obj_geo1_GET_interporation_by_id_next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_f = `run("opadd -e -n -v timeshift next_f")`
oplocate -x `$arg2 + 9.40672` -y `$arg3 + -1.1271899999999999` $_obj_geo1_GET_interporation_by_id_next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+1' $_obj_geo1_GET_interporation_by_id_next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_f/trange2
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_next_f

# Node $_obj_geo1_GET_interporation_by_id_prevPrev_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_prevPrev_f = `run("opadd -e -n -v timeshift prevPrev_f")`
oplocate -x `$arg2 + 14.539999999999999` -y `$arg3 + -1.9879` $_obj_geo1_GET_interporation_by_id_prevPrev_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)-2' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_prevPrev_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_prevPrev_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_prevPrev_f/trange2
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_prevPrev_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_prevPrev_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_next_Next_f (Sop/timeshift)
set _obj_geo1_GET_interporation_by_id_next_Next_f = `run("opadd -e -n -v timeshift next_Next_f")`
oplocate -x `$arg2 + 11.9734` -y `$arg3 + -1.5575399999999999` $_obj_geo1_GET_interporation_by_id_next_Next_f
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'round($FF)+2' $_obj_geo1_GET_interporation_by_id_next_Next_f/frame
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_GET_interporation_by_id_next_Next_f/time
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/frange2
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange1
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_next_Next_f trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_GET_interporation_by_id_next_Next_f/trange2
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_next_Next_f frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_next_Next_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_next_Next_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_next_Next_f

# Node $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f (Sop/null)
set _obj_geo1_GET_interporation_by_id_OUT_prevPrev_f = `run("opadd -e -n -v null OUT_prevPrev_f")`
oplocate -x `$arg2 + 14.539999999999999` -y `$arg3 + -5.1814200000000001` $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f

# Node $_obj_geo1_GET_interporation_by_id_null1 (Sop/null)
set _obj_geo1_GET_interporation_by_id_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + 4.2734300000000003` -y `$arg3 + 2.3469899999999999` $_obj_geo1_GET_interporation_by_id_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_null1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_null1

# Node $_obj_geo1_GET_interporation_by_id_output1 (Sop/output)
set _obj_geo1_GET_interporation_by_id_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 4.1654299999999997` -y `$arg3 + -11.4183` $_obj_geo1_GET_interporation_by_id_output1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_output1 outputidx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits(".")-1,0)' $_obj_geo1_GET_interporation_by_id_output1/outputidx
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_output1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_output1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_output1

# Node $_obj_geo1_GET_interporation_by_id_switch1 (Sop/switch)
set _obj_geo1_GET_interporation_by_id_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 4.1654299999999997` -y `$arg3 + -9.1315399999999993` $_obj_geo1_GET_interporation_by_id_switch1
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../match_by_id")' $_obj_geo1_GET_interporation_by_id_switch1/input
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_switch1 input ( input )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_GET_interporation_by_id_switch1
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_switch1

# Node $_obj_geo1_GET_interporation_by_id_switch2 (Sop/switch)
set _obj_geo1_GET_interporation_by_id_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 14.539999999999999` -y `$arg3 + -4.1475600000000004` $_obj_geo1_GET_interporation_by_id_switch2
chblockbegin
chadd -t 0 0 $_obj_geo1_GET_interporation_by_id_switch2 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../velocity_type")' $_obj_geo1_GET_interporation_by_id_switch2/input
chblockend
opparm -V 16.0.674 $_obj_geo1_GET_interporation_by_id_switch2 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_geo1_GET_interporation_by_id_switch2
opexprlanguage -s hscript $_obj_geo1_GET_interporation_by_id_switch2
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_GET_interporation_by_id_switch2
oporder -e interporation_by_id current_f prev_f next_f prevPrev_f next_Next_f OUT_prevPrev_f null1 output1 interporation_by_ptnum switch1 advect rev_advect switch2 rev_advect1 
opcf ..
opset -p on $_obj_geo1_GET_interporation_by_id

opcf $arg1
opwire -n $_obj_geo1_trail1 -0 $_obj_geo1_GET_interporation_by_id
opcf $_obj_geo1_GET_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_advect -3 $_obj_geo1_GET_interporation_by_id_interporation_by_id
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_current_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_prevPrev_f
opwire -n $_obj_geo1_GET_interporation_by_id_null1 -0 $_obj_geo1_GET_interporation_by_id_next_Next_f
opwire -n $_obj_geo1_GET_interporation_by_id_switch2 -0 $_obj_geo1_GET_interporation_by_id_OUT_prevPrev_f
opwire -n -i 0 -0 $_obj_geo1_GET_interporation_by_id_null1
opwire -n $_obj_geo1_GET_interporation_by_id_switch1 -0 $_obj_geo1_GET_interporation_by_id_output1
opwire -n $_obj_geo1_GET_interporation_by_id_current_f -0 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -1 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -2 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_advect -3 $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_ptnum -0 $_obj_geo1_GET_interporation_by_id_switch1
opwire -n $_obj_geo1_GET_interporation_by_id_interporation_by_id -1 $_obj_geo1_GET_interporation_by_id_switch1
opwire -n $_obj_geo1_GET_interporation_by_id_next_f -0 $_obj_geo1_GET_interporation_by_id_advect
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -0 $_obj_geo1_GET_interporation_by_id_rev_advect
opwire -n $_obj_geo1_GET_interporation_by_id_rev_advect -0 $_obj_geo1_GET_interporation_by_id_switch2
opwire -n $_obj_geo1_GET_interporation_by_id_rev_advect1 -1 $_obj_geo1_GET_interporation_by_id_switch2
opwire -n $_obj_geo1_GET_interporation_by_id_rev_advect1 -2 $_obj_geo1_GET_interporation_by_id_switch2
opwire -n $_obj_geo1_GET_interporation_by_id_prev_f -0 $_obj_geo1_GET_interporation_by_id_rev_advect1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_GET_interporation_by_id
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_GET_interporation_by_id
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="setValToSameParms" label="setValToSameParms" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[import setValToSameParms

reload(setValToSameParms)

setValToSameParms.execute()]]></script>
  </tool>

  <tool name="mix_to_noise" label="Mix To Noise" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputnode = None
inputindex = -1
inputnode = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputnode = pane_node.node(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputnode = pane_node.node(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputnode is None:
            inputnode = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None
    if not autoplace and not pane.autoPlaceNodes() and not pane.listMode():
        if pos is not None:
            pass
        elif outputnode is None:
            pos = pane.selectPosition(inputnode, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputnode, outputindex,
                                      outputnode, inputindex)
    if pos is None and pane.autoPlaceNodes():
        pos = pane.cursorPosition()
        
    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script: Tuesday November 08, 22:50 2016
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_mix_to_noise (Sop/subnet)
set _obj_geo1_mix_to_noise = `run("opadd -e -n -v subnet mix_to_noise")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_mix_to_noise
opspareds '    parm {   name    "label1"        baseparm        label   "Input #1 Label"        invisible       export  dialog     }     parm {         name    "label2"        baseparm        label   "Input #2 Label"        invisible       export  dialog     }     parm {         name    "label3"        baseparm        label   "Input #3 Label"        invisible       export  dialog     }     parm {         name    "label4"        baseparm        label   "Input #4 Label"        invisible       export  dialog     }     parm {         name    "parm_name"     label   "parm_name"     type    string  default { "parm" }      range   { 0 1 }         export  none    parmtag { "autoscope" "0000000000000000" }     }     parm {     name    "freq"  label   "Frequency"     type    float   size    4       default { "1" [ "ch(\\"freq1\\")" hscript-expr ] [ "ch(\\"freq1\\")" hscript-expr ] "1" }       range   { 0 10 }        export  none    parmtag { "autoscope" "0000000000000000" }      parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "autoscope" "0000000000000000" }      parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "autoscope" "0000000000000000" }      parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }         export  none    parmtag { "autoscope" "0000000000000000" }     } ' $_obj_geo1_mix_to_noise
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise freq2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise freq3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise/freq3
chblockend
opparm -V 15.5.480 $_obj_geo1_mix_to_noise parm_name ( v )
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_mix_to_noise
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise

# Node $_obj_geo1_mix_to_noise_noise (Sop/attribvop)
set _obj_geo1_mix_to_noise_noise = `run("opadd -e -n -v attribvop noise")`
oplocate -x `$arg2 + 2.7294120788574219` -y `$arg3 + 3.9117059707641602` $_obj_geo1_mix_to_noise_noise
opspareds '    parm {   name    "bindgroup"     baseparm        label   "Group"         export  none    bindselector points "Modify Points"         "Select the points to affect and press Enter to complete."      0 1 0xffffffff 0 bindgrouptype 0     }     parm {   name    "bindgrouptype"         baseparm        label   "Group Type"    export  none     }     parm {   name    "bindclass"     baseparm        label   "Run Over"      export  none     }     parm {   name    "vex_numcount"  baseparm        label   "Number Count"  export  none     }     parm {   name    "vex_threadjobsize"     baseparm        label   "Thread Job Size"       export  none     }     group {  name    "stdswitcher3"  label   "Vex Setup"     parm {      name        "vexsrc"            baseparm        label       "Vex Source"        export      all     }       parm {      name        "shoppath"          baseparm        label       "Shop Path"         export      all     }       parm {      name        "script"            baseparm        label       "Script"            export      all     }       parm {      name        "clear"             baseparm        label       "Re-load VEX Functions"             export      all     }       parm {      name        "vop_compiler"      baseparm        label       "Compiler"          export      none    }       parm {      name        "vop_forcecompile"          baseparm        label       "Force Compile"             export      none    }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_multithread"           baseparm        label       "Enable Multithreading"             export      none    }     }      group {    name    "stdswitcher3_1"        label   "Attribute Bindings"    parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "ptnum"         label   "Point Number"  type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "vtxnum"        label   "Vertex Number"         type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "primnum"       label   "Primitive Number"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "id"    label   "Id"    type    integer         invisible       default { "-1" }        range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numpt"         label   "Number of Points"      type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numvtx"        label   "Number of Vertices"    type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "numprim"       label   "Number of Prims"       type    integer         invisible       default { "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Time"  label   "Time"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "TimeInc"       label   "Time Inc"      type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Frame"         label   "Frame"         type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "life"  label   "Life"  type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "age"   label   "Age"   type    float   invisible       default { "0" }         range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput2"      label   "Second Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput3"      label   "Third Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput4"      label   "Fourth Input"  type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "OpInput1"      label   "First Input"   type    string  invisible       default { "" }  range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "uv"    label   "UV"    type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "P"     label   "P"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "force"         label   "Force"         type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "Cd"    label   "Cd"    type    float   invisible       size    3       default { "1" "1" "1" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "N"     label   "N"     type    float   invisible       size    3       default { "0" "0" "0" }         range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "freq"  label   "Frequency"     type    float   size    4       default { "1" "1" "1" "1" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "offset"        label   "Offset"        type    float   size    4       default { "0" "0" "0" "0" }     range   { 0 10 }        export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     }     parm {        name    "rough"         label   "Roughness"     type    float   default { "0.5" }       range   { 0 1 }         export  none    parmtag { "parmvop" "1" }       parmtag { "shaderparmcontexts" "cvex" }     } ' $_obj_geo1_mix_to_noise_noise
opparm $_obj_geo1_mix_to_noise_noise  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq1")' $_obj_geo1_mix_to_noise_noise/freq1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq2
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq3
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("freq1")' $_obj_geo1_mix_to_noise_noise/freq3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise freq4
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../freq4")' $_obj_geo1_mix_to_noise_noise/freq4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset1")' $_obj_geo1_mix_to_noise_noise/offset1
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset2")' $_obj_geo1_mix_to_noise_noise/offset2
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset3
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset3")' $_obj_geo1_mix_to_noise_noise/offset3
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise offset4
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../offset4")' $_obj_geo1_mix_to_noise_noise/offset4
chadd -t 0 0 $_obj_geo1_mix_to_noise_noise rough
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F 'ch("../rough")' $_obj_geo1_mix_to_noise_noise/rough
chblockend
opcolor -c 1 1 0.60000002384185791 $_obj_geo1_mix_to_noise_noise
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_noise
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise

# Node $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 (Vop/geometryvopglobal::2.0)
set _obj_geo1_mix_to_noise_noise_geometryvopglobal1 = `run("opadd -e -n -v geometryvopglobal::2.0 geometryvopglobal1")`
oplocate -x `$arg2 + 1.49108` -y `$arg3 + 1.3733599999999999` $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_geometryvopglobal1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_geometryvopglobal1

# Node $_obj_geo1_mix_to_noise_noise_aaflownoise1 (Vop/aaflownoise)
set _obj_geo1_mix_to_noise_noise_aaflownoise1 = `run("opadd -e -n -v aaflownoise aaflownoise1")`
oplocate -x `$arg2 + 5.3169599999999999` -y `$arg3 + 1.96661` $_obj_geo1_mix_to_noise_noise_aaflownoise1
opparm $_obj_geo1_mix_to_noise_noise_aaflownoise1 signature ( vp )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_aaflownoise1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_aaflownoise1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_aaflownoise1

# Node $_obj_geo1_mix_to_noise_noise_vectohvec1 (Vop/vectohvec)
set _obj_geo1_mix_to_noise_noise_vectohvec1 = `run("opadd -e -n -v vectohvec vectohvec1")`
oplocate -x `$arg2 + 3.37751` -y `$arg3 + 2.9550100000000001` $_obj_geo1_mix_to_noise_noise_vectohvec1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_vectohvec1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_vectohvec1
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_noise_vectohvec1

# Node $_obj_geo1_mix_to_noise_noise_freq (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_freq = `run("opadd -e -n -v parameter freq")`
oplocate -x `$arg2 + 2.6169600000000002` -y `$arg3 + 3.3666100000000001` $_obj_geo1_mix_to_noise_noise_freq
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_freq parmname ( freq ) parmlabel ( Frequency ) parmtype ( float4 ) float4def ( 1 1 1 1 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_freq
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_freq
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_freq
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_freq

# Node $_obj_geo1_mix_to_noise_noise_offset (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_offset = `run("opadd -e -n -v parameter offset")`
oplocate -x `$arg2 + 2.7169599999999998` -y `$arg3 + 3.1666099999999999` $_obj_geo1_mix_to_noise_noise_offset
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_offset parmname ( offset ) parmlabel ( Offset ) parmtype ( float4 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_offset
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_offset
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_offset
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_offset

# Node $_obj_geo1_mix_to_noise_noise_rough (Vop/parameter)
set _obj_geo1_mix_to_noise_noise_rough = `run("opadd -e -n -v parameter rough")`
oplocate -x `$arg2 + 2.91696` -y `$arg3 + 2.76661` $_obj_geo1_mix_to_noise_noise_rough
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_rough parmname ( rough ) parmlabel ( Roughness ) floatdef ( 0.5 ) exportcontext ( cvex )
opcolor -c 1 1 0.40000000596046448 $_obj_geo1_mix_to_noise_noise_rough
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e off -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_rough
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_rough
opuserdata -n '___Version___' -v '15.5.480' $_obj_geo1_mix_to_noise_noise_rough

# Node $_obj_geo1_mix_to_noise_noise_bind1 (Vop/bind)
set _obj_geo1_mix_to_noise_noise_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 8.295659065246582` -y `$arg3 + 2.955009937286377` $_obj_geo1_mix_to_noise_noise_bind1
opparm -V 15.5.480 $_obj_geo1_mix_to_noise_noise_bind1 parmname ( '`chs("../../parm_name")`' ) parmtype ( vector ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opcolor -c 0.60000002384185791 0.60000002384185791 1 $_obj_geo1_mix_to_noise_noise_bind1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off -L off -M off -H on $_obj_geo1_mix_to_noise_noise_bind1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_noise_bind1
opcf ..

# Node $_obj_geo1_mix_to_noise_mix (Sop/attribwrangle)
set _obj_geo1_mix_to_noise_mix = `run("opadd -e -n -v attribwrangle mix")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 1.5378241539001465` $_obj_geo1_mix_to_noise_mix
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }     }      parm {     name    "bias"  label   "Bias"  type    float   default { "0" }         range   { 0 1 }         export  none     } ' $_obj_geo1_mix_to_noise_mix
opparm $_obj_geo1_mix_to_noise_mix  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_mix_to_noise_mix bias
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../bias")' $_obj_geo1_mix_to_noise_mix/bias
chblockend
opparm $_obj_geo1_mix_to_noise_mix snippet ( 'v@`chs("../parm_name")` = normalize(lerp(normalize(v@`chs("../parm_name")`), normalize(v@opinput1_`chs("../parm_name")`), ch("bias"))) * length(v@`chs("../parm_name")`);' ) bias ( bias )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_mix_to_noise_mix
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_mix
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_mix
opuserdata -n '___Version___' -v '' $_obj_geo1_mix_to_noise_mix
opcf ..
opcf $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise_noise
oporder -e geometryvopglobal1 aaflownoise1 vectohvec1 freq offset rough bind1 
opcf ..

# Node $_obj_geo1_mix_to_noise_output1 (Sop/output)
set _obj_geo1_mix_to_noise_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + 1.2623496055603027` -y `$arg3 + 0.29860782623291016` $_obj_geo1_mix_to_noise_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -c off -e on -b off $_obj_geo1_mix_to_noise_output1
opexprlanguage -s hscript $_obj_geo1_mix_to_noise_output1
oporder -e noise mix output1 
opcf ..
opset -p on $_obj_geo1_mix_to_noise

opcf $arg1
opwire -n $_obj_geo1_attribwrangle1 -0 $_obj_geo1_mix_to_noise
opcf $_obj_geo1_mix_to_noise
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_noise
opcf $_obj_geo1_mix_to_noise_noise
opwire -n $_obj_geo1_mix_to_noise_noise_vectohvec1 -0 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_freq -1 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_offset -2 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_rough -4 $_obj_geo1_mix_to_noise_noise_aaflownoise1
opwire -n $_obj_geo1_mix_to_noise_noise_geometryvopglobal1 -0 $_obj_geo1_mix_to_noise_noise_vectohvec1
opwire -n $_obj_geo1_mix_to_noise_noise_aaflownoise1 -0 $_obj_geo1_mix_to_noise_noise_bind1
opcf ..
opwire -n -i 0 -0 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_noise -1 $_obj_geo1_mix_to_noise_mix
opwire -n $_obj_geo1_mix_to_noise_mix -0 $_obj_geo1_mix_to_noise_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_mix_to_noise
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_mix_to_noise
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <shelfSet name="kaToolsShelf" label="kaTools">
    <memberToolshelf name="kaTools"/>
    <memberToolshelf name="kaToolsVop"/>
    <memberToolshelf name="kaToolsDOP"/>
    <memberToolshelf name="kaToolsSop"/>
    <memberToolshelf name="kaToolsObj"/>
  </shelfSet>

  <tool name="apply_airresist" label="Apply Airresist" icon="SOP_attribwrangle">
    <helpURL>operator:Sop/attribwrangle</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('attribwrangle'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist (Sop/attribwrangle)
set _obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist = `run("opadd -e -n -v attribwrangle apply_airresist")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "airresist"     label   "Airresist"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist snippet ( 'float airresist = 0;\nif(haspointattrib(geoself(), "airresist"))airresist = @airresist;\nelse airresist = ch("airresist");\n\n\nfloat scale = 1 * @TimeInc * length(@v);\nscale += 1;\nscale = 1/ scale;\n\n@v *= scale;' )
opcolor -c 1 0.80000001192092896 0 $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opuserdata -n '___Version___' -v '' $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
opset -p on $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist

opcf $arg1
opwire -n $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry -0 $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_DOP_sopsolver1_sopsolver1_apply_airresist
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="dop_sop_solver" label="DOP Sop Solver" icon="NETWORKS_dop">
    <helpURL>operator:Sop/dopnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/dopnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('dopnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_DOP_sopsolver1 (Sop/dopnet)
set _obj_geo1_DOP_sopsolver1 = `run("opadd -e -n -v dopnet DOP_sopsolver1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_DOP_sopsolver1
opparm $_obj_geo1_DOP_sopsolver1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1 timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_geo1_DOP_sopsolver1/timestep
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1 timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_geo1_DOP_sopsolver1/timeoffset
chadd -t 41.458333333333002 41.458333333333002 $_obj_geo1_DOP_sopsolver1 startframe
chkey -t 41.458333333333002 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../start_frame") - ch("../preroll_for_crowd")' $_obj_geo1_DOP_sopsolver1/startframe
chblockend
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1 stdswitcher ( 1 1 1 ) startframe ( startframe ) objname1 ( * )
opcolor -c 0.76499998569488525 1 0.57599997520446777 $_obj_geo1_DOP_sopsolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1
opuserdata -n 'nodeshape' -v 'burst' $_obj_geo1_DOP_sopsolver1
opcf $_obj_geo1_DOP_sopsolver1

# Node $_obj_geo1_DOP_sopsolver1_output (Dop/output)
set _obj_geo1_DOP_sopsolver1_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + -0.78360799999999997` $_obj_geo1_DOP_sopsolver1_output
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_DOP_sopsolver1_output/f1
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_DOP_sopsolver1_output/f2
chblockend
opparm $_obj_geo1_DOP_sopsolver1_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_output
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_output
opuserdata -n '___Version___' -v '' $_obj_geo1_DOP_sopsolver1_output
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_output
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_output

# Node $_obj_geo1_DOP_sopsolver1_emptyobject1 (Dop/emptyobject)
set _obj_geo1_DOP_sopsolver1_emptyobject1 = `run("opadd -e -n -v emptyobject emptyobject1")`
oplocate -x `$arg2 + -2.6352899999999999` -y `$arg3 + 3.1990500000000002` $_obj_geo1_DOP_sopsolver1_emptyobject1
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_emptyobject1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$ST == 0' $_obj_geo1_DOP_sopsolver1_emptyobject1/activation
chblockend
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_emptyobject1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_emptyobject1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_emptyobject1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_emptyobject1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_emptyobject1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_emptyobject1

# Node $_obj_geo1_DOP_sopsolver1_sopgeo1 (Dop/sopgeo)
set _obj_geo1_DOP_sopsolver1_sopgeo1 = `run("opadd -e -n -v sopgeo sopgeo1")`
oplocate -x `$arg2 + -2.6340400000000002` -y `$arg3 + 2.10493` $_obj_geo1_DOP_sopsolver1_sopgeo1
opparm $_obj_geo1_DOP_sopsolver1_sopgeo1  numstamps ( 0 )
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopgeo1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_DOP_sopsolver1_sopgeo1/time
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopgeo1 transformtime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_DOP_sopsolver1_sopgeo1/transformtime
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopgeo1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_geo1_DOP_sopsolver1_sopgeo1/activation
chblockend
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopgeo1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopgeo1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopgeo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopgeo1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopgeo1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopgeo1

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1 (Dop/sopsolver::2.0)
set _obj_geo1_DOP_sopsolver1_sopsolver1 = `run("opadd -e -n -v sopsolver::2.0 sopsolver1")`
oplocate -x `$arg2 + 2.8329154962861836` -y `$arg3 + 3.197499999955483` $_obj_geo1_DOP_sopsolver1_sopsolver1
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1 solveinitframe ( on ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1
opcf $_obj_geo1_DOP_sopsolver1_sopsolver1

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry (Sop/dopimport)
set _obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry/doposxform
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry/doxform
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_dop_geometry

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts (Sop/dopimportrecords)
set _obj_geo1_DOP_sopsolver1_sopsolver1_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_impacts

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks (Sop/dopimportrecords)
set _obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_feedbacks

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry (Sop/object_merge)
set _obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry/relnode
chblockend
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_relationship_geometry

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0 (Sop/object_merge)
set _obj_geo1_DOP_sopsolver1_sopsolver1_IN_0 = `run("opadd -e -n -v object_merge IN_0")`
oplocate -x `$arg2 + 6.6320499999999996` -y `$arg3 + -3.9689399999999999` $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0  numobj ( 1 )
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_0

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1 (Sop/object_merge)
set _obj_geo1_DOP_sopsolver1_sopsolver1_IN_1 = `run("opadd -e -n -v object_merge IN_1")`
oplocate -x `$arg2 + 8.4219600000000003` -y `$arg3 + -4.8520899999999996` $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1  numobj ( 1 )
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_1

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2 (Sop/object_merge)
set _obj_geo1_DOP_sopsolver1_sopsolver1_IN_2 = `run("opadd -e -n -v object_merge IN_2")`
oplocate -x `$arg2 + 9.9533299999999993` -y `$arg3 + -5.6324899999999998` $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2  numobj ( 1 )
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_2

# Node $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3 (Sop/object_merge)
set _obj_geo1_DOP_sopsolver1_sopsolver1_IN_3 = `run("opadd -e -n -v object_merge IN_3")`
oplocate -x `$arg2 + 11.4337` -y `$arg3 + -6.4168000000000003` $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
opparm $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3  numobj ( 1 )
opparm -V 16.0.705 $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_sopsolver1_IN_3
oporder -e dop_geometry impacts feedbacks relationship_geometry IN_0 IN_1 IN_2 IN_3 
opcf ..

# Node $_obj_geo1_DOP_sopsolver1_multisolver1 (Dop/multisolver)
set _obj_geo1_DOP_sopsolver1_multisolver1 = `run("opadd -e -n -v multisolver multisolver1")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + 0.34681499999999998` $_obj_geo1_DOP_sopsolver1_multisolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_DOP_sopsolver1_multisolver1
opexprlanguage -s hscript $_obj_geo1_DOP_sopsolver1_multisolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_geo1_DOP_sopsolver1_multisolver1
opuserdata -n '___toolcount___' -v '594' $_obj_geo1_DOP_sopsolver1_multisolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_geo1_DOP_sopsolver1_multisolver1
oporder -e output emptyobject1 sopgeo1 sopsolver1 multisolver1 
opcf ..
opset -p on $_obj_geo1_DOP_sopsolver1

opcf $arg1
opwire -n $_obj_geo1_clean1 -0 $_obj_geo1_DOP_sopsolver1
opcf $_obj_geo1_DOP_sopsolver1
opwire -n $_obj_geo1_DOP_sopsolver1_multisolver1 -0 $_obj_geo1_DOP_sopsolver1_output
opwire -n $_obj_geo1_DOP_sopsolver1_emptyobject1 -0 $_obj_geo1_DOP_sopsolver1_sopgeo1
opcf $_obj_geo1_DOP_sopsolver1_sopsolver1
opcf ..
opwire -n $_obj_geo1_DOP_sopsolver1_sopgeo1 -0 $_obj_geo1_DOP_sopsolver1_multisolver1
opwire -n $_obj_geo1_DOP_sopsolver1_sopsolver1 -1 $_obj_geo1_DOP_sopsolver1_multisolver1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_DOP_sopsolver1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_DOP_sopsolver1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="timeblend_vol_with_advection" label="Timeblend Vol With Advection" icon="SOP_timeblend">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('subnet'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_timeblend_vol_with_advection (Sop/subnet)
set _obj_geo1_timeblend_vol_with_advection = `run("opadd -e -n -v subnet timeblend_vol_with_advection")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_timeblend_vol_with_advection
opcolor -c 0.86699998378753662 0 0 $_obj_geo1_timeblend_vol_with_advection
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection
opcf $_obj_geo1_timeblend_vol_with_advection

# Node $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 (Sop/vdbadvectsdf)
set _obj_geo1_timeblend_vol_with_advection_vdbadvect4 = `run("opadd -e -n -v vdbadvectsdf vdbadvect4")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 0.25351246547703754` $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none     }     parm {   name    "velgroup"      baseparm        label   "Velocity"      export  none     }     parm {   name    "respectclass"  baseparm        label   "Respect Grid Class"    export  none     }     parm {   name    "timestep"      baseparm        label   "Time Step"     export  none     }     parm {   name    "general"       baseparm        label   "General Advection"     export  none     }     parm {   name    "substeps"      baseparm        label   "Sub-steps"     export  none     }     parm {   name    "advection"     baseparm        label   "Advection Scheme"      export  none     }     parm {   name    "limiter"       baseparm        label   "Limiter Scheme"        export  none     }     parm {   name    "advectionHeading"      baseparm        label   "Level Set Advection"   export  none     }     parm {   name    "advectspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "advecttemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "renormheading"         baseparm        label   "Renormalization"       export  none     }     parm {   name    "normsteps"     baseparm        label   "Steps"         export  none     }     parm {   name    "renormspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "renormtemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "frac"  label   "frac"  type    float   default { "0" }         range   { 0 10 }     } ' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 timestep
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '1.0/$FPS * ch("frac")' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4/timestep
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 frac
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4/frac
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 group ( * ) velgroup ( '@name=vel' ) timestep ( timestep ) frac ( frac )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbadvect4

# Node $_obj_geo1_timeblend_vol_with_advection_convertvdb2 (Sop/convertvdb)
set _obj_geo1_timeblend_vol_with_advection_convertvdb2 = `run("opadd -e -n -v convertvdb convertvdb2")`
oplocate -x `$arg2 + -0.0012500397861003459` -y `$arg3 + 4.4621424654770365` $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_convertvdb2 group ( * ) conversion ( vdb )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_convertvdb2

# Node $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 (Sop/vdbvectormerge)
set _obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 = `run("opadd -e -n -v vdbvectormerge vdbvectormerge2")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 3.2643024654770376` $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2

# Node $_obj_geo1_timeblend_vol_with_advection_timeshift8 (Sop/timeshift)
set _obj_geo1_timeblend_vol_with_advection_timeshift8 = `run("opadd -e -n -v timeshift timeshift8")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + 2.192172465477038` $_obj_geo1_timeblend_vol_with_advection_timeshift8
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'floor($FF)' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_with_advection_timeshift8/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_with_advection_timeshift8/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift8/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift8 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_with_advection_timeshift8/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_timeshift8 frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_timeshift8
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_timeshift8
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_timeshift8

# Node $_obj_geo1_timeblend_vol_with_advection_timeshift9 (Sop/timeshift)
set _obj_geo1_timeblend_vol_with_advection_timeshift9 = `run("opadd -e -n -v timeshift timeshift9")`
oplocate -x `$arg2 + 2.6222499602138996` -y `$arg3 + 2.192172465477038` $_obj_geo1_timeblend_vol_with_advection_timeshift9
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'floor($FF)+1' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frame
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeblend_vol_with_advection_timeshift9/time
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeblend_vol_with_advection_timeshift9/frange2
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeblend_vol_with_advection_timeshift9/trange1
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_timeshift9 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeblend_vol_with_advection_timeshift9/trange2
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_timeshift9 frame ( frame ) integerframe ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_timeshift9
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_timeshift9
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_timeshift9

# Node $_obj_geo1_timeblend_vol_with_advection_volumemix2 (Sop/volumemix)
set _obj_geo1_timeblend_vol_with_advection_volumemix2 = `run("opadd -e -n -v volumemix volumemix2")`
oplocate -x `$arg2 + -5.0039786101366279e-05` -y `$arg3 + -1.5140875345229623` $_obj_geo1_timeblend_vol_with_advection_volumemix2
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_volumemix2 blend
chkey -t 0 -v 0.5 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_volumemix2/blend
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_volumemix2 expr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$V' $_obj_geo1_timeblend_vol_with_advection_volumemix2/expr
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_volumemix2 group ( '@name=density' ) mixgrp ( '@name=density' ) mixmethod ( blend ) blend ( blend )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_volumemix2
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_volumemix2
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_volumemix2

# Node $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 (Sop/vdbadvectsdf)
set _obj_geo1_timeblend_vol_with_advection_vdbadvect5 = `run("opadd -e -n -v vdbadvectsdf vdbadvect5")`
oplocate -x `$arg2 + 2.6222499602138996` -y `$arg3 + 0.25351246547703754` $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opspareds '    parm {   name    "group"         baseparm        label   "Group"         export  none     }     parm {   name    "velgroup"      baseparm        label   "Velocity"      export  none     }     parm {   name    "respectclass"  baseparm        label   "Respect Grid Class"    export  none     }     parm {   name    "timestep"      baseparm        label   "Time Step"     export  none     }     parm {   name    "general"       baseparm        label   "General Advection"     export  none     }     parm {   name    "substeps"      baseparm        label   "Sub-steps"     export  none     }     parm {   name    "advection"     baseparm        label   "Advection Scheme"      export  none     }     parm {   name    "limiter"       baseparm        label   "Limiter Scheme"        export  none     }     parm {   name    "advectionHeading"      baseparm        label   "Level Set Advection"   export  none     }     parm {   name    "advectspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "advecttemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "renormheading"         baseparm        label   "Renormalization"       export  none     }     parm {   name    "normsteps"     baseparm        label   "Steps"         export  none     }     parm {   name    "renormspatial"         baseparm        label   "Spatial Scheme"        export  none     }     parm {   name    "renormtemporal"        baseparm        label   "Temporal Scheme"       export  none     }     parm {   name    "frac"  label   "frac"  type    float   default { "0" }         range   { 0 10 }     } ' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
chblockbegin
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 timestep
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '-1.0/$FPS * (1-ch("frac"))' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5/timestep
chadd -t 0 0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 frac
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'frac($FF)' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5/frac
chblockend
opparm -V 16.0.557 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 group ( * ) velgroup ( '@name=vel' ) timestep ( timestep ) frac ( frac )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opuserdata -n '___Version___' -v '16.0.557' $_obj_geo1_timeblend_vol_with_advection_vdbadvect5

# Node $_obj_geo1_timeblend_vol_with_advection_output1 (Sop/output)
set _obj_geo1_timeblend_vol_with_advection_output1 = `run("opadd -e -n -v output output1")`
oplocate -x `$arg2 + -5.0039786101407913e-05` -y `$arg3 + -3.313842405424122` $_obj_geo1_timeblend_vol_with_advection_output1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeblend_vol_with_advection_output1
opexprlanguage -s hscript $_obj_geo1_timeblend_vol_with_advection_output1
oporder -e vdbadvect4 convertvdb2 vdbvectormerge2 timeshift8 timeshift9 volumemix2 vdbadvect5 output1 
opcf ..
opset -p on $_obj_geo1_timeblend_vol_with_advection

opcf $arg1
opwire -n $_obj_geo1_timeshift1 -0 $_obj_geo1_timeblend_vol_with_advection
opcf $_obj_geo1_timeblend_vol_with_advection
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift8 -0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift8 -1 $_obj_geo1_timeblend_vol_with_advection_vdbadvect4
opwire -n -i 0 -0 $_obj_geo1_timeblend_vol_with_advection_convertvdb2
opwire -n $_obj_geo1_timeblend_vol_with_advection_convertvdb2 -0 $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 -0 $_obj_geo1_timeblend_vol_with_advection_timeshift8
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbvectormerge2 -0 $_obj_geo1_timeblend_vol_with_advection_timeshift9
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbadvect4 -0 $_obj_geo1_timeblend_vol_with_advection_volumemix2
opwire -n $_obj_geo1_timeblend_vol_with_advection_vdbadvect5 -1 $_obj_geo1_timeblend_vol_with_advection_volumemix2
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift9 -0 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opwire -n $_obj_geo1_timeblend_vol_with_advection_timeshift9 -1 $_obj_geo1_timeblend_vol_with_advection_vdbadvect5
opwire -n $_obj_geo1_timeblend_vol_with_advection_volumemix2 -0 $_obj_geo1_timeblend_vol_with_advection_output1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_timeblend_vol_with_advection
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_timeblend_vol_with_advection
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
