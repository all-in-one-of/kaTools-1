<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="kaToolsObj" label="kaToolsObj">
    <memberTool name="graph"/>
    <memberTool name="pc_crowd"/>
    <memberTool name="pc_crowd_new"/>
    <memberTool name="split"/>
  </toolshelf>

  <tool name="graph" label="graph" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1 (Object/geo)
set _obj_geo1 = `run("opadd -e -n -v geo geo1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_geo1
opset -S on $_obj_geo1
opparm -V 16.0.633 $_obj_geo1 use_dcolor ( off )
chautoscope $_obj_geo1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_geo1
opexprlanguage -s hscript $_obj_geo1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1
opcf $_obj_geo1

# Network Box $_obj_geo1_Delaunay_triangulation
set _obj_geo1_Delaunay_triangulation = `run("nbadd -v Delaunay_triangulation")`
nblocate -x `$arg2 + -12.1672` -y  `$arg3 + 0.186008` $_obj_geo1_Delaunay_triangulation
nbsize -w 3.03239 -h 1.75661 $_obj_geo1_Delaunay_triangulation
nbset  -m off $_obj_geo1_Delaunay_triangulation
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Delaunay_triangulation

# Network Box $_obj_geo1_Urquhart_graph
set _obj_geo1_Urquhart_graph = `run("nbadd -v Urquhart_graph")`
nblocate -x `$arg2 + -12.0548` -y  `$arg3 + -5.34338` $_obj_geo1_Urquhart_graph
nbsize -w 3.83824 -h 4.3818 $_obj_geo1_Urquhart_graph
nbset  -m off $_obj_geo1_Urquhart_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Urquhart_graph

# Network Box $_obj_geo1_Gabriel_graph
set _obj_geo1_Gabriel_graph = `run("nbadd -v Gabriel_graph")`
nblocate -x `$arg2 + -3.24413` -y  `$arg3 + -3.61456` $_obj_geo1_Gabriel_graph
nbsize -w 3.15842 -h 2.65297 $_obj_geo1_Gabriel_graph
nbset  -m off $_obj_geo1_Gabriel_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Gabriel_graph

# Network Box $_obj_geo1_Relative_neighborhood_graph
set _obj_geo1_Relative_neighborhood_graph = `run("nbadd -v Relative_neighborhood_graph")`
nblocate -x `$arg2 + -7.71801` -y  `$arg3 + -3.61456` $_obj_geo1_Relative_neighborhood_graph
nbsize -w 3.89378 -h 2.65297 $_obj_geo1_Relative_neighborhood_graph
nbset  -m off $_obj_geo1_Relative_neighborhood_graph
nbcolor -c 0.52 0.52 0.52 $_obj_geo1_Relative_neighborhood_graph

# Network Box $_obj_geo1___netbox1
set _obj_geo1___netbox1 = `run("nbadd -v __netbox1")`
nblocate -x `$arg2 + 0.703362` -y  `$arg3 + -3.61456` $_obj_geo1___netbox1
nbsize -w 2.89477 -h 2.65297 $_obj_geo1___netbox1
nbset  -m off $_obj_geo1___netbox1
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox1

# Network Box $_obj_geo1___netbox2
set _obj_geo1___netbox2 = `run("nbadd -v __netbox2")`
nblocate -x `$arg2 + 4.43717` -y  `$arg3 + -2.49005` $_obj_geo1___netbox2
nbsize -w 3.11001 -h 1.52846 $_obj_geo1___netbox2
nbset  -m off $_obj_geo1___netbox2
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox2

# Network Box $_obj_geo1___netbox3
set _obj_geo1___netbox3 = `run("nbadd -v __netbox3")`
nblocate -x `$arg2 + 9.29739` -y  `$arg3 + -6.72872` $_obj_geo1___netbox3
nbsize -w 4.18742 -h 5.76713 $_obj_geo1___netbox3
nbset  -m off $_obj_geo1___netbox3
nbcolor -c 0.52 0.52 0.52 $_obj_geo1___netbox3

# Node $_obj_geo1_mark_longest_edges (Sop/attribwrangle)
set _obj_geo1_mark_longest_edges = `run("opadd -e -n -v attribwrangle mark_longest_edges")`
oplocate -x `$arg2 + -11.654400000000001` -y `$arg3 + -1.8485400000000001` $_obj_geo1_mark_longest_edges
opparm $_obj_geo1_mark_longest_edges  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_mark_longest_edges class ( primitive ) snippet ( 'int edge[];\nfloat longest = 0.0;\n\nint vertices[] = primvertices(0, @primnum);\nfor(int i=0; i<len(vertices); i++)\n{\n    int vtx1 = vertices[i];\n    int vtx2 = vertices[(i + 1) % len(vertices)];\n    \n    int pt1 = vertexpoint(0, vtx1);\n    int pt2 = vertexpoint(0, vtx2);\n    \n    vector p1 = point(0, \'P\', pt1);\n    vector p2 = point(0, \'P\', pt2);\n    \n    float dist = distance(p1, p2);\n    \n    if(dist > longest)\n    {\n        longest = dist;\n        \n        int e[];\n        push(e, pt1);\n        push(e, pt2);\n        edge = e;\n    }\n}\n\nif(len(edge) != 0)\n{\n    s@edges = \' p\' + itoa(edge[0]) + \'-\' + itoa(edge[1]);\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_mark_longest_edges
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_mark_longest_edges
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_mark_longest_edges
opexprlanguage -s hscript $_obj_geo1_mark_longest_edges
opuserdata -n '___Version___' -v '' $_obj_geo1_mark_longest_edges

# Node $_obj_geo1_relative_neighborhood_graph (Sop/attribwrangle)
set _obj_geo1_relative_neighborhood_graph = `run("opadd -e -n -v attribwrangle relative_neighborhood_graph")`
oplocate -x `$arg2 + -7.3210100000000002` -y `$arg3 + -1.8485400000000001` $_obj_geo1_relative_neighborhood_graph
opparm $_obj_geo1_relative_neighborhood_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_relative_neighborhood_graph snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    float dist = distance(p, @P);\n    \n    int ptsA[] = nearpoints(0, @P, dist);\n    int ptsB[] = nearpoints(0, p, dist);\n    \n    int chk = 0;\n    foreach(int cpt; ptsB)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = removevalue(ptsA, cpt);\n        if(chk) break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_relative_neighborhood_graph
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_relative_neighborhood_graph
nbop $_obj_geo1_Relative_neighborhood_graph add $_obj_geo1_relative_neighborhood_graph
opexprlanguage -s hscript $_obj_geo1_relative_neighborhood_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_relative_neighborhood_graph

# Node $_obj_geo1_gabriel_graph (Sop/attribwrangle)
set _obj_geo1_gabriel_graph = `run("opadd -e -n -v attribwrangle gabriel_graph")`
oplocate -x `$arg2 + -2.8471299999999999` -y `$arg3 + -1.8485400000000001` $_obj_geo1_gabriel_graph
opparm $_obj_geo1_gabriel_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_gabriel_graph snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    vector v = p - @P;\n    vector center = @P + v * 0.5;\n    float dist = length(v) * 0.5;\n    \n    int pts[] = nearpoints(0, center, dist);\n    \n    int chk = 0;\n    foreach(int cpt; pts)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = 1;\n        break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_gabriel_graph
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_gabriel_graph
nbop $_obj_geo1_Gabriel_graph add $_obj_geo1_gabriel_graph
opexprlanguage -s hscript $_obj_geo1_gabriel_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_gabriel_graph

# Node $_obj_geo1_clean1 (Sop/clean)
set _obj_geo1_clean1 = `run("opadd -e -n -v clean clean1")`
oplocate -x `$arg2 + -2.8441299999999998` -y `$arg3 + -2.8864399999999999` $_obj_geo1_clean1
opparm $_obj_geo1_clean1 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean1 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean1
nbop $_obj_geo1_Gabriel_graph add $_obj_geo1_clean1
opexprlanguage -s hscript $_obj_geo1_clean1
opuserdata -n '___Version___' -v '' $_obj_geo1_clean1

# Node $_obj_geo1_clean2 (Sop/clean)
set _obj_geo1_clean2 = `run("opadd -e -n -v clean clean2")`
oplocate -x `$arg2 + -7.3180100000000001` -y `$arg3 + -2.8864399999999999` $_obj_geo1_clean2
opparm $_obj_geo1_clean2 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean2 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean2
nbop $_obj_geo1_Relative_neighborhood_graph add $_obj_geo1_clean2
opexprlanguage -s hscript $_obj_geo1_clean2
opuserdata -n '___Version___' -v '' $_obj_geo1_clean2

# Node $_obj_geo1_convertline2 (Sop/convertline)
set _obj_geo1_convertline2 = `run("opadd -e -n -v convertline convertline2")`
oplocate -x `$arg2 + -11.651400000000001` -y `$arg3 + -4.8864400000000003` $_obj_geo1_convertline2
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_convertline2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_convertline2
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_convertline2
opexprlanguage -s hscript $_obj_geo1_convertline2
opuserdata -n '___Version___' -v '' $_obj_geo1_convertline2

# Node $_obj_geo1_nearest_neighbor_graph (Sop/attribwrangle)
set _obj_geo1_nearest_neighbor_graph = `run("opadd -e -n -v attribwrangle nearest_neighbor_graph")`
oplocate -x `$arg2 + 1.12374` -y `$arg3 + -1.96912` $_obj_geo1_nearest_neighbor_graph
opparm $_obj_geo1_nearest_neighbor_graph  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_nearest_neighbor_graph snippet ( 'int pts[] = nearpoints(0, @P, 1.0, 2);\n\nint pr = addprim(0, \'polyline\');\naddvertex(0, pr, @ptnum);\naddvertex(0, pr, pts[1]);\n' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_nearest_neighbor_graph
nbop $_obj_geo1___netbox1 add $_obj_geo1_nearest_neighbor_graph
opexprlanguage -s hscript $_obj_geo1_nearest_neighbor_graph
opuserdata -n '___Version___' -v '' $_obj_geo1_nearest_neighbor_graph

# Node $_obj_geo1_clean8 (Sop/clean)
set _obj_geo1_clean8 = `run("opadd -e -n -v clean clean8")`
oplocate -x `$arg2 + 1.1267400000000001` -y `$arg3 + -3.0448300000000001` $_obj_geo1_clean8
opparm $_obj_geo1_clean8 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean8 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean8
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean8
nbop $_obj_geo1___netbox1 add $_obj_geo1_clean8
opexprlanguage -s hscript $_obj_geo1_clean8
opuserdata -n '___Version___' -v '' $_obj_geo1_clean8

# Node $_obj_geo1_connectadjacentpieces1 (Sop/connectadjacentpieces)
set _obj_geo1_connectadjacentpieces1 = `run("opadd -e -n -v connectadjacentpieces connectadjacentpieces1")`
oplocate -x `$arg2 + 4.8371700000000004` -y `$arg3 + -1.9681200000000001` $_obj_geo1_connectadjacentpieces1
opparm -V 1 $_obj_geo1_connectadjacentpieces1 connecttype ( pointcloud )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_connectadjacentpieces1
nbop $_obj_geo1___netbox2 add $_obj_geo1_connectadjacentpieces1
opexprlanguage -s hscript $_obj_geo1_connectadjacentpieces1
opuserdata -n '___Version___' -v '1' $_obj_geo1_connectadjacentpieces1
opuserdata -n '___toolcount___' -v '6' $_obj_geo1_connectadjacentpieces1
opuserdata -n '___toolid___' -v 'dynamics_gluenetwork' $_obj_geo1_connectadjacentpieces1

# Node $_obj_geo1_clean3 (Sop/clean)
set _obj_geo1_clean3 = `run("opadd -e -n -v clean clean3")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -3.0070199999999998` $_obj_geo1_clean3
opparm $_obj_geo1_clean3 fixoverlap ( on ) deleteoverlap ( off )
chautoscope $_obj_geo1_clean3 +delete_small
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_clean3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_clean3
nbop $_obj_geo1___netbox3 add $_obj_geo1_clean3
opexprlanguage -s hscript $_obj_geo1_clean3
opuserdata -n '___Version___' -v '' $_obj_geo1_clean3

# Node $_obj_geo1_prims_algorithm (Sop/attribwrangle)
set _obj_geo1_prims_algorithm = `run("opadd -e -n -v attribwrangle prims_algorithm")`
oplocate -x `$arg2 + 9.6943999999999999` -y `$arg3 + -5.0469200000000001` $_obj_geo1_prims_algorithm
opparm $_obj_geo1_prims_algorithm  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_prims_algorithm class ( detail ) snippet ( 'int ptlist[];\nfor(int pt=0; pt<@numpt; pt++)\n    push(ptlist, pt);\n    \nint newlist[];\npush(newlist, 0);\nremovevalue(ptlist, 0);\n\nwhile(len(ptlist) > 0)\n{\n    float mindist = 10000;\n    int newpt = -1;\n    int newedge = -1;\n    \n    foreach(int pt; newlist)\n    {\n        foreach(int prim; pointprims(0, pt))\n        {\n            int targetpt = primpoint(0, prim, 0);\n            if(targetpt == pt) targetpt = primpoint(0, prim, 1);\n            \n            if(find(newlist, targetpt) > -1) continue;\n            \n            float dist = prim(0, \'restlength\', prim);\n            if(dist <= mindist)\n            {\n                mindist = dist;\n                newpt = targetpt;\n                newedge = prim;\n            }\n        }\n    }\n    \n    if(newpt == -1) break;\n    \n    push(newlist, newpt);\n    removevalue(ptlist, newpt);\n    setprimgroup(0, \'newedge\', newedge, 1);\n}' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_prims_algorithm
nbop $_obj_geo1___netbox3 add $_obj_geo1_prims_algorithm
opexprlanguage -s hscript $_obj_geo1_prims_algorithm
opuserdata -n '___Version___' -v '' $_obj_geo1_prims_algorithm

# Node $_obj_geo1_convertline1 (Sop/convertline)
set _obj_geo1_convertline1 = `run("opadd -e -n -v convertline convertline1")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -4.0070199999999998` $_obj_geo1_convertline1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_convertline1
nbop $_obj_geo1___netbox3 add $_obj_geo1_convertline1
opexprlanguage -s hscript $_obj_geo1_convertline1
opuserdata -n '___Version___' -v '' $_obj_geo1_convertline1

# Node $_obj_geo1_relative_neighborhood_graph1 (Sop/attribwrangle)
set _obj_geo1_relative_neighborhood_graph1 = `run("opadd -e -n -v attribwrangle relative_neighborhood_graph1")`
oplocate -x `$arg2 + 9.6943999999999999` -y `$arg3 + -1.96912` $_obj_geo1_relative_neighborhood_graph1
opparm $_obj_geo1_relative_neighborhood_graph1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_relative_neighborhood_graph1 snippet ( '//for(int pt = @ptnum + 1; pt < @numpt; pt++)\nforeach(int pt; nearpoints(0, @P, 1.0, 10))\n{\n    if(pt == @ptnum) continue;\n    \n    vector p = point(0, \'P\', pt);\n    float dist = distance(p, @P);\n    \n    int ptsA[] = nearpoints(0, @P, dist);\n    int ptsB[] = nearpoints(0, p, dist);\n    \n    int chk = 0;\n    foreach(int cpt; ptsB)\n    {\n        if(cpt == @ptnum || cpt == pt) continue;\n        \n        chk = removevalue(ptsA, cpt);\n        if(chk) break;\n    }\n    \n    if(!chk)\n    {\n        int pr = addprim(0, \'polyline\');\n        addvertex(0, pr, @ptnum);\n        addvertex(0, pr, pt);\n    }\n}' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_relative_neighborhood_graph1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c off -e on -b off $_obj_geo1_relative_neighborhood_graph1
nbop $_obj_geo1___netbox3 add $_obj_geo1_relative_neighborhood_graph1
opexprlanguage -s hscript $_obj_geo1_relative_neighborhood_graph1
opuserdata -n '___Version___' -v '' $_obj_geo1_relative_neighborhood_graph1
opcf ..
opcf $_obj_geo1

# Node $_obj_geo1_scatter6 (Sop/scatter::2.0)
set _obj_geo1_scatter6 = `run("opadd -e -n -v scatter::2.0 scatter6")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 3.2320500000000001` $_obj_geo1_scatter6
opparm -V 16.0.633 $_obj_geo1_scatter6 npts ( 100 ) relaxpoints ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_scatter6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_scatter6
opexprlanguage -s hscript $_obj_geo1_scatter6
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_scatter6

# Node $_obj_geo1_circle7 (Sop/circle)
set _obj_geo1_circle7 = `run("opadd -e -n -v circle circle7")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 4.4422499999999996` $_obj_geo1_circle7
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_circle7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_circle7
opexprlanguage -s hscript $_obj_geo1_circle7
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_circle7

# Node $_obj_geo1_null1 (Sop/null)
set _obj_geo1_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -5.9353100000000003` -y `$arg3 + 2.0660500000000002` $_obj_geo1_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_null1
opexprlanguage -s hscript $_obj_geo1_null1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_null1

# Node $_obj_geo1_triangulate2d1 (Sop/triangulate2d::2.0)
set _obj_geo1_triangulate2d1 = `run("opadd -e -n -v triangulate2d::2.0 triangulate2d1")`
oplocate -x `$arg2 + -11.938700000000001` -y `$arg3 + 0.90674600000000005` $_obj_geo1_triangulate2d1
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_triangulate2d1
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_triangulate2d1
nbop $_obj_geo1_Delaunay_triangulation add $_obj_geo1_triangulate2d1
opexprlanguage -s hscript $_obj_geo1_triangulate2d1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_triangulate2d1

# Node $_obj_geo1_dissolve1 (Sop/dissolve::2.0)
set _obj_geo1_dissolve1 = `run("opadd -e -n -v dissolve::2.0 dissolve1")`
oplocate -x `$arg2 + -11.651400000000001` -y `$arg3 + -3.8864399999999999` $_obj_geo1_dissolve1
opparm -V 16.0.633 $_obj_geo1_dissolve1 group ( '`details(opinputpath(\'.\', 0), \'edges\')' ) reminlinepts ( off )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_dissolve1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_dissolve1
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_dissolve1
opexprlanguage -s hscript $_obj_geo1_dissolve1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_dissolve1

# Node $_obj_geo1_attribpromote1 (Sop/attribpromote)
set _obj_geo1_attribpromote1 = `run("opadd -e -n -v attribpromote attribpromote1")`
oplocate -x `$arg2 + -11.6548` -y `$arg3 + -2.8864399999999999` $_obj_geo1_attribpromote1
opparm -V 16.0.633 $_obj_geo1_attribpromote1 inname ( edges ) inclass ( primitive ) outclass ( detail ) method ( sum )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_geo1_attribpromote1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribpromote1
nbop $_obj_geo1_Urquhart_graph add $_obj_geo1_attribpromote1
opexprlanguage -s hscript $_obj_geo1_attribpromote1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_attribpromote1

# Node $_obj_geo1_blast1 (Sop/blast)
set _obj_geo1_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 9.6974` -y `$arg3 + -6.0848199999999997` $_obj_geo1_blast1
opparm -V 16.0.633 $_obj_geo1_blast1 group ( newedge ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_blast1
nbop $_obj_geo1___netbox3 add $_obj_geo1_blast1
opexprlanguage -s hscript $_obj_geo1_blast1
opuserdata -n '___Version___' -v '16.0.633' $_obj_geo1_blast1
oporder -e scatter6 circle7 null1 mark_longest_edges relative_neighborhood_graph gabriel_graph clean1 clean2 convertline2 nearest_neighbor_graph clean8 connectadjacentpieces1 clean3 prims_algorithm convertline1 relative_neighborhood_graph1 triangulate2d1 dissolve1 attribpromote1 blast1 
opcf ..
opset -p on $_obj_geo1

opcf $arg1
opcf $_obj_geo1
opwire -n $_obj_geo1_circle7 -0 $_obj_geo1_scatter6
opwire -n $_obj_geo1_scatter6 -0 $_obj_geo1_null1
opwire -n $_obj_geo1_triangulate2d1 -0 $_obj_geo1_mark_longest_edges
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_relative_neighborhood_graph
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_gabriel_graph
opwire -n $_obj_geo1_gabriel_graph -0 $_obj_geo1_clean1
opwire -n $_obj_geo1_relative_neighborhood_graph -0 $_obj_geo1_clean2
opwire -n $_obj_geo1_dissolve1 -0 $_obj_geo1_convertline2
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_nearest_neighbor_graph
opwire -n $_obj_geo1_nearest_neighbor_graph -0 $_obj_geo1_clean8
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_connectadjacentpieces1
opwire -n $_obj_geo1_relative_neighborhood_graph1 -0 $_obj_geo1_clean3
opwire -n $_obj_geo1_convertline1 -0 $_obj_geo1_prims_algorithm
opwire -n $_obj_geo1_clean3 -0 $_obj_geo1_convertline1
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_relative_neighborhood_graph1
opwire -n $_obj_geo1_null1 -0 $_obj_geo1_triangulate2d1
opwire -n $_obj_geo1_attribpromote1 -0 $_obj_geo1_dissolve1
opwire -n $_obj_geo1_mark_longest_edges -0 $_obj_geo1_attribpromote1
opwire -n $_obj_geo1_prims_algorithm -0 $_obj_geo1_blast1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc_crowd" label="pc_crowd" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_pc_crowd (Object/geo)
set _obj_pc_crowd = `run("opadd -e -n -v geo pc_crowd")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_pc_crowd
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_pc_crowd
opset -S on $_obj_pc_crowd
opparm -V 16.0.674 $_obj_pc_crowd use_dcolor ( off )
chautoscope $_obj_pc_crowd +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_pc_crowd
opexprlanguage -s hscript $_obj_pc_crowd
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd
opcf $_obj_pc_crowd

# Node $_obj_pc_crowd_mountain1 (Sop/mountain::2.0)
set _obj_pc_crowd_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.3940799999999998` $_obj_pc_crowd_mountain1
opparm $_obj_pc_crowd_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_mountain1
opexprlanguage -s hscript $_obj_pc_crowd_mountain1
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_pc_crowd_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_pc_crowd_mountain1

# Node $_obj_pc_crowd_crt_targetP (Sop/attribwrangle)
set _obj_pc_crowd_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_pc_crowd_crt_targetP
opparm $_obj_pc_crowd_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_targetP
opexprlanguage -s hscript $_obj_pc_crowd_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_targetP
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_targetP
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_targetP

# Node $_obj_pc_crowd_crt_source (Sop/attribwrangle)
set _obj_pc_crowd_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -5.0413600000000001` $_obj_pc_crowd_crt_source
opparm $_obj_pc_crowd_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_source
opexprlanguage -s hscript $_obj_pc_crowd_crt_source
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_source
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_source
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_source

# Node $_obj_pc_crowd_crt_terrain (Sop/attribwrangle)
set _obj_pc_crowd_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -3.8374799999999998` $_obj_pc_crowd_crt_terrain
opparm $_obj_pc_crowd_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_crt_terrain
opexprlanguage -s hscript $_obj_pc_crowd_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_crt_terrain
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_crt_terrain
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_crt_terrain

# Node $_obj_pc_crowd_DOP_space_colonization_crowd (Sop/solver)
set _obj_pc_crowd_DOP_space_colonization_crowd = `run("opadd -e -n -v solver DOP_space_colonization_crowd")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -8.1926199999999998` $_obj_pc_crowd_DOP_space_colonization_crowd
opcolor -c 0.40000000596046448 1 1 $_obj_pc_crowd_DOP_space_colonization_crowd
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_space_colonization_crowd
opexprlanguage -s hscript $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_space_colonization_crowd
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_space_colonization_crowd

# Node $_obj_pc_crowd_attribwrangle1 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -9.9643599999999992` $_obj_pc_crowd_attribwrangle1
opparm $_obj_pc_crowd_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_pc_crowd_attribwrangle1
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_attribwrangle1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_attribwrangle1

# Node $_obj_pc_crowd_attribwrangle2 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 19.00213293611327` -y `$arg3 + -11.043185371896151` $_obj_pc_crowd_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_attribwrangle2
opparm $_obj_pc_crowd_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_attribwrangle2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_attribwrangle2
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_attribwrangle2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_attribwrangle2

# Node $_obj_pc_crowd_calc_new_v (Sop/attribwrangle)
set _obj_pc_crowd_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -12.47085537189615` $_obj_pc_crowd_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_calc_new_v
opparm $_obj_pc_crowd_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_calc_new_v
opexprlanguage -s hscript $_obj_pc_crowd_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_calc_new_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_calc_new_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_calc_new_v

# Node $_obj_pc_crowd_advect (Sop/attribwrangle)
set _obj_pc_crowd_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -16.197645371896151` $_obj_pc_crowd_advect
opparm $_obj_pc_crowd_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_advect
opexprlanguage -s hscript $_obj_pc_crowd_advect
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_advect
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_advect
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_advect

# Node $_obj_pc_crowd_init_v (Sop/attribwrangle)
set _obj_pc_crowd_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 17.408772936113174` -y `$arg3 + -7.901175371896251` $_obj_pc_crowd_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_init_v
opparm $_obj_pc_crowd_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_init_v
opexprlanguage -s hscript $_obj_pc_crowd_init_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_init_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_init_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_init_v

# Node $_obj_pc_crowd_add_v (Sop/attribwrangle)
set _obj_pc_crowd_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -13.954395371896149` $_obj_pc_crowd_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_add_v
opparm $_obj_pc_crowd_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_add_v
opexprlanguage -s hscript $_obj_pc_crowd_add_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_add_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_add_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_add_v

# Node $_obj_pc_crowd_limit_v (Sop/attribwrangle)
set _obj_pc_crowd_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -15.032145371896149` $_obj_pc_crowd_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_limit_v
opparm $_obj_pc_crowd_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_limit_v
opexprlanguage -s hscript $_obj_pc_crowd_limit_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_limit_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_limit_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_limit_v

# Node $_obj_pc_crowd_update_N (Sop/attribwrangle)
set _obj_pc_crowd_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -18.78344537189615` $_obj_pc_crowd_update_N
opparm $_obj_pc_crowd_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_update_N
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_update_N
opexprlanguage -s hscript $_obj_pc_crowd_update_N
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_update_N
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_update_N
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_update_N

# Node $_obj_pc_crowd_update_up (Sop/attribwrangle)
set _obj_pc_crowd_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 15.167142936113171` -y `$arg3 + -17.350145371896151` $_obj_pc_crowd_update_up
opparm $_obj_pc_crowd_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_update_up
opexprlanguage -s hscript $_obj_pc_crowd_update_up
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_update_up
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_update_up
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_update_up

# Node $_obj_pc_crowd_attribwrangle3 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + -5.4970899965336173` -y `$arg3 + -2.2454110756255892` $_obj_pc_crowd_attribwrangle3
opparm $_obj_pc_crowd_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle3 snippet ( 'i@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_attribwrangle3
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle3

# Node $_obj_pc_crowd_attribwrangle4 (Sop/attribwrangle)
set _obj_pc_crowd_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + -2.7342399965336175` -y `$arg3 + -2.1050477900516409` $_obj_pc_crowd_attribwrangle4
opparm $_obj_pc_crowd_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_attribwrangle4 snippet ( 'i@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_attribwrangle4
opexprlanguage -s hscript $_obj_pc_crowd_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_attribwrangle4

# Node $_obj_pc_crowd_DOP_sopsolver2 (Sop/dopnet)
set _obj_pc_crowd_DOP_sopsolver2 = `run("opadd -e -n -v dopnet DOP_sopsolver2")`
oplocate -x `$arg2 + 3.1928022717649642` -y `$arg3 + -8.1926199999999998` $_obj_pc_crowd_DOP_sopsolver2
opparm $_obj_pc_crowd_DOP_sopsolver2  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2 timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_pc_crowd_DOP_sopsolver2/timestep
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2 timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_pc_crowd_DOP_sopsolver2/timeoffset
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2 stdswitcher ( 1 1 1 ) objname1 ( * )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2
opcf $_obj_pc_crowd_DOP_sopsolver2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 (Dop/sopsolver::2.0)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1 = `run("opadd -e -n -v sopsolver::2.0 sopsolver1")`
oplocate -x `$arg2 + 1.6823529411764713` -y `$arg3 + 3.6113022412385654` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 solveinitframe ( on ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 7.5910954268727941` -y `$arg3 + -11.708926113922786` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P + nearV * @TimeInc) - nearP);\n    }\n}' ) rad ( 1.8 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -13.136626113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n//vector filterN;\n\nif(num > 0)\n{\n    //filterN = pcimportbyidxf(handle, "N", 0);\n    //filterN = normalize(filterN);\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 8 ) max_pts ( 100 ) dot ( -0.5 ) max_deg ( 20 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -16.863426113922785` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 6.0146766033433829` -y `$arg3 + -7.6182402315698434` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -14.620126113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 3.7591054268727939` -y `$arg3 + -15.697926113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -19.449226113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up (Sop/attribwrangle)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 3.7561054268727943` -y `$arg3 + -18.015926113922788` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opcf ..
opcf ..
opcf ..
opcf $_obj_pc_crowd

# Node $_obj_pc_crowd_grid1 (Sop/grid)
set _obj_pc_crowd_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.5117200000000004` $_obj_pc_crowd_grid1
opparm -V 16.0.674 $_obj_pc_crowd_grid1 size ( 50 50 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_grid1
opexprlanguage -s hscript $_obj_pc_crowd_grid1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_grid1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_grid1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_grid1

# Node $_obj_pc_crowd_scatter1 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 0.848607` $_obj_pc_crowd_scatter1
opparm -V 16.0.674 $_obj_pc_crowd_scatter1 forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter1
opexprlanguage -s hscript $_obj_pc_crowd_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter1

# Node $_obj_pc_crowd_scatter2 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -1.0686800000000001` $_obj_pc_crowd_scatter2
opparm -V 16.0.674 $_obj_pc_crowd_scatter2 npts ( 20 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter2
opexprlanguage -s hscript $_obj_pc_crowd_scatter2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter2

# Node $_obj_pc_crowd_scatter3 (Sop/scatter::2.0)
set _obj_pc_crowd_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -1.31681` $_obj_pc_crowd_scatter3
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_pc_crowd_scatter3/npts
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_scatter3 npts ( npts ) seed ( 3.3799999999999999 ) scaleradiiby ( 1.8 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_scatter3
opexprlanguage -s hscript $_obj_pc_crowd_scatter3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_scatter3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_scatter3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_scatter3

# Node $_obj_pc_crowd_object_merge1 (Sop/object_merge)
set _obj_pc_crowd_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 8.0308775891609567` -y `$arg3 + -6.9331388883748009` $_obj_pc_crowd_object_merge1
opparm $_obj_pc_crowd_object_merge1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_object_merge1 xformtype ( local ) objpath1 ( ../DOP_sopsolver2/sopsolver1/null2/ )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_object_merge1
opexprlanguage -s hscript $_obj_pc_crowd_object_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_object_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_object_merge1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_object_merge1

# Node $_obj_pc_crowd_null1 (Sop/null)
set _obj_pc_crowd_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_pc_crowd_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_null1
opexprlanguage -s hscript $_obj_pc_crowd_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_null1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_null1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_null1

# Node $_obj_pc_crowd_box1 (Sop/box)
set _obj_pc_crowd_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_pc_crowd_box1
opparm -V 16.0.674 $_obj_pc_crowd_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_box1
opexprlanguage -s hscript $_obj_pc_crowd_box1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_box1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_box1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_box1

# Node $_obj_pc_crowd_sphere1 (Sop/sphere)
set _obj_pc_crowd_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_pc_crowd_sphere1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_pc_crowd_sphere1/rady
chadd -t 0 0 $_obj_pc_crowd_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_pc_crowd_sphere1/radz
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_sphere1
opexprlanguage -s hscript $_obj_pc_crowd_sphere1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sphere1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sphere1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sphere1

# Node $_obj_pc_crowd_merge1 (Sop/merge)
set _obj_pc_crowd_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_pc_crowd_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_merge1
opexprlanguage -s hscript $_obj_pc_crowd_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_merge1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_merge1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_merge1

# Node $_obj_pc_crowd_copytopoints1 (Sop/copytopoints)
set _obj_pc_crowd_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_pc_crowd_copytopoints1
opparm -V 16.0.674 $_obj_pc_crowd_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_copytopoints1
opexprlanguage -s hscript $_obj_pc_crowd_copytopoints1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_copytopoints1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_copytopoints1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_copytopoints1

# Node $_obj_pc_crowd_sphere2 (Sop/sphere)
set _obj_pc_crowd_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_pc_crowd_sphere2
opparm -V 16.0.674 $_obj_pc_crowd_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_sphere2
opexprlanguage -s hscript $_obj_pc_crowd_sphere2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sphere2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sphere2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sphere2

# Node $_obj_pc_crowd_sort1 (Sop/sort)
set _obj_pc_crowd_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.848607` $_obj_pc_crowd_sort1
opparm -V 16.0.674 $_obj_pc_crowd_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_sort1
opexprlanguage -s hscript $_obj_pc_crowd_sort1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sort1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sort1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sort1

# Node $_obj_pc_crowd_blast2 (Sop/blast)
set _obj_pc_crowd_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 0.041596000000000001` $_obj_pc_crowd_blast2
opparm -V 16.0.674 $_obj_pc_crowd_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_blast2
opexprlanguage -s hscript $_obj_pc_crowd_blast2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_blast2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_blast2

# Node $_obj_pc_crowd_sort2 (Sop/sort)
set _obj_pc_crowd_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.848607` $_obj_pc_crowd_sort2
opparm -V 16.0.674 $_obj_pc_crowd_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_sort2
opexprlanguage -s hscript $_obj_pc_crowd_sort2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_sort2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_sort2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_sort2

# Node $_obj_pc_crowd_blast3 (Sop/blast)
set _obj_pc_crowd_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 0.041596000000000001` $_obj_pc_crowd_blast3
opparm -V 16.0.674 $_obj_pc_crowd_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_pc_crowd_blast3
opexprlanguage -s hscript $_obj_pc_crowd_blast3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_blast3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_blast3

# Node $_obj_pc_crowd_facet1 (Sop/facet)
set _obj_pc_crowd_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.2336999999999998` $_obj_pc_crowd_facet1
opparm -V 16.0.674 $_obj_pc_crowd_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_facet1
opexprlanguage -s hscript $_obj_pc_crowd_facet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_facet1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_facet1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_facet1

# Node $_obj_pc_crowd_blast1 (Sop/blast)
set _obj_pc_crowd_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 2.3395000000000001` $_obj_pc_crowd_blast1
opparm -V 16.0.674 $_obj_pc_crowd_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_blast1
opexprlanguage -s hscript $_obj_pc_crowd_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_pc_crowd_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_pc_crowd_blast1

# Node $_obj_pc_crowd_Prev_Frame (Sop/dopimport)
set _obj_pc_crowd_Prev_Frame = `run("opadd -e -n -v dopimport Prev_Frame")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -6.1848953718962507` $_obj_pc_crowd_Prev_Frame
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_Prev_Frame/doposxform
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_Prev_Frame/doxform
chadd -t 0 0 $_obj_pc_crowd_Prev_Frame integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_pc_crowd_Prev_Frame/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_Prev_Frame doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) singleobject ( on ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) centeratpivot ( off ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_Prev_Frame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Prev_Frame
opexprlanguage -s hscript $_obj_pc_crowd_Prev_Frame
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Prev_Frame
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Prev_Frame
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Prev_Frame

# Node $_obj_pc_crowd_Input_1 (Sop/object_merge)
set _obj_pc_crowd_Input_1 = `run("opadd -e -n -v object_merge Input_1")`
oplocate -x `$arg2 + 17.410522936113171` -y `$arg3 + -5.9633353718962505` $_obj_pc_crowd_Input_1
opparm $_obj_pc_crowd_Input_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_1 objpath1 ( '`opinputpath("../..", 0)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_1
opexprlanguage -s hscript $_obj_pc_crowd_Input_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_1

# Node $_obj_pc_crowd_Input_2 (Sop/object_merge)
set _obj_pc_crowd_Input_2 = `run("opadd -e -n -v object_merge Input_2")`
oplocate -x `$arg2 + 19.003882936113271` -y `$arg3 + -6.5178653718962511` $_obj_pc_crowd_Input_2
opparm $_obj_pc_crowd_Input_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_2 objpath1 ( '`opinputpath("../..", 1)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_2
opexprlanguage -s hscript $_obj_pc_crowd_Input_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_2

# Node $_obj_pc_crowd_Input_3 (Sop/object_merge)
set _obj_pc_crowd_Input_3 = `run("opadd -e -n -v object_merge Input_3")`
oplocate -x `$arg2 + 20.312632936113271` -y `$arg3 + -7.1333753718962507` $_obj_pc_crowd_Input_3
opparm $_obj_pc_crowd_Input_3  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_3 objpath1 ( '`opinputpath("../..", 2)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_3
opexprlanguage -s hscript $_obj_pc_crowd_Input_3
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_3
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_3
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_3

# Node $_obj_pc_crowd_Input_4 (Sop/object_merge)
set _obj_pc_crowd_Input_4 = `run("opadd -e -n -v object_merge Input_4")`
oplocate -x `$arg2 + 21.82468293611327` -y `$arg3 + -7.6878953718962508` $_obj_pc_crowd_Input_4
opparm $_obj_pc_crowd_Input_4  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_Input_4 objpath1 ( '`opinputpath("../..", 3)`' )
opcolor -c 0.80000001192092896 0.80000001192092896 0.80000001192092896 $_obj_pc_crowd_Input_4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_Input_4
opexprlanguage -s hscript $_obj_pc_crowd_Input_4
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_Input_4
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_Input_4
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_Input_4

# Node $_obj_pc_crowd_switch1 (Sop/switch)
set _obj_pc_crowd_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 15.170142936113171` -y `$arg3 + -9.3446053718962503` $_obj_pc_crowd_switch1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../../startframe")' $_obj_pc_crowd_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_switch1
opexprlanguage -s hscript $_obj_pc_crowd_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_switch1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_switch1

# Node $_obj_pc_crowd_null2 (Sop/null)
set _obj_pc_crowd_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 19.851852936113271` -y `$arg3 + -13.59965537189615` $_obj_pc_crowd_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_null2
opexprlanguage -s hscript $_obj_pc_crowd_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_null2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_null2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_null2

# Node $_obj_pc_crowd_add1 (Sop/add)
set _obj_pc_crowd_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + -6.6666396917880615` -y `$arg3 + -6.3205350963386016` $_obj_pc_crowd_add1
opparm $_obj_pc_crowd_add1  points ( 1 ) prims ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_add1 stdswitcher ( 1 1 1 ) switcher ( 1 1 ) add ( attribute ) attrname ( id )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_add1
opexprlanguage -s hscript $_obj_pc_crowd_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_add1

# Node $_obj_pc_crowd_merge2 (Sop/merge)
set _obj_pc_crowd_merge2 = `run("opadd -e -n -v merge merge2")`
oplocate -x `$arg2 + -6.6677897038043579` -y `$arg3 + -4.5360900070497392` $_obj_pc_crowd_merge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_merge2
opexprlanguage -s hscript $_obj_pc_crowd_merge2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_merge2
opcf $_obj_pc_crowd_DOP_sopsolver2

# Node $_obj_pc_crowd_DOP_sopsolver2_output (Dop/output)
set _obj_pc_crowd_DOP_sopsolver2_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + 0.11764705882352935` -y `$arg3 + -0.2450980392156864` $_obj_pc_crowd_DOP_sopsolver2_output
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_pc_crowd_DOP_sopsolver2_output/f1
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_pc_crowd_DOP_sopsolver2_output/f2
chblockend
opparm $_obj_pc_crowd_DOP_sopsolver2_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_output
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_output
opuserdata -n '___Version___' -v '' $_obj_pc_crowd_DOP_sopsolver2_output
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry (Sop/dopimport)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/doposxform
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/doxform
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts (Sop/dopimportrecords)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_impacts

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks (Sop/dopimportrecords)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_feedbacks

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry/relnode
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_relationship_geometry

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 = `run("opadd -e -n -v object_merge input_2")`
oplocate -x `$arg2 + 9.528583754195795` -y `$arg3 + -4.9069557783532654` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 xformtype ( local ) objpath1 ( '`opinputpath("../..",1)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 (Sop/switch)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 3.7591054268727939` -y `$arg3 + -10.010376113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../startframe")' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1/input
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 input ( input )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2 (Sop/null)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 8.4407954268727945` -y `$arg3 + -14.265426113922787` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___toolcount___' -v '1' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opuserdata -n '___toolid___' -v 'sc_crowd' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2

# Node $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 (Sop/object_merge)
set _obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 = `run("opadd -e -n -v object_merge input_1")`
oplocate -x `$arg2 + 6.3919399713897702` -y `$arg3 + -4.2437570171058079` $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opparm $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 xformtype ( local ) objpath1 ( '`opinputpath("../..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1
oporder -e dop_geometry impacts feedbacks relationship_geometry input_2 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up switch1 null2 input_1 
opcf ..

# Node $_obj_pc_crowd_DOP_sopsolver2_multisolver1 (Dop/multisolver)
set _obj_pc_crowd_DOP_sopsolver2_multisolver1 = `run("opadd -e -n -v multisolver multisolver1")`
oplocate -x `$arg2 + 0.11764705882352955` -y `$arg3 + 1.7213946647679776` $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_multisolver1

# Node $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 (Dop/emptyobject)
set _obj_pc_crowd_DOP_sopsolver2_emptyobject1 = `run("opadd -e -n -v emptyobject emptyobject1")`
oplocate -x `$arg2 + -2.1559056521396434` -y `$arg3 + 4.4051475631031698` $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$ST == 0' $_obj_pc_crowd_DOP_sopsolver2_emptyobject1/activation
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_emptyobject1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_emptyobject1

# Node $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 (Dop/sopgeo)
set _obj_pc_crowd_DOP_sopsolver2_sopgeo1 = `run("opadd -e -n -v sopgeo sopgeo1")`
oplocate -x `$arg2 + -2.1546556235294139` -y `$arg3 + 3.2373610513226003` $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opparm $_obj_pc_crowd_DOP_sopsolver2_sopgeo1  numstamps ( 0 )
chblockbegin
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/time
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 transformtime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/transformtime
chadd -t 0 0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1/activation
chblockend
opparm -V 16.0.674 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opexprlanguage -s hscript $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
oporder -e output sopsolver1 multisolver1 emptyobject1 sopgeo1 
opcf ..

# Node $_obj_pc_crowd_dopimportfield1 (Sop/dopimportfield)
set _obj_pc_crowd_dopimportfield1 = `run("opadd -e -n -v dopimportfield dopimportfield1")`
oplocate -x `$arg2 + 3.1928022717649647` -y `$arg3 + -9.6959853296037526` $_obj_pc_crowd_dopimportfield1
opparm $_obj_pc_crowd_dopimportfield1  fields ( 1 ) attribute_numcasts ( 0 ) compression ( 0 )
opparm -V 1 $_obj_pc_crowd_dopimportfield1 doppath ( ../DOP_sopsolver2 ) dopnode ( ../DOP_sopsolver2/emptyobject1 ) fields ( 1 ) visible1 ( nochange ) fieldname1 ( Geometry )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_pc_crowd_dopimportfield1
opexprlanguage -s hscript $_obj_pc_crowd_dopimportfield1
opuserdata -n '___Version___' -v '1' $_obj_pc_crowd_dopimportfield1
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain DOP_space_colonization_crowd scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up Prev_Frame Input_1 Input_2 Input_3 Input_4 switch1 null2 add1 merge2 attribwrangle3 attribwrangle4 DOP_sopsolver2 dopimportfield1 
opcf ..
opset -p on $_obj_pc_crowd

opcf $arg1
opcf $_obj_pc_crowd
opwire -n $_obj_pc_crowd_grid1 -0 $_obj_pc_crowd_mountain1
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_scatter1
opwire -n $_obj_pc_crowd_blast3 -0 $_obj_pc_crowd_scatter2
opwire -n $_obj_pc_crowd_attribwrangle4 -0 $_obj_pc_crowd_crt_targetP
opwire -n $_obj_pc_crowd_attribwrangle3 -1 $_obj_pc_crowd_crt_targetP
opwire -n $_obj_pc_crowd_crt_targetP -0 $_obj_pc_crowd_crt_source
opwire -n $_obj_pc_crowd_scatter1 -0 $_obj_pc_crowd_crt_terrain
opwire -n $_obj_pc_crowd_crt_source -0 $_obj_pc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_pc_crowd_crt_terrain -1 $_obj_pc_crowd_DOP_space_colonization_crowd
opwire -n $_obj_pc_crowd_blast2 -0 $_obj_pc_crowd_scatter3
opwire -n $_obj_pc_crowd_attribwrangle1 -0 $_obj_pc_crowd_null1
opwire -n $_obj_pc_crowd_DOP_space_colonization_crowd -0 $_obj_pc_crowd_attribwrangle1
opwire -n $_obj_pc_crowd_sphere1 -0 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_box1 -1 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_sphere2 -2 $_obj_pc_crowd_merge1
opwire -n $_obj_pc_crowd_merge1 -0 $_obj_pc_crowd_copytopoints1
opwire -n $_obj_pc_crowd_null1 -1 $_obj_pc_crowd_copytopoints1
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_sort1
opwire -n $_obj_pc_crowd_sort1 -0 $_obj_pc_crowd_blast2
opwire -n $_obj_pc_crowd_blast1 -0 $_obj_pc_crowd_sort2
opwire -n $_obj_pc_crowd_sort2 -0 $_obj_pc_crowd_blast3
opwire -n $_obj_pc_crowd_mountain1 -0 $_obj_pc_crowd_facet1
opwire -n $_obj_pc_crowd_facet1 -0 $_obj_pc_crowd_blast1
opwire -n $_obj_pc_crowd_Input_2 -0 $_obj_pc_crowd_attribwrangle2
opwire -n $_obj_pc_crowd_switch1 -1 $_obj_pc_crowd_attribwrangle2
opwire -n $_obj_pc_crowd_switch1 -0 $_obj_pc_crowd_calc_new_v
opwire -n $_obj_pc_crowd_attribwrangle2 -1 $_obj_pc_crowd_calc_new_v
opwire -n $_obj_pc_crowd_limit_v -0 $_obj_pc_crowd_advect
opwire -n $_obj_pc_crowd_Input_1 -0 $_obj_pc_crowd_init_v
opwire -n $_obj_pc_crowd_calc_new_v -0 $_obj_pc_crowd_add_v
opwire -n $_obj_pc_crowd_add_v -0 $_obj_pc_crowd_limit_v
opwire -n $_obj_pc_crowd_update_up -0 $_obj_pc_crowd_update_N
opwire -n $_obj_pc_crowd_advect -0 $_obj_pc_crowd_update_up
opwire -n $_obj_pc_crowd_Input_2 -1 $_obj_pc_crowd_update_up
opwire -n $_obj_pc_crowd_Prev_Frame -0 $_obj_pc_crowd_switch1
opwire -n $_obj_pc_crowd_init_v -1 $_obj_pc_crowd_switch1
opwire -n $_obj_pc_crowd_attribwrangle2 -0 $_obj_pc_crowd_null2
opwire -n $_obj_pc_crowd_merge2 -0 $_obj_pc_crowd_add1
opwire -n $_obj_pc_crowd_attribwrangle3 -0 $_obj_pc_crowd_merge2
opwire -n $_obj_pc_crowd_attribwrangle4 -1 $_obj_pc_crowd_merge2
opwire -n $_obj_pc_crowd_scatter3 -0 $_obj_pc_crowd_attribwrangle3
opwire -n $_obj_pc_crowd_scatter2 -0 $_obj_pc_crowd_attribwrangle4
opwire -n $_obj_pc_crowd_crt_source -0 $_obj_pc_crowd_DOP_sopsolver2
opwire -n $_obj_pc_crowd_crt_terrain -1 $_obj_pc_crowd_DOP_sopsolver2
opcf $_obj_pc_crowd_DOP_sopsolver2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_multisolver1 -0 $_obj_pc_crowd_DOP_sopsolver2_output
opcf $_obj_pc_crowd_DOP_sopsolver2_sopsolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_calc_new_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_add_v -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_limit_v
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_N
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_advect -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_input_2 -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_update_up
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_dop_geometry -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_init_v -1 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_switch1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_attribwrangle2 -0 $_obj_pc_crowd_DOP_sopsolver2_sopsolver1_null2
opcf ..
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopgeo1 -0 $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_sopsolver1 -1 $_obj_pc_crowd_DOP_sopsolver2_multisolver1
opwire -n $_obj_pc_crowd_DOP_sopsolver2_emptyobject1 -0 $_obj_pc_crowd_DOP_sopsolver2_sopgeo1
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_pc_crowd
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_pc_crowd
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="pc_crowd_new" label="pc_crowd_new" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_crowd01_pc_crowd_new (Object/geo)
set _obj_crowd01_pc_crowd_new = `run("opadd -e -n -v geo pc_crowd_new")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_crowd01_pc_crowd_new
opspareds '    group {  name    "stdswitcher4"  label   "Transform"     parm {      name        "xOrd"      baseparm        label       "Transform Order"           joinnext        export      none    }       parm {      name        "rOrd"      baseparm        label       "Rotate Order"      export      none    }       parm {      name        "t"         baseparm        label       "Translate"         export      all     }       parm {      name        "r"         baseparm        label       "Rotate"            export      all     }       parm {      name        "s"         baseparm        label       "Scale"             export      none    }       parm {      name        "p"         baseparm        label       "Pivot"             export      none    }       parm {      name        "scale"             baseparm        label       "Uniform Scale"             export      none    }       parm {      name        "pre_xform"         baseparm        label       "Modify Pre-Transform"      export      none    }       parm {      name        "keeppos"           baseparm        label       "Keep Position When Parenting"      export      none    }       parm {      name        "childcomp"         baseparm        label       "Child Compensation"        export      none    }       parm {      name        "constraints_on"            baseparm        label       "Enable Constraints"        export      none    }       parm {      name        "constraints_path"          baseparm        label       "Constraints"       export      none    }       parm {      name        "lookatpath"        baseparm        label       "Look At"           invisible       export      none    }       parm {      name        "lookupobjpath"             baseparm        label       "Look Up Object"            invisible       export      none    }       parm {      name        "lookup"            baseparm        label       "Look At Up Vector"         invisible       export      none    }       parm {      name        "pathobjpath"       baseparm        label       "Path Object"       invisible       export      none    }       parm {      name        "roll"      baseparm        label       "Roll"      invisible       export      none    }       parm {      name        "pos"       baseparm        label       "Position"          invisible       export      none    }       parm {      name        "uparmtype"         baseparm        label       "Parameterization"          invisible       export      none    }       parm {      name        "pathorient"        baseparm        label       "Orient Along Path"         invisible       export      none    }       parm {      name        "up"        baseparm        label       "Orient Up Vector"          invisible       export      none    }       parm {      name        "bank"      baseparm        label       "Auto-Bank factor"          invisible       export      none    }     }      group {    name    "stdswitcher4_1"        label   "Render"        parm {      name        "shop_materialpath"         baseparm        label       "Material"          export      none    }       parm {      name        "shop_materialopts"         baseparm        label       "Options"           invisible       export      none    }       parm {      name        "tdisplay"          baseparm        label       "Display"           joinnext        export      none    }       parm {      name        "display"           baseparm        label       "Display"           export      none    }       parm {      name        "viewportlod"       label       "Display As"        type        ordinal             default     { "full" }          help        "Choose how the object\'s geometry should be rendered in the viewport"      menu        {               "full"  "Full Geometry"                 "points"        "Point Cloud"           "box"   "Bounding Box"          "centroid"      "Centroid"              "hidden"        "Hidden"                "subd"  "Subdivision Surface / Curves"      }       parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendervisibility"       label       "Render Visibility"         type        string      default     { "*" }             menureplace {               "*"     "Visible to all"                "primary"       "Visible only to primary rays"          "primary|shadow"        "Visible only to primary and shadow rays"               "-primary"      "Invisible to primary rays (Phantom)"           "-diffuse"      "Invisible to diffuse rays"             "-diffuse&-reflect&-refract"    "Invisible to secondary rays"           ""      "Invisible (Unrenderable)"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendervisibility" }        parmtag     { "spare_category" "Render" }   }       parm {      name        "vm_rendersubd"             label       "Render Polygons As Subdivision (Mantra)"           type        toggle      default     { "0" }             parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "rendersubd" }      parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdstyle"      label       "Subdivision Style"         type        string      default     { "mantra_catclark" }       hidewhen    "{ vm_rendersubd == 0 }"            menu        {               "mantra_catclark"       "Mantra Catmull-Clark"          "osd_catclark"  "OpenSubdiv Catmull-Clark"          }       parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdstyle" }       parmtag     { "spare_category" "Geometry" }         }       parm {      name        "vm_subdgroup"      label       "Subdivision Group"         type        string      default     { "" }      hidewhen    "{ vm_rendersubd == 0 }"            parmtag     { "mantra_class" "object" }         parmtag     { "mantra_name" "subdgroup" }       parmtag     { "spare_category" "Geometry" }         }       group {             name        "folder0"           label       "Shading"           parm {              name    "categories"            label   "Categories"            type    string          default { "" }          help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }      }       parm {              name    "reflectmask"           label   "Reflection Mask"               type    oplist          default { "*" }                 help    "Objects that will be reflected on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "refractmask"           label   "Refraction Mask"               type    oplist          default { "*" }                 help    "Objects that will be refracted on this object."                parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }               parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightmask"             label   "Light Mask"            type    oplist          default { "*" }                 help    "Lights that illuminate this object."           parmtag { "opexpand" "1" }              parmtag { "opfilter" "!!OBJ/LIGHT!!" }          parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "lightcategories"               label   "Light Selection"               type    string          default { "*" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilter"               label   "Volume Filter"                 type    string          default { "box" }               menu    {                   "box"       "Box Filter"                "gaussian"  "Gaussian"                  "bartlett"  "Bartlett (triangle)"               "catrom"    "Catmull-Rom"               "hanning"   "Hanning"                   "blackman"  "Blackman"                  "sinc"      "Sinc (sharpening)"             }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filter" }              parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_volumefilterwidth"          label   "Volume Filter Width"           type    float           default { "1" }                 range   { 0.001 5 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_matte"              label   "Matte shading"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "matte" }               parmtag { "spare_category" "Shading" }      }       parm {              name    "vm_rayshade"           label   "Raytrace Shading"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rayshade" }            parmtag { "spare_category" "Shading" }      }   }       group {             name        "folder0_1"         label       "Sampling"          parm {              name    "geo_velocityblur"              label   "Geometry Velocity Blur"                type    toggle          default { "0" }                 disablewhen     "{ allowmotionblur == 0 }"              parmtag { "spare_category" "Sampling" }             }   }       group {             name        "folder0_2"         label       "Dicing"            parm {              name    "vm_shadingquality"             label   "Shading Quality"               type    float           default { "1" }                 range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "shadingquality" }              parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_flatness"           label   "Dicing Flatness"               type    float           default { "0.05" }              range   { 0 1 }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "flatness" }            parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu    {                   "0" "Disable Predicing"                 "1" "Full Predicing"                    "2" "Precompute Bounds"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "raypredice" }          parmtag { "spare_category" "Dicing" }       }       parm {              name    "vm_curvesurface"               label   "Shade Curves As Surfaces"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "curvesurface" }                parmtag { "spare_category" "Dicing" }       }   }       group {             name        "folder0_3"         label       "Geometry"          parm {              name    "vm_rmbackface"                 label   "Backface Removal"              type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rmbackface" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "shop_geometrypath"             label   "Procedural Shader"             type    oppath          default { "" }          parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }              parmtag { "oprelative" "." }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_forcegeometry"              label   "Force Procedural Geometry Output"              type    toggle          default { "1" }                 parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_rendersubdcurves"           label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubdcurves" }            parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpoints"               label   "Render As Points (Mantra)"             type    integer                 default { "2" }                 menu    {                   "0" "No Point Rendering"                "1" "Render Only Points"                "2" "Render Unconnected Points"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpoints" }                parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_renderpointsas"             label   "Render Points As (Mantra)"             type    integer                 default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              menu    {                   "0" "Spheres"                   "1" "Circles"               }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "renderpointsas" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_usenforpoints"              label   "Use N For Point Rendering"             type    toggle          default { "0" }                 disablewhen     "{ vm_renderpoints == 0 }"              parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "usenforpoints" }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pointscale"                 label   "Point Scale"           type    float           default { "1" }                 disablewhen     "{ vm_renderpoints == 0 }"              range   { 0! 10 }               parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pointscale" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_pscalediameter"             label   "Treat Point Scale as Diameter Instead of Radius"               type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "pscalediameter" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_metavolume"                 label   "Metaballs as Volume"           type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "metavolume" }          parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_coving"             label   "Coving"                type    integer                 default { "1" }                 menu    {                   "0" "Disable Coving"                    "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"             }               range   { 0 10 }                parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "coving" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_materialoverride"           label   "Material Override"             type    string          default { "compact" }           menu    {                   "none"      "Disabled"                  "full"      "Evaluate for Each Primitve/Point"                  "compact"   "Evaluate Once"                 }               parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_overridedetail"             label   "Ignore Geometry Attribute Shaders"             type    toggle          default { "0" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "overridedetail" }              parmtag { "spare_category" "Geometry" }             }       parm {              name    "vm_procuseroottransform"               label   "Proc Use Root Transform"               type    toggle          default { "1" }                 parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "procuseroottransform" }                parmtag { "spare_category" "Geometry" }             }   }      }      group {   name    "stdswitcher4_2"        label   "Misc"          parm {      name        "use_dcolor"        baseparm        label       "Set Wireframe Color"       export      none    }       parm {      name        "dcolor"            baseparm        label       "Wireframe Color"           export      none    }       parm {      name        "picking"           baseparm        label       "Viewport Selecting Enabled"        export      none    }       parm {      name        "pickscript"        baseparm        label       "Select Script"             export      none    }       parm {      name        "caching"           baseparm        label       "Cache Object Transform"            export      none    }       parm {      name        "vport_shadeopen"           baseparm        label       "Shade Open Curves In Viewport"             export      none    }       parm {      name        "vport_displayassubdiv"             baseparm        label       "Display as Subdivision in Viewport"        invisible       export      none    }       parm {      name        "vport_onionskin"           baseparm        label       "Onion Skinning"            export      none    }     }  ' $_obj_crowd01_pc_crowd_new
opset -S on $_obj_crowd01_pc_crowd_new
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new use_dcolor ( off )
chautoscope $_obj_crowd01_pc_crowd_new +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_crowd01_pc_crowd_new
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new
opcf $_obj_crowd01_pc_crowd_new

# Node $_obj_crowd01_pc_crowd_new_mountain1 (Sop/mountain::2.0)
set _obj_crowd01_pc_crowd_new_mountain1 = `run("opadd -e -n -v mountain::2.0 mountain1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 5.9363200000000003` $_obj_crowd01_pc_crowd_new_mountain1
opparm $_obj_crowd01_pc_crowd_new_mountain1 height ( 21.600000000000001 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_mountain1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___toolcount___' -v '20' $_obj_crowd01_pc_crowd_new_mountain1
opuserdata -n '___toolid___' -v 'sop_mountain::2.0' $_obj_crowd01_pc_crowd_new_mountain1

# Node $_obj_crowd01_pc_crowd_new_crt_targetP (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_targetP = `run("opadd -e -n -v attribwrangle crt_targetP")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -3.35127` $_obj_crowd01_pc_crowd_new_crt_targetP
opparm $_obj_crowd01_pc_crowd_new_crt_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_targetP snippet ( 'v@targetP = v@opinput1_P;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_crt_targetP
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_targetP
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_targetP

# Node $_obj_crowd01_pc_crowd_new_crt_source (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_source = `run("opadd -e -n -v attribwrangle crt_source")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -4.5402399999999998` $_obj_crowd01_pc_crowd_new_crt_source
opparm $_obj_crowd01_pc_crowd_new_crt_source  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_source snippet ( 'i@source=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_source
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_crt_source
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_source
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_source

# Node $_obj_crowd01_pc_crowd_new_crt_terrain (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_crt_terrain = `run("opadd -e -n -v attribwrangle crt_terrain")`
oplocate -x `$arg2 + 0.244059` -y `$arg3 + -4.5402399999999998` $_obj_crowd01_pc_crowd_new_crt_terrain
opparm $_obj_crowd01_pc_crowd_new_crt_terrain  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_crt_terrain snippet ( 'i@terrain=1;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_crt_terrain
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_crt_terrain
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_crt_terrain
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_crt_terrain

# Node $_obj_crowd01_pc_crowd_new_attribwrangle1 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + -2.7330899999999998` -y `$arg3 + -10.4206` $_obj_crowd01_pc_crowd_new_attribwrangle1
opparm $_obj_crowd01_pc_crowd_new_attribwrangle1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle1 snippet ( '@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_attribwrangle1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_attribwrangle1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_attribwrangle1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_attribwrangle1

# Node $_obj_crowd01_pc_crowd_new_attribwrangle2 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 6.23841` -y `$arg3 + -2.93737` $_obj_crowd01_pc_crowd_new_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_attribwrangle2
opparm $_obj_crowd01_pc_crowd_new_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle2 snippet ( 'int nearPt= nearpoint(1,@P);\n\nfloat dist = distance(@P, point(1,"P",nearPt));\n\nif(dist < ch("rad"))\n{\n    @group_in = 1;\n    @Cd = set(1,0,0);\n}\n' ) rad ( 4 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle2

# Node $_obj_crowd01_pc_crowd_new_attribwrangle3 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + -2.7342399999999998` -y `$arg3 + -1.22357` $_obj_crowd01_pc_crowd_new_attribwrangle3
opparm $_obj_crowd01_pc_crowd_new_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle3 snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle3

# Node $_obj_crowd01_pc_crowd_new_attribwrangle4 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + -5.49709` -y `$arg3 + -1.22357` $_obj_crowd01_pc_crowd_new_attribwrangle4
opparm $_obj_crowd01_pc_crowd_new_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_attribwrangle4 snippet ( '@id = @ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_attribwrangle4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_attribwrangle4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver (Sop/dopnet)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver = `run("opadd -e -n -v dopnet DOP_sopsolver")`
oplocate -x `$arg2 + 1.8413600000000001` -y `$arg3 + -8.2098999999999993` $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/timestep
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/timeoffset
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver startframe
chkey -t 41.458333333333002 -v 1 -m 0 -a 0 -A 0 -T a  -F '$SHOT_START' $_obj_crowd01_pc_crowd_new_DOP_sopsolver/startframe
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver stdswitcher ( 1 1 1 ) startframe ( startframe ) objname1 ( * )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 (Dop/sopsolver::2.0)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 = `run("opadd -e -n -v sopsolver::2.0 sopsolver1")`
oplocate -x `$arg2 + 1.35425` -y `$arg3 + 2.10493` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 solveinitframe ( on ) uniquedataname ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 = `run("opadd -e -n -v attribwrangle attribwrangle2")`
oplocate -x `$arg2 + 14.541` -y `$arg3 + -20.275400000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "extra_overwrite_rad"   label   "Extra Overwrite Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2 snippet ( 'int pts[]= pcfind(1, "P", @P, ch("rad") + ch("extra_overwrite_rad"), chi("max_pts"));\n\nforeach(int pt; pts)\n{\n    vector nearP = point(1, "P",pt);\n    vector nearV = point(1, "v",pt);\n    if(distance(@P + nearV * @TimeInc, nearP)<ch("rad"))\n    {\n        removepoint(geoself(),@ptnum);\n    }\n    else\n    {\n        @N = normalize((@P) - nearP + nearV * @TimeInc);\n    }\n}' ) rad ( 1.5 ) max_pts ( 1 ) extra_overwrite_rad ( 10 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b on $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v = `run("opadd -e -n -v attribwrangle calc_new_v")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -22.4163` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_pts"       label   "Max Pts"       type    integer         default { "0" }         range   { 0 10 }     }     parm {       name    "dot"   label   "Dot"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_deg"       label   "Max Deg"       type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v snippet ( 'float dot = ch("dot");\nint handle = pcopen(@OpInput2, "P", @P + @v * @TimeInc, ch("rad"), chi("max_pts"));\n//"N", normalize(v@targetP - @P), \n//,"ndot",dot\n\nint num = pcnumfound(handle);\nvector filterP;\n\nif(num > 0)\n{\n    int nearest=0;\n    \n    if(1)\n    filterP = pcfilter(handle, "P");\n    \n    vector avoidDir = normalize(filterP - @P);\n    \n    dot = dot(avoidDir, normalize(@v));\n    vector cross = normalize(cross(avoidDir, normalize(@v)));\n    float maxRad = radians(ch("max_deg"));\n    \n    acos(dot);\n    \n    @v = avoidDir * length(@v);\n    v@aaaa = cross;\n    //v@up = filterN;\n}\n\n\n' ) rad ( 6 ) max_pts ( 150 ) dot ( -0.5 ) max_deg ( 40 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect = `run("opadd -e -n -v attribwrangle advect")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -27.532599999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect snippet ( 'if(distance(v@targetP, @P) > length(@v * @TimeInc))\n{\n    @P += @v * @TimeInc;\n}\nelse\n{\n    @Cd = set(1,0,0);\n}\n\n' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v = `run("opadd -e -n -v attribwrangle init_v")`
oplocate -x `$arg2 + 5.1067900000000002` -y `$arg3 + -10.5482` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "spped"         label   "Spped"         type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v snippet ( 'if(length(@v) == 0)\n{\n    @v += normalize(v@targetP - @P) * ch("spped");\n}' ) spped ( 0.5 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v = `run("opadd -e -n -v attribwrangle add_v")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -25.289300000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "add_speed"     label   "Add Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v snippet ( '@v += normalize(@v) * ch("add_speed");' ) add_speed ( 0.20000000000000001 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v = `run("opadd -e -n -v attribwrangle limit_v")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -26.367100000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "max_speed"     label   "Max Speed"     type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v snippet ( 'if(length(@v) > ch("max_speed"))\n{\n    @v = normalize(@v) * ch("max_speed");\n}' ) max_speed ( 3 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N = `run("opadd -e -n -v attribwrangle update_N")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -30.118400000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N snippet ( 'if(length(@v)>0)@N = normalize(@v);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up = `run("opadd -e -n -v attribwrangle update_up")`
oplocate -x `$arg2 + 2.8651599999999999` -y `$arg3 + -28.685099999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up snippet ( 'int near = nearpoint(1,@P);\n\n@up = point(1,"N",near);' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP = `run("opadd -e -n -v attribwrangle update_targetP")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -9.5852799999999991` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP snippet ( 'v@targetP = v@opinput1_targetP;' )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 = `run("opadd -e -n -v attribwrangle attribwrangle3")`
oplocate -x `$arg2 + 9.7042999999999999` -y `$arg3 + -13.690099999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 snippet ( 'int nearPt= nearpoint(1,@P);\n\nfloat dist = distance(@P, point(1,"P",nearPt));\n\nif(dist < ch("rad"))\n{\n    @group_in = 1;\n    @Cd = set(1,0,0);\n}\n' ) rad ( 5 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 = `run("opadd -e -n -v attribwrangle attribwrangle4")`
oplocate -x `$arg2 + 9.7042999999999999` -y `$arg3 + -20.9712` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "dist"  label   "Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "target_dist"   label   "Target Dist"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "overall_dist"  label   "Overall Dist"  type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "target_rad"    label   "Target Rad"    type    float   default { "0" }         range   { 0 1 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 dist
chkey -t 41.458333333333002 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../attribwrangle3/rad")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4/dist
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 snippet ( 'int nearPt= nearpoint(1,@P);\n\nvector nearP = point(1, "P", nearPt);\nvector nearV = point(1, "v", nearPt);\nvector nearTargetP = point(1, "targetP", nearPt);\ni@nearest = nearPt;\n\nfloat dist = distance(@P, nearP + nearV * @TimeInc*4);\n\nfloat dotV = dot(normalize(nearV), normalize(@P - nearP));\nfloat dotTarget = dot(normalize(nearTargetP - nearP), normalize(@P - nearP));\n\nif((dist < ch("dist") && dotV > ch("rad")) || (dist < ch("target_dist") && dotTarget > ch("target_rad")) || dist < ch("overall_dist"))\n{\n    \n}\nelse removepoint(geoself(),@ptnum);' ) rad ( 0.5 ) dist ( dist ) target_dist ( 5 ) overall_dist ( 2 ) target_rad ( 0.80000000000000004 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 (Sop/attribwrangle)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 = `run("opadd -e -n -v attribwrangle attribwrangle5")`
oplocate -x `$arg2 + 7.3249700000000004` -y `$arg3 + -21.623999999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opspareds '    group {  name    "folder1"       label   "Code"          parm {      name        "group"             baseparm        label       "Group"             export      none        bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."              0 1 0xffffffff 0 grouptype 0    }       parm {      name        "grouptype"         baseparm        label       "Group Type"        export      none    }       parm {      name        "class"             baseparm        label       "Run Over"          export      none    }       parm {      name        "vex_numcount"      baseparm        label       "Number Count"      export      none    }       parm {      name        "vex_threadjobsize"         baseparm        label       "Thread Job Size"           export      none    }       parm {      name        "snippet"           baseparm        label       "VEXpression"       export      all     }       parm {      name        "exportlist"        baseparm        label       "Attributes to Create"      export      none    }       parm {      name        "vex_strict"        baseparm        label       "Enforce Prototypes"        export      none    }     }      group {    name    "folder1_1"     label   "Bindings"      parm {      name        "autobind"          baseparm        label       "Autobind by Name"          export      none    }       multiparm {         name        "bindings"          label       "Number of Bindings"        baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindname#"             baseparm                label   "Attribute Name"                export  none        }       parm {              name    "bindparm#"             baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "groupautobind"             baseparm        label       "Autobind Groups by Name"           export      none    }       multiparm {         name        "groupbindings"             label       "Group Bindings"            baseparm        default     0           parmtag     { "autoscope" "0000000000000000" }          parmtag     { "multistartoffset" "1" }          parm {              name    "bindgroupname#"                baseparm                label   "Group Name"            export  none        }       parm {              name    "bindgroupparm#"                baseparm                label   "VEX Parameter"                 export  none        }   }       parm {      name        "vex_cwdpath"       baseparm        label       "Evaluation Node Path"      export      none    }       parm {      name        "vex_outputmask"            baseparm        label       "Export Parameters"         export      none    }       parm {      name        "vex_updatenmls"            baseparm        label       "Update Normals If Displaced"       export      none    }       parm {      name        "vex_matchattrib"           baseparm        label       "Attribute to Match"        export      none    }       parm {      name        "vex_inplace"       baseparm        label       "Compute Results In Place"          export      none    }       parm {      name        "vex_selectiongroup"        baseparm        label       "Output Selection Group"            export      none    }     }      parm {     name    "rad"   label   "Rad"   type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "min_dist"      label   "Min Dist"      type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "max_dist"      label   "Max Dist"      type    float   default { "0" }         range   { 0 1 }     }     parm {        name    "remap_dist"    label   "Remap Dist"    type    ramp_flt        default { "2" }         range   { 1! 10 }     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5  bindings ( 0 ) groupbindings ( 0 ) remap_dist ( 3 )
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 rad
chkey -t 41.458333333333002 -v 1.5 -m 0 -a 0 -A 0 -T a  -F 'ch("../attribwrangle3/rad")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5/rad
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 snippet ( 'int nearPt= nearpoint(1,@P);\n\nvector nearP = point(1, "P", nearPt);\nvector nearV = point(1, "v", nearPt);\ni@nearest = nearPt;\n\nfloat dist = distance(@P, nearP );//+ nearV * @TimeInc\ndist = fit(dist, ch("min_dist"), ch("max_dist"),1,0);\ndist = chramp("remap_dist", dist);\n\nfloat rand = rand((@ptnum + 1.3) * 1.2);\n\n\nif(dist>rand)\n{\n    removepoint(geoself(),@ptnum);\n}\n' ) rad ( rad ) min_dist ( 1 ) max_dist ( 5 ) remap_dist ( 3 ) remap_dist1interp ( bspline ) remap_dist2pos ( 0.68907564878463745 ) remap_dist2interp ( bspline ) remap_dist3pos ( 1 ) remap_dist3value ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opcf ..
opcf ..
opcf ..
opcf $_obj_crowd01_pc_crowd_new

# Node $_obj_crowd01_pc_crowd_new_grid1 (Sop/grid)
set _obj_crowd01_pc_crowd_new_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 7.05396` $_obj_crowd01_pc_crowd_new_grid1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_grid1 cols
chkey -t 41.458333333333002 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("rows")' $_obj_crowd01_pc_crowd_new_grid1/cols
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_grid1 size ( 50 50 ) cols ( cols )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_grid1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_grid1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_grid1

# Node $_obj_crowd01_pc_crowd_new_scatter1 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + -0.86833400000000005` $_obj_crowd01_pc_crowd_new_scatter1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter1 densityscale ( 15 ) forcetotal ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_scatter1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter1

# Node $_obj_crowd01_pc_crowd_new_scatter2 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter2 = `run("opadd -e -n -v scatter::2.0 scatter2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + -0.0712676` $_obj_crowd01_pc_crowd_new_scatter2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter2 npts ( 20 ) seed ( 7.9100000000000001 ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_scatter2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter2

# Node $_obj_crowd01_pc_crowd_new_scatter3 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_scatter3 = `run("opadd -e -n -v scatter::2.0 scatter3")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + -0.0712676` $_obj_crowd01_pc_crowd_new_scatter3
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_scatter3 npts
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'ch("../scatter2/npts")' $_obj_crowd01_pc_crowd_new_scatter3/npts
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_scatter3 npts ( npts ) seed ( 0.29999999999999999 ) relaxiterations ( 5 ) maxradius ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_scatter3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_scatter3
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_scatter3

# Node $_obj_crowd01_pc_crowd_new_object_merge1 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_object_merge1 = `run("opadd -e -n -v object_merge object_merge1")`
oplocate -x `$arg2 + 7.91465` -y `$arg3 + -8.2083499999999994` $_obj_crowd01_pc_crowd_new_object_merge1
opparm $_obj_crowd01_pc_crowd_new_object_merge1  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_object_merge1 xformtype ( local ) objpath1 ( ../DOP_space_colonization_crowd/d/s/null2/ )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_object_merge1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_object_merge1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_object_merge1

# Node $_obj_crowd01_pc_crowd_new_null1 (Sop/null)
set _obj_crowd01_pc_crowd_new_null1 = `run("opadd -e -n -v null null1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -11.5685` $_obj_crowd01_pc_crowd_new_null1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_null1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_null1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_null1

# Node $_obj_crowd01_pc_crowd_new_box1 (Sop/box)
set _obj_crowd01_pc_crowd_new_box1 = `run("opadd -e -n -v box box1")`
oplocate -x `$arg2 + -6.5566199999999997` -y `$arg3 + -11.3622` $_obj_crowd01_pc_crowd_new_box1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_box1 size ( 1 1 0.59999999999999998 ) t ( 0 0.5 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_box1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_box1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_box1

# Node $_obj_crowd01_pc_crowd_new_sphere1 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere1 = `run("opadd -e -n -v sphere sphere1")`
oplocate -x `$arg2 + -9.9206599999999998` -y `$arg3 + -11.3622` $_obj_crowd01_pc_crowd_new_sphere1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_sphere1 rady
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_crowd01_pc_crowd_new_sphere1/rady
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_sphere1 radz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("radx")' $_obj_crowd01_pc_crowd_new_sphere1/radz
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere1 type ( poly ) rad ( 0.69999999999999996 rady radz ) t ( 0 1.6000000000000001 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sphere1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sphere1

# Node $_obj_crowd01_pc_crowd_new_merge1 (Sop/merge)
set _obj_crowd01_pc_crowd_new_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -7.6420899999999996` -y `$arg3 + -13.053900000000001` $_obj_crowd01_pc_crowd_new_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_merge1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_merge1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_merge1

# Node $_obj_crowd01_pc_crowd_new_copytopoints1 (Sop/copytopoints)
set _obj_crowd01_pc_crowd_new_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -2.7300900000000001` -y `$arg3 + -15.309200000000001` $_obj_crowd01_pc_crowd_new_copytopoints1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_copytopoints1 setpt ( Cd ) mulpt ( "" ) addpt ( "" )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_copytopoints1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_copytopoints1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_copytopoints1

# Node $_obj_crowd01_pc_crowd_new_sphere2 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere2 = `run("opadd -e -n -v sphere sphere2")`
oplocate -x `$arg2 + -8.1143300000000007` -y `$arg3 + -11.2661` $_obj_crowd01_pc_crowd_new_sphere2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere2 type ( poly ) rad ( 0.10000000000000001 0.10000000000000001 0.29999999999999999 ) t ( 0 1.6000000000000001 0.69999999999999996 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sphere2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sphere2

# Node $_obj_crowd01_pc_crowd_new_sort1 (Sop/sort)
set _obj_crowd01_pc_crowd_new_sort1 = `run("opadd -e -n -v sort sort1")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 2.3908499999999999` $_obj_crowd01_pc_crowd_new_sort1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sort1 ptsort ( seed )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_sort1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sort1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sort1

# Node $_obj_crowd01_pc_crowd_new_blast2 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast2 = `run("opadd -e -n -v blast blast2")`
oplocate -x `$arg2 + -5.4940899999999999` -y `$arg3 + 1.5838399999999999` $_obj_crowd01_pc_crowd_new_blast2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast2 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_blast2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_blast2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_blast2

# Node $_obj_crowd01_pc_crowd_new_sort2 (Sop/sort)
set _obj_crowd01_pc_crowd_new_sort2 = `run("opadd -e -n -v sort sort2")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 2.3908499999999999` $_obj_crowd01_pc_crowd_new_sort2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sort2 ptsort ( seed ) pointseed ( 82 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_sort2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_sort2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_sort2

# Node $_obj_crowd01_pc_crowd_new_blast3 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast3 = `run("opadd -e -n -v blast blast3")`
oplocate -x `$arg2 + -2.7312400000000001` -y `$arg3 + 1.5838399999999999` $_obj_crowd01_pc_crowd_new_blast3
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast3 group ( 0-19 ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b on $_obj_crowd01_pc_crowd_new_blast3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_blast3
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_blast3

# Node $_obj_crowd01_pc_crowd_new_facet1 (Sop/facet)
set _obj_crowd01_pc_crowd_new_facet1 = `run("opadd -e -n -v facet facet1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 4.7759400000000003` $_obj_crowd01_pc_crowd_new_facet1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_facet1 postnml ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_facet1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_facet1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_facet1

# Node $_obj_crowd01_pc_crowd_new_blast1 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.8817400000000002` $_obj_crowd01_pc_crowd_new_blast1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast1 group ( '15-16 20-21 24-25 46 48-52' ) grouptype ( prims ) removegrp ( on )
opset -d off -r off -h on -f on -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_blast1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___toolcount___' -v '16' $_obj_crowd01_pc_crowd_new_blast1
opuserdata -n '___toolid___' -v 'generic_delete' $_obj_crowd01_pc_crowd_new_blast1

# Node $_obj_crowd01_pc_crowd_new_sphere3 (Sop/sphere)
set _obj_crowd01_pc_crowd_new_sphere3 = `run("opadd -e -n -v sphere sphere3")`
oplocate -x `$arg2 + 10.035600000000001` -y `$arg3 + -1.4748300000000001` $_obj_crowd01_pc_crowd_new_sphere3
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_sphere3 type ( poly ) rad ( 3 3 3 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_sphere3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_sphere3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_sphere3

# Node $_obj_crowd01_pc_crowd_new_copytopoints2 (Sop/copytopoints)
set _obj_crowd01_pc_crowd_new_copytopoints2 = `run("opadd -e -n -v copytopoints copytopoints2")`
oplocate -x `$arg2 + 10.035600000000001` -y `$arg3 + -2.5537200000000002` $_obj_crowd01_pc_crowd_new_copytopoints2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_copytopoints2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_copytopoints2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_copytopoints2

# Node $_obj_crowd01_pc_crowd_new_boolean1 (Sop/boolean::2.0)
set _obj_crowd01_pc_crowd_new_boolean1 = `run("opadd -e -n -v boolean::2.0 boolean1")`
oplocate -x `$arg2 + 8.4181500000000007` -y `$arg3 + -4.2632000000000003` $_obj_crowd01_pc_crowd_new_boolean1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_boolean1 asurface ( surface ) booleanop ( intersect ) removeinlinepoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_boolean1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_boolean1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_boolean1

# Node $_obj_crowd01_pc_crowd_new_grouppromote1 (Sop/grouppromote)
set _obj_crowd01_pc_crowd_new_grouppromote1 = `run("opadd -e -n -v grouppromote grouppromote1")`
oplocate -x `$arg2 + 6.2414100000000001` -y `$arg3 + -3.7894899999999998` $_obj_crowd01_pc_crowd_new_grouppromote1
opparm $_obj_crowd01_pc_crowd_new_grouppromote1  promotions ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_grouppromote1 totype1 ( prims ) group1 ( in )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_grouppromote1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_grouppromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_grouppromote1

# Node $_obj_crowd01_pc_crowd_new_blast4 (Sop/blast)
set _obj_crowd01_pc_crowd_new_blast4 = `run("opadd -e -n -v blast blast4")`
oplocate -x `$arg2 + 6.2414100000000001` -y `$arg3 + -5.1421200000000002` $_obj_crowd01_pc_crowd_new_blast4
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_blast4 group ( in ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_blast4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_blast4
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_blast4

# Node $_obj_crowd01_pc_crowd_new_divide1 (Sop/divide)
set _obj_crowd01_pc_crowd_new_divide1 = `run("opadd -e -n -v divide divide1")`
oplocate -x `$arg2 + 0.247059` -y `$arg3 + 3.0912000000000002` $_obj_crowd01_pc_crowd_new_divide1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_divide1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_divide1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_divide1

# Node $_obj_crowd01_pc_crowd_new_add1 (Sop/add)
set _obj_crowd01_pc_crowd_new_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + -9.3115400000000008` -y `$arg3 + -4.3426900000000002` $_obj_crowd01_pc_crowd_new_add1
opparm $_obj_crowd01_pc_crowd_new_add1  points ( 1 ) prims ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_add1 stdswitcher ( 1 1 1 ) switcher ( 1 1 ) add ( attribute ) attrname ( id )
opset -d off -r off -h off -f off -y off -t on -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_add1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_add1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_add1

# Node $_obj_crowd01_pc_crowd_new_merge2 (Sop/merge)
set _obj_crowd01_pc_crowd_new_merge2 = `run("opadd -e -n -v merge merge2")`
oplocate -x `$arg2 + -9.3126899999999999` -y `$arg3 + -3.3471199999999999` $_obj_crowd01_pc_crowd_new_merge2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_merge2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_merge2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_merge2
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output (Dop/output)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + -0.78360799999999997` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output/f1
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output/f2
chblockend
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___Version___' -v '' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 (Dop/emptyobject)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 = `run("opadd -e -n -v emptyobject emptyobject1")`
oplocate -x `$arg2 + -2.6352899999999999` -y `$arg3 + 3.1990500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$ST == 0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1/activation
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 (Dop/sopgeo)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 = `run("opadd -e -n -v sopgeo sopgeo1")`
oplocate -x `$arg2 + -2.6340400000000002` -y `$arg3 + 2.10493` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1  numstamps ( 0 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/time
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 transformtime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/transformtime
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 activation
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'constant()' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1/activation
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 soppath ( '`opinputpath("..",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry (Sop/dopimport)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry = `run("opadd -e -n -v dopimport dop_geometry")`
oplocate -x `$arg2 + 3.6318600000000001` -y `$arg3 + -1.8995500000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doposxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/doposxform
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doxform
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../transformsopoutput")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/doxform
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) importstyle ( fetch ) geodatapath ( '`stamps("..", "DATANAME", chs("../datapath"))`' ) doposxform ( doposxform ) doxform ( doxform ) adddopobjectname ( off ) pointvels ( none ) donotsim ( on )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts (Sop/dopimportrecords)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts = `run("opadd -e -n -v dopimportrecords impacts")`
oplocate -x `$arg2 + 6.3931899999999997` -y `$arg3 + -1.8601000000000001` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Impacts ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_impacts

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks (Sop/dopimportrecords)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks = `run("opadd -e -n -v dopimportrecords feedbacks")`
oplocate -x `$arg2 + 8.6226900000000004` -y `$arg3 + -1.9601299999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks doppath ( '`stamps("..", "DOPNET", "../..")`' ) objpattern ( '`stamps("..", "OBJID", arg(dopnodeobjs(".."),0))`' ) datapath ( Feedback ) record ( Impacts )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_feedbacks

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry = `run("opadd -e -n -v object_merge relationship_geometry")`
oplocate -x `$arg2 + 11.0848` -y `$arg3 + -1.89367` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opspareds '    group {  name    "folder0"       label   "Object Merge"          parm {      name        "xformtype"         baseparm        label       "Transform"         export      none    }       parm {      name        "xformpath"         baseparm        label       "Transform Object"          export      none    }       parm {      name        "invertxform"       baseparm        label       "Invert Transform"          export      none    }       parm {      name        "createptgroups"            baseparm        label       "Create Point Groups"       export      none    }       parm {      name        "ptgroupprefix"             baseparm        label       "Point Group Prefix"        export      none    }       parm {      name        "createprimgroups"          baseparm        label       "Create Primitive Groups"           export      none    }       parm {      name        "primgroupprefix"           baseparm        label       "Primitive Group Prefix"            export      none    }       parm {      name        "verbosegroups"             baseparm        label       "Verbose Group Names"       export      none    }       parm {      name        "createptstring"            baseparm        label       "Create Per-Point Path"             export      none    }       parm {      name        "createprimstring"          baseparm        label       "Create Per-Primitive Path"         export      none    }       parm {      name        "pathattrib"        baseparm        label       "Path Attribute"            export      none    }       parm {      name        "pack"      baseparm        label       "Pack Geometry Before Merging"      export      none    }       parm {      name        "pivot"             baseparm        label       "Pivot Location"            export      none    }       parm {      name        "viewportlod"       baseparm        label       "Display As"        export      none    }       parm {      name        "addpath"           baseparm        label       "Add Path Attribute"        export      none    }       parm {      name        "_separator"        baseparm        label       ""          export      none    }       multiparm {         name        "numobj"            label       "Number of Objects"         baseparm        default     1           parm {              name    "enable#"               baseparm                label   "Enable Merge #"                export  none        }       parm {              name    "objpath#"              baseparm                label   "Object #"              export  none        }       parm {              name    "group#"                baseparm                label   "Group #"               export  none        }       parm {              name    "expand#"               baseparm                label   "Expand Group #"                export  none        }   }      }      group {   name    "folder0_1"     label   "Custom Parameters"     parm {      name        "relnode"           label       "Relationship"      type        oppath      default     { "../.." }         range       { 0 1 }             parmtag     { "opfilter" "!!DOP!!" }            parmtag     { "oprelative" "." }    }     }      parm {     name    "suffixfirstgroup"      baseparm        label   "Add Suffix to First Group"     export  none     } ' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry relnode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'import toolutils\n\nnode = hou.node(".")\nsopsolver = hou.node("..")\n\n# Attempt to discover a constraint network that we\'re wired to.\nnodetypes = ["constraintnetwork", "gluenetworkconstraint", "springnetworkconstraint"]\nfor nodetype in nodetypes:\n    network = toolutils.findOutputNodeOfBaseType(sopsolver, nodetype)\n    if network:\n        return node.relativePathTo(network)\n\nreturn "../.."' -l p $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry/relnode
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry objpath1 ( '`stamps("..", "DATAPATH", chsop("relnode") + ":Relationships/" + chs(chsop("relnode") + "/relname") + "/" + chs(chsop("relnode") + "/relationship/dataname") + "/Geometry")`' ) folder0 ( 1 1 ) relnode ( relnode )
opcolor -c 0.60000002384185791 0.40000000596046448 1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_relationship_geometry

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 = `run("opadd -e -n -v object_merge IN_0")`
oplocate -x `$arg2 + 6.6320499999999996` -y `$arg3 + -3.9689399999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 = `run("opadd -e -n -v object_merge IN_1")`
oplocate -x `$arg2 + 8.4219600000000003` -y `$arg3 + -4.8520899999999996` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 = `run("opadd -e -n -v object_merge IN_2")`
oplocate -x `$arg2 + 9.9533299999999993` -y `$arg3 + -5.6324899999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 (Sop/object_merge)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 = `run("opadd -e -n -v object_merge IN_3")`
oplocate -x `$arg2 + 11.4337` -y `$arg3 + -6.4168000000000003` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3  numobj ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3 xformtype ( local ) objpath1 ( '`opinputpath("../..",opdigits($OS))`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_3

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 (Sop/switch)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -11.9916` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 input
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF==ch("../../startframe")' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1/input
chblockend
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2 (Sop/null)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -23.635999999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___toolcount___' -v '129' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opuserdata -n '___toolid___' -v 'geo0' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 (Sop/grouppromote)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 = `run("opadd -e -n -v grouppromote grouppromote1")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -14.542299999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opparm $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1  promotions ( 1 )
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 totype1 ( prims ) group1 ( in )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 = `run("opadd -e -n -v blast blast4")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -15.4161` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 group ( in ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 (Sop/scatter::2.0)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 9.7073` -y `$arg3 + -16.416499999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
chblockbegin
chadd -t 41.458333333333002 41.458333333333002 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 densityscale
chkey -t 41.458333333333002 -v 5 -m 0 -a 0 -A 0 -T a  -F 15/2 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1/densityscale
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 densityscale ( densityscale ) forcetotal ( off ) relaxiterations ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 (Sop/block_end)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 2.8697599999999999` -y `$arg3 + -23.634599999999999` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 itermethod ( pieces ) method ( merge ) useattrib ( off ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 2.8697599999999999` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 method ( input ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count (Sop/null)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count = `run("opadd -e -n -v null OUT_count")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -13.1248` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + 9.7088999999999999` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 method ( input ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 2.86816` -y `$arg3 + -19.700500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 group ( '`detail("../foreach_begin1_metadata1/","iteration",0)`' ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 (Sop/block_begin)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 = `run("opadd -e -n -v block_begin foreach_begin1_metadata1")`
oplocate -x `$arg2 + 7.0339999999999998` -y `$arg3 + -17.9649` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1 method ( metadata ) blockpath ( ../foreach_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1_metadata1

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 (Sop/blast)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 = `run("opadd -e -n -v blast blast5")`
oplocate -x `$arg2 + 7.3279699999999997` -y `$arg3 + -19.700500000000002` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 group ( '`detail("../foreach_begin1_metadata1/","iteration",0)`' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
oporder -e dop_geometry impacts feedbacks relationship_geometry IN_0 IN_1 IN_2 IN_3 attribwrangle2 calc_new_v advect init_v add_v limit_v update_N update_up update_targetP attribwrangle3 attribwrangle4 attribwrangle5 switch1 null2 grouppromote1 blast4 scatter1 foreach_end1 foreach_begin1 OUT_count foreach_begin2 blast1 foreach_begin1_metadata1 blast5 
opcf ..

# Node $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 (Dop/multisolver)
set _obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 = `run("opadd -e -n -v multisolver multisolver1")`
oplocate -x `$arg2 + -0.37176500000000001` -y `$arg3 + 0.34681499999999998` $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
oporder -e output emptyobject1 sopgeo1 sopsolver1 multisolver1 
opcf ..

# Node $_obj_crowd01_pc_crowd_new_dopimport1 (Sop/dopimport)
set _obj_crowd01_pc_crowd_new_dopimport1 = `run("opadd -e -n -v dopimport dopimport1")`
oplocate -x `$arg2 + 1.8413600000000001` -y `$arg3 + -9.8164099999999994` $_obj_crowd01_pc_crowd_new_dopimport1
chblockbegin
chadd -t 0 0 $_obj_crowd01_pc_crowd_new_dopimport1 integrateovertime
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '1/$FPS' $_obj_crowd01_pc_crowd_new_dopimport1/integrateovertime
chblockend
opparm -V 16.0.674 $_obj_crowd01_pc_crowd_new_dopimport1 doppath ( ../DOP_sopsolver ) objpattern ( '`dopobjscreatedby("../DOP_sopsolver/emptyobject1/")`' ) importstyle ( fetch ) geodatapath ( Geometry )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_crowd01_pc_crowd_new_dopimport1
opexprlanguage -s hscript $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___Version___' -v '16.0.674' $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___toolcount___' -v '594' $_obj_crowd01_pc_crowd_new_dopimport1
opuserdata -n '___toolid___' -v 'DOP_sopsolver' $_obj_crowd01_pc_crowd_new_dopimport1
oporder -e grid1 mountain1 scatter1 scatter2 crt_targetP crt_source crt_terrain scatter3 object_merge1 null1 attribwrangle1 box1 sphere1 merge1 copytopoints1 sphere2 sort1 blast2 sort2 blast3 facet1 blast1 sphere3 copytopoints2 boolean1 attribwrangle2 grouppromote1 blast4 divide1 add1 merge2 attribwrangle3 attribwrangle4 DOP_sopsolver dopimport1 
opcf ..
opset -p on $_obj_crowd01_pc_crowd_new

opcf $arg1
opcf $_obj_crowd01_pc_crowd_new
opwire -n $_obj_crowd01_pc_crowd_new_grid1 -0 $_obj_crowd01_pc_crowd_new_mountain1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_scatter1
opwire -n $_obj_crowd01_pc_crowd_new_blast3 -0 $_obj_crowd01_pc_crowd_new_scatter2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -0 $_obj_crowd01_pc_crowd_new_crt_targetP
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle4 -1 $_obj_crowd01_pc_crowd_new_crt_targetP
opwire -n $_obj_crowd01_pc_crowd_new_crt_targetP -0 $_obj_crowd01_pc_crowd_new_crt_source
opwire -n $_obj_crowd01_pc_crowd_new_scatter1 -0 $_obj_crowd01_pc_crowd_new_crt_terrain
opwire -n $_obj_crowd01_pc_crowd_new_blast2 -0 $_obj_crowd01_pc_crowd_new_scatter3
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle1 -0 $_obj_crowd01_pc_crowd_new_null1
opwire -n $_obj_crowd01_pc_crowd_new_dopimport1 -0 $_obj_crowd01_pc_crowd_new_attribwrangle1
opwire -n $_obj_crowd01_pc_crowd_new_sphere1 -0 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_box1 -1 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_sphere2 -2 $_obj_crowd01_pc_crowd_new_merge1
opwire -n $_obj_crowd01_pc_crowd_new_merge1 -0 $_obj_crowd01_pc_crowd_new_copytopoints1
opwire -n $_obj_crowd01_pc_crowd_new_null1 -1 $_obj_crowd01_pc_crowd_new_copytopoints1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_sort1
opwire -n $_obj_crowd01_pc_crowd_new_sort1 -0 $_obj_crowd01_pc_crowd_new_blast2
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_sort2
opwire -n $_obj_crowd01_pc_crowd_new_sort2 -0 $_obj_crowd01_pc_crowd_new_blast3
opwire -n $_obj_crowd01_pc_crowd_new_mountain1 -0 $_obj_crowd01_pc_crowd_new_facet1
opwire -n $_obj_crowd01_pc_crowd_new_facet1 -0 $_obj_crowd01_pc_crowd_new_blast1
opwire -n $_obj_crowd01_pc_crowd_new_sphere3 -0 $_obj_crowd01_pc_crowd_new_copytopoints2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_copytopoints2
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_boolean1
opwire -n $_obj_crowd01_pc_crowd_new_copytopoints2 -1 $_obj_crowd01_pc_crowd_new_boolean1
opwire -n $_obj_crowd01_pc_crowd_new_divide1 -0 $_obj_crowd01_pc_crowd_new_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle2 -0 $_obj_crowd01_pc_crowd_new_grouppromote1
opwire -n $_obj_crowd01_pc_crowd_new_grouppromote1 -0 $_obj_crowd01_pc_crowd_new_blast4
opwire -n $_obj_crowd01_pc_crowd_new_blast1 -0 $_obj_crowd01_pc_crowd_new_divide1
opwire -n $_obj_crowd01_pc_crowd_new_merge2 -0 $_obj_crowd01_pc_crowd_new_add1
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_merge2
opwire -n $_obj_crowd01_pc_crowd_new_attribwrangle3 -1 $_obj_crowd01_pc_crowd_new_merge2
opwire -n $_obj_crowd01_pc_crowd_new_scatter2 -0 $_obj_crowd01_pc_crowd_new_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_scatter3 -0 $_obj_crowd01_pc_crowd_new_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_crt_source -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opwire -n $_obj_crowd01_pc_crowd_new_crt_terrain -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_output
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_emptyobject1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1
opcf $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_add_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_limit_v
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_N
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_advect -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_up
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_dop_geometry -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_0 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_IN_1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle5
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_update_targetP -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_init_v -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_null2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_attribwrangle3 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_grouppromote1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast4 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_calc_new_v -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_end1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_switch1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_OUT_count
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_scatter1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin2
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_foreach_begin1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1_blast5
opcf ..
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopgeo1 -0 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opwire -n $_obj_crowd01_pc_crowd_new_DOP_sopsolver_sopsolver1 -1 $_obj_crowd01_pc_crowd_new_DOP_sopsolver_multisolver1
opcf ..
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_crowd01_pc_crowd_new
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_crowd01_pc_crowd_new
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="split" label="split" icon="OBJ_geo">
    <helpURL>operator:Object/geo</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Object/geo</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('geo'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_grid1 (Object/geo)
set _obj_grid1 = `run("opadd -e -n -v geo grid1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1
opspareds '    group {         name    "stdswitcher4"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher4_1"         label   "Render"          parm {             name    "shop_materialpath"             baseparm             label   "Material"             export  none         }         parm {             name    "shop_materialopts"             baseparm             label   "Options"             invisible             export  none         }         parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "viewportlod"             label   "Display As"             type    ordinal             default { "full" }             help    "Choose how the object\'s geometry should be rendered in the viewport"             menu {                 "full"      "Full Geometry"                 "points"    "Point Cloud"                 "box"       "Bounding Box"                 "centroid"  "Centroid"                 "hidden"    "Hidden"                 "subd"      "Subdivision Surface / Curves"             }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendervisibility"             label   "Render Visibility"             type    string             default { "*" }             menureplace {                 "*"                             "Visible to all"                 "primary"                       "Visible only to primary rays"                 "primary|shadow"                "Visible only to primary and shadow rays"                 "-primary"                      "Invisible to primary rays (Phantom)"                 "-diffuse"                      "Invisible to diffuse rays"                 "-diffuse&-reflect&-refract"    "Invisible to secondary rays"                 ""                              "Invisible (Unrenderable)"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendervisibility" }             parmtag { "spare_category" "Render" }         }         parm {             name    "vm_rendersubd"             label   "Render Polygons As Subdivision (Mantra)"             type    toggle             default { "0" }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "rendersubd" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdstyle"             label   "Subdivision Style"             type    string             default { "mantra_catclark" }             hidewhen "{ vm_rendersubd == 0 }"             menu {                 "mantra_catclark"   "Mantra Catmull-Clark"                 "osd_catclark"      "OpenSubdiv Catmull-Clark"             }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdstyle" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_subdgroup"             label   "Subdivision Group"             type    string             default { "" }             hidewhen "{ vm_rendersubd == 0 }"             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "subdgroup" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_quality"             label   "Open Subdiv Quality"             type    float             default { "1" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_quality" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_vtxinterp"             label   "OSD Vtx Interp"             type    integer             default { "2" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "No vertex interpolation"                 "1" "Edges only"                 "2" "Edges and Corners"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_vtxinterp" }             parmtag { "spare_category" "Geometry" }         }         parm {             name    "vm_osd_fvarinterp"             label   "OSD FVar Interp"             type    integer             default { "4" }             hidewhen "{ vm_rendersubd == 0 vm_subdstyle != osd_catclark }"             menu {                 "0" "Smooth everywhere"                 "1" "Sharpen corners only"                 "2" "Sharpen edges and corners"                 "3" "Sharpen edges and propagated corners"                 "4" "Sharpen all boundaries"                 "5" "Bilinear interpolation"             }             range   { 0 10 }             parmtag { "mantra_class" "object" }             parmtag { "mantra_name" "osd_fvarinterp" }             parmtag { "spare_category" "Geometry" }         }         group {             name    "folder0"             label   "Shading"              parm {                 name    "categories"                 label   "Categories"                 type    string                 default { "" }                 help    "A list of tags which can be used to select the object"                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "reflectmask"                 label   "Reflection Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be reflected on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "refractmask"                 label   "Refraction Mask"                 type    oplist                 default { "*" }                 help    "Objects that will be refracted on this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightmask"                 label   "Light Mask"                 type    oplist                 default { "*" }                 help    "Lights that illuminate this object."                 parmtag { "opexpand" "1" }                 parmtag { "opfilter" "!!OBJ/LIGHT!!" }                 parmtag { "oprelative" "/obj" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "lightcategories"                 label   "Light Selection"                 type    string                 default { "*" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilter"                 label   "Volume Filter"                 type    string                 default { "box" }                 menu {                     "box"       "Box Filter"                     "gaussian"  "Gaussian"                     "bartlett"  "Bartlett (triangle)"                     "catrom"    "Catmull-Rom"                     "hanning"   "Hanning"                     "blackman"  "Blackman"                     "sinc"      "Sinc (sharpening)"                 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filter" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_volumefilterwidth"                 label   "Volume Filter Width"                 type    float                 default { "1" }                 range   { 0.001 5 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "filterwidth" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_matte"                 label   "Matte shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "matte" }                 parmtag { "spare_category" "Shading" }             }             parm {                 name    "vm_rayshade"                 label   "Raytrace Shading"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rayshade" }                 parmtag { "spare_category" "Shading" }             }         }          group {             name    "folder0_1"             label   "Sampling"              parm {                 name    "geo_velocityblur"                 label   "Geometry Velocity Blur"                 type    toggle                 default { "0" }                 disablewhen "{ allowmotionblur == 0 }"                 parmtag { "spare_category" "Sampling" }             }         }          group {             name    "folder0_2"             label   "Dicing"              parm {                 name    "vm_shadingquality"                 label   "Shading Quality"                 type    float                 default { "1" }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "shadingquality" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_flatness"                 label   "Dicing Flatness"                 type    float                 default { "0.05" }                 range   { 0 1 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "flatness" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_raypredice"                 label   "Ray Predicing"                 type    integer                 default { "0" }                 menu {                     "0" "Disable Predicing"                     "1" "Full Predicing"                     "2" "Precompute Bounds"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "raypredice" }                 parmtag { "spare_category" "Dicing" }             }             parm {                 name    "vm_curvesurface"                 label   "Shade Curves As Surfaces"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "curvesurface" }                 parmtag { "spare_category" "Dicing" }             }         }          group {             name    "folder0_3"             label   "Geometry"              parm {                 name    "vm_rmbackface"                 label   "Backface Removal"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rmbackface" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "shop_geometrypath"                 label   "Procedural Shader"                 type    oppath                 default { "" }                 parmtag { "opfilter" "!!SHOP/GEOMETRY!!" }                 parmtag { "oprelative" "." }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_forcegeometry"                 label   "Force Procedural Geometry Output"                 type    toggle                 default { "1" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_rendersubdcurves"                 label   "Render Polygon Curves As Subdivision (Mantra)"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "rendersubdcurves" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpoints"                 label   "Render As Points (Mantra)"                 type    integer                 default { "2" }                 menu {                     "0" "No Point Rendering"                     "1" "Render Only Points"                     "2" "Render Unconnected Points"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_renderpointsas"                 label   "Render Points As (Mantra)"                 type    integer                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 menu {                     "0" "Spheres"                     "1" "Circles"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "renderpointsas" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_usenforpoints"                 label   "Use N For Point Rendering"                 type    toggle                 default { "0" }                 disablewhen "{ vm_renderpoints == 0 }"                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "usenforpoints" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pointscale"                 label   "Point Scale"                 type    float                 default { "1" }                 disablewhen "{ vm_renderpoints == 0 }"                 range   { 0! 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pointscale" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_pscalediameter"                 label   "Treat Point Scale as Diameter Instead of Radius"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "pscalediameter" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_metavolume"                 label   "Metaballs as Volume"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "metavolume" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_coving"                 label   "Coving"                 type    integer                 default { "1" }                 menu {                     "0" "Disable Coving"                     "1" "Coving for displacement/sub-d"                     "2" "Coving for all primitives"                 }                 range   { 0 10 }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "coving" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_materialoverride"                 label   "Material Override"                 type    string                 default { "compact" }                 menu {                     "none"      "Disabled"                     "full"      "Evaluate for Each Primitve/Point"                     "compact"   "Evaluate Once"                 }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_overridedetail"                 label   "Ignore Geometry Attribute Shaders"                 type    toggle                 default { "0" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "overridedetail" }                 parmtag { "spare_category" "Geometry" }             }             parm {                 name    "vm_procuseroottransform"                 label   "Proc Use Root Transform"                 type    toggle                 default { "1" }                 parmtag { "mantra_class" "object" }                 parmtag { "mantra_name" "procuseroottransform" }                 parmtag { "spare_category" "Geometry" }             }         }      }      group {         name    "stdswitcher4_2"         label   "Misc"          parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }         parm {             name    "vport_shadeopen"             baseparm             label   "Shade Open Curves In Viewport"             export  none         }         parm {             name    "vport_displayassubdiv"             baseparm             label   "Display as Subdivision in Viewport"             invisible             export  none         }         parm {             name    "vport_onionskin"             baseparm             label   "Onion Skinning"             export  none         }     }  ' $_obj_grid1
opset -S on $_obj_grid1
chautoscope $_obj_grid1 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -x off $_obj_grid1
opexprlanguage -s hscript $_obj_grid1
opcf $_obj_grid1

# Node $_obj_grid1_attribwrangle1 (Sop/attribwrangle)
set _obj_grid1_attribwrangle1 = `run("opadd -e -n -v attribwrangle attribwrangle1")`
oplocate -x `$arg2 + 2.6326925093112852` -y `$arg3 + -6.1066792020142611` $_obj_grid1_attribwrangle1
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "seed"         label   "Seed"         type    float         default { "0" }         range   { 0 1 }     }     multiparm {         name    "folder2"         label    "sizes"         default 0          parm {             name    "size#"             label   "size"             type    float             default { "0" }             range   { 0 10 }         }         parm {             name    "probability#"             label   "probability"             type    float             default { "0" }             range   { 0 1 }         }     }  ' $_obj_grid1_attribwrangle1
opparm $_obj_grid1_attribwrangle1  bindings ( 0 ) groupbindings ( 0 ) folder2 ( 1 )
opparm $_obj_grid1_attribwrangle1 class ( primitive ) snippet ( 'float size = primintrinsic(0, "measuredarea", @primnum);\n\nvector min,max;\ngetbbox(0,min,max);\nvector bound = abs(max-min);\n\nfloat rand = rand((@primnum + ch("seed")+0.21) + (ch("seed")));\nif(rand <= ch("probability1"))\n{\n    if(bound.x>ch("size1") && bound.y>ch("size1"))\n    {\n        rand = rand((@primnum + ch("seed")+1.21) + (ch("seed") *2.3));\n        \n    }\n}\n\n' ) folder2 ( 1 ) size1 ( 12 ) probability1 ( 1 )
opcolor -c 1 0.80000001192092896 0 $_obj_grid1_attribwrangle1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_attribwrangle1
opexprlanguage -s hscript $_obj_grid1_attribwrangle1
opuserdata -n '___Version___' -v '' $_obj_grid1_attribwrangle1
opcf ..
opcf $_obj_grid1

# Node $_obj_grid1_grid1 (Sop/grid)
set _obj_grid1_grid1 = `run("opadd -e -n -v grid grid1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1_grid1
opparm -V 16.5.268 $_obj_grid1_grid1 orient ( xy ) size ( 18 13 ) rows ( 2 ) cols ( 2 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_grid1
opexprlanguage -s hscript $_obj_grid1_grid1

# Node $_obj_grid1_clip1 (Sop/clip)
set _obj_grid1_clip1 = `run("opadd -e -n -v clip clip1")`
oplocate -x `$arg2 + -1.5265566588595902e-16` -y `$arg3 + -2.2203463083138733` $_obj_grid1_clip1
chblockbegin
chadd -t 0 0 $_obj_grid1_clip1 originx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'bbox(opinputpath(".",0),D_XMAX)-12' $_obj_grid1_clip1/originx
chblockend
opparm -V 16.5.268 $_obj_grid1_clip1 clipop ( both ) origin ( originx 0 0 ) dir ( 1 0 0 ) newg ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_clip1
opexprlanguage -s hscript $_obj_grid1_clip1
opuserdata -n '___Version___' -v '16.5.268' $_obj_grid1_clip1

# Node $_obj_grid1_clip2 (Sop/clip)
set _obj_grid1_clip2 = `run("opadd -e -n -v clip clip2")`
oplocate -x `$arg2 + -8.3266726846886741e-17` -y `$arg3 + -3.5909610192133536` $_obj_grid1_clip2
chblockbegin
chadd -t 0 0 $_obj_grid1_clip2 originy
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'bbox(opinputpath(".",0),D_YMAX)-12' $_obj_grid1_clip2/originy
chblockend
opparm -V 16.5.268 $_obj_grid1_clip2 group ( above_plane ) clipop ( both ) origin ( 0 originy 0 ) newg ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_clip2
opexprlanguage -s hscript $_obj_grid1_clip2
opuserdata -n '___Version___' -v '16.5.268' $_obj_grid1_clip2

# Node $_obj_grid1_repeat_end1 (Sop/block_end)
set _obj_grid1_repeat_end1 = `run("opadd -e -n -v block_end repeat_end1")`
oplocate -x `$arg2 + 2.6372925193668681` -y `$arg3 + -9.6430048798061367` $_obj_grid1_repeat_end1
opparm -V 16.5.268 $_obj_grid1_repeat_end1 itermethod ( count ) blockpath ( ../repeat_begin1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_grid1_repeat_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_repeat_end1
opexprlanguage -s hscript $_obj_grid1_repeat_end1

# Node $_obj_grid1_repeat_begin1 (Sop/block_begin)
set _obj_grid1_repeat_begin1 = `run("opadd -e -n -v block_begin repeat_begin1")`
oplocate -x `$arg2 + 2.6372925193668681` -y `$arg3 + -2.2231963006785183` $_obj_grid1_repeat_begin1
opparm -V 16.5.268 $_obj_grid1_repeat_begin1 blockpath ( ../repeat_end1 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_grid1_repeat_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_repeat_begin1
opexprlanguage -s hscript $_obj_grid1_repeat_begin1

# Node $_obj_grid1_foreach_end1 (Sop/block_end)
set _obj_grid1_foreach_end1 = `run("opadd -e -n -v block_end foreach_end1")`
oplocate -x `$arg2 + 2.6372925193668681` -y `$arg3 + -7.9276604953083663` $_obj_grid1_foreach_end1
opparm -V 16.5.268 $_obj_grid1_foreach_end1 itermethod ( pieces ) method ( merge ) class ( primitive ) useattrib ( off ) attrib ( name ) blockpath ( ../foreach_begin1 ) templatepath ( ../foreach_begin1 )
opcolor -c 0.76499998569488525 1 0.57599997520446777 $_obj_grid1_foreach_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_foreach_end1
opexprlanguage -s hscript $_obj_grid1_foreach_end1

# Node $_obj_grid1_foreach_begin1 (Sop/block_begin)
set _obj_grid1_foreach_begin1 = `run("opadd -e -n -v block_begin foreach_begin1")`
oplocate -x `$arg2 + 2.6372925193668681` -y `$arg3 + -4.1659371045161526` $_obj_grid1_foreach_begin1
opparm -V 16.5.268 $_obj_grid1_foreach_begin1 method ( piece ) blockpath ( ../foreach_end1 )
opcolor -c 0.76499998569488525 1 0.57599997520446777 $_obj_grid1_foreach_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_foreach_begin1
opexprlanguage -s hscript $_obj_grid1_foreach_begin1
oporder -e grid1 clip1 clip2 repeat_end1 repeat_begin1 foreach_end1 foreach_begin1 attribwrangle1 
opcf ..
opset -p on $_obj_grid1

opcf $arg1
opcf $_obj_grid1
opwire -n $_obj_grid1_grid1 -0 $_obj_grid1_clip1
opwire -n $_obj_grid1_clip1 -0 $_obj_grid1_clip2
opwire -n $_obj_grid1_foreach_end1 -0 $_obj_grid1_repeat_end1
opwire -n $_obj_grid1_grid1 -0 $_obj_grid1_repeat_begin1
opwire -n $_obj_grid1_attribwrangle1 -0 $_obj_grid1_foreach_end1
opwire -n $_obj_grid1_repeat_begin1 -0 $_obj_grid1_foreach_begin1
opwire -n $_obj_grid1_foreach_begin1 -0 $_obj_grid1_attribwrangle1
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_grid1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_grid1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
